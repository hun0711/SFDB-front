{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\carax\\\\Desktop\\\\\\uC0AC\\uC774\\uB4DC \\uD504\\uB85C\\uC81D\\uD2B8\\\\SFDB-Project\\\\front\\\\src\\\\pages\\\\user\\\\KakaoLogin.jsx\";\nimport React from 'react';\nimport axios from 'axios';\nimport config from '../../config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst KakaoLogin = () => {\n  const kakaoRestAPIKey = config.kakaoClientId;\n  const kakaoRedirectUri = config.kakaoRedirectUri;\n  const kakaoURL = `https://kauth.kakao.com/oauth/authorize?client_id=${kakaoRestAPIKey}&redirect_uri=${kakaoRedirectUri}&response_type=code`;\n  const handleKakaoLogin = () => {\n    window.location.href = kakaoURL;\n    const urlSearchParams = new URLSearchParams(window.location.search);\n    const code = urlSearchParams.get('code');\n    if (code) {\n      const grantType = 'authorization_code';\n      const data = `grant_type=${grantType}&client_id=${kakaoRestAPIKey}&redirect_uri=${kakaoRedirectUri}&code=${code}`;\n      axios.post('https://kauth.kakao.com/oauth/token', data, {\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded;charset=utf-8'\n        }\n      }).then(response => {\n        const accessToken = response.data.access_token;\n        console.log('Access Token:', accessToken);\n      }).catch(error => {\n        console.error('Error exchanging code for access token:', error);\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: handleKakaoLogin,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/images/logo/kakao\\uC644\\uC131\\uD6153.png\",\n        alt: \"\\uCE74\\uCE74\\uC624 \\uB85C\\uADF8\\uC778\",\n        style: {\n          width: '215px',\n          height: '50px',\n          cursor: 'pointer'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_c = KakaoLogin;\nexport default KakaoLogin;\nvar _c;\n$RefreshReg$(_c, \"KakaoLogin\");","map":{"version":3,"names":["React","axios","config","jsxDEV","_jsxDEV","Fragment","_Fragment","KakaoLogin","kakaoRestAPIKey","kakaoClientId","kakaoRedirectUri","kakaoURL","handleKakaoLogin","window","location","href","urlSearchParams","URLSearchParams","search","code","get","grantType","data","post","headers","then","response","accessToken","access_token","console","log","catch","error","children","onClick","src","alt","style","width","height","cursor","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/carax/Desktop/사이드 프로젝트/SFDB-Project/front/src/pages/user/KakaoLogin.jsx"],"sourcesContent":["import React from 'react';\r\nimport axios from 'axios';\r\nimport config from '../../config';\r\n\r\nconst KakaoLogin = () => {\r\n  const kakaoRestAPIKey = config.kakaoClientId;\r\n  const kakaoRedirectUri = config.kakaoRedirectUri;\r\n  const kakaoURL = `https://kauth.kakao.com/oauth/authorize?client_id=${kakaoRestAPIKey}&redirect_uri=${kakaoRedirectUri}&response_type=code`;\r\n\r\n  const handleKakaoLogin = () => {\r\n    window.location.href = kakaoURL;\r\n    \r\n    const urlSearchParams = new URLSearchParams(window.location.search);\r\n    const code = urlSearchParams.get('code');\r\n    \r\n    if (code) {\r\n      const grantType = 'authorization_code';\r\n      const data = `grant_type=${grantType}&client_id=${kakaoRestAPIKey}&redirect_uri=${kakaoRedirectUri}&code=${code}`;\r\n      axios\r\n        .post('https://kauth.kakao.com/oauth/token', data, {\r\n          headers: {\r\n            'Content-Type': 'application/x-www-form-urlencoded;charset=utf-8',\r\n          },\r\n        })\r\n        .then((response) => {\r\n          const accessToken = response.data.access_token;\r\n          console.log('Access Token:', accessToken);\r\n\r\n        })\r\n        .catch((error) => {\r\n          console.error('Error exchanging code for access token:', error);\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div onClick={handleKakaoLogin}>\r\n        <img\r\n          src='/images/logo/kakao완성형3.png'\r\n          alt='카카오 로그인'\r\n          style={{ width: '215px', height: '50px', cursor: 'pointer' }}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default KakaoLogin;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAElC,MAAMC,UAAU,GAAGA,CAAA,KAAM;EACvB,MAAMC,eAAe,GAAGN,MAAM,CAACO,aAAa;EAC5C,MAAMC,gBAAgB,GAAGR,MAAM,CAACQ,gBAAgB;EAChD,MAAMC,QAAQ,GAAI,qDAAoDH,eAAgB,iBAAgBE,gBAAiB,qBAAoB;EAE3I,MAAME,gBAAgB,GAAGA,CAAA,KAAM;IAC7BC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAGJ,QAAQ;IAE/B,MAAMK,eAAe,GAAG,IAAIC,eAAe,CAACJ,MAAM,CAACC,QAAQ,CAACI,MAAM,CAAC;IACnE,MAAMC,IAAI,GAAGH,eAAe,CAACI,GAAG,CAAC,MAAM,CAAC;IAExC,IAAID,IAAI,EAAE;MACR,MAAME,SAAS,GAAG,oBAAoB;MACtC,MAAMC,IAAI,GAAI,cAAaD,SAAU,cAAab,eAAgB,iBAAgBE,gBAAiB,SAAQS,IAAK,EAAC;MACjHlB,KAAK,CACFsB,IAAI,CAAC,qCAAqC,EAAED,IAAI,EAAE;QACjDE,OAAO,EAAE;UACP,cAAc,EAAE;QAClB;MACF,CAAC,CAAC,CACDC,IAAI,CAAEC,QAAQ,IAAK;QAClB,MAAMC,WAAW,GAAGD,QAAQ,CAACJ,IAAI,CAACM,YAAY;QAC9CC,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEH,WAAW,CAAC;MAE3C,CAAC,CAAC,CACDI,KAAK,CAAEC,KAAK,IAAK;QAChBH,OAAO,CAACG,KAAK,CAAC,yCAAyC,EAAEA,KAAK,CAAC;MACjE,CAAC,CAAC;IACN;EACF,CAAC;EAED,oBACE5B,OAAA,CAAAE,SAAA;IAAA2B,QAAA,eACE7B,OAAA;MAAK8B,OAAO,EAAEtB,gBAAiB;MAAAqB,QAAA,eAC7B7B,OAAA;QACE+B,GAAG,EAAC,2CAA4B;QAChCC,GAAG,EAAC,uCAAS;QACbC,KAAK,EAAE;UAAEC,KAAK,EAAE,OAAO;UAAEC,MAAM,EAAE,MAAM;UAAEC,MAAM,EAAE;QAAU;MAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9D;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EAAC,gBACN,CAAC;AAEP,CAAC;AAACC,EAAA,GA1CItC,UAAU;AA4ChB,eAAeA,UAAU;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}