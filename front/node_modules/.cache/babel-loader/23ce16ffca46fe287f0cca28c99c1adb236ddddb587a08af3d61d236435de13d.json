{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\carax\\\\Desktop\\\\\\uC0AC\\uC774\\uB4DC \\uD504\\uB85C\\uC81D\\uD2B8\\\\SFDB-Project\\\\front\\\\src\\\\pages\\\\user\\\\ReleaseSoon.jsx\",\n  _s = $RefreshSig$();\nimport * as React from 'react';\nimport Title from './Title';\nimport TheatersIcon from '@mui/icons-material/Theaters';\nimport { useEffect } from 'react';\nimport { releaseSoonMovieDB } from '../../axios/main/movieLogic';\nimport { useState } from 'react';\nimport { Card, CardContent, Typography } from '@mui/material';\nimport { useSnackbar } from 'notistack';\nimport { useNavigate } from 'react-router';\nimport { firebaseStorage } from '../../utils/firebase';\nimport { getYouTubeVideoByQuery } from '../../utils/youtubeApi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ReleaseSoon({\n  userInfo\n}) {\n  _s();\n  const [releaseSoonMovies, setReleaseSoonMovies] = useState([]);\n  const [posterUrls, setPosterUrls] = useState();\n  const [trailerId, setTrailerId] = useState(null);\n  const [alertOn, setAlertOn] = useState(false);\n  const {\n    enqueueSnackbar\n  } = useSnackbar();\n  useEffect(() => {\n    const getReleaseSoonMovie = async () => {\n      try {\n        const res = await releaseSoonMovieDB();\n        setReleaseSoonMovies(res[0]);\n      } catch (error) {\n        console.log('개봉 예정 영화 로드 실패 : ', error);\n      }\n    };\n    getReleaseSoonMovie();\n  }, []);\n  useEffect(() => {\n    const getPosterUrls = async () => {\n      const storageRef = firebaseStorage.ref(`poster/${releaseSoonMovies.movieId}${releaseSoonMovies.movieSeq}.jpg`);\n      try {\n        const url = await storageRef.getDownloadURL();\n        setPosterUrls(url);\n      } catch (error) {\n        console.log(\"포스터 URL 페칭 에러 : \", error);\n        return null;\n      }\n    };\n    getPosterUrls();\n  }, [releaseSoonMovies]);\n  useEffect(() => {\n    const searchMovieTrailer = async () => {\n      try {\n        const query = releaseSoonMovies.title + releaseSoonMovies.prodYear + '예고편';\n        console.log(query);\n        const searchResults = await getYouTubeVideoByQuery(query);\n        if (searchResults && searchResults.items && searchResults.items.length > 0) {\n          const topVideo = searchResults.items[0];\n          setTrailerId(topVideo.id.videoId);\n        }\n      } catch (error) {\n        console.log('영화 예고편 검색 실패 : ', error);\n      }\n    };\n    if (releaseSoonMovies.title !== undefined && releaseSoonMovies.prodYear !== undefined) {\n      searchMovieTrailer();\n    }\n  }, [releaseSoonMovies.title, releaseSoonMovies.prodYear]);\n\n  /* Style */\n  const releaseSoonSectiontyle = {\n    minWidth: '600px',\n    maxWidth: '600px',\n    minHeight: '150px',\n    marginTop: '10px',\n    display: 'flex',\n    alignItems: 'center',\n    flexDirection: 'row'\n  };\n  const videoStyle = {\n    marginTop: '10px',\n    marginBottom: '10px',\n    marginLeft: '10px',\n    width: '400px',\n    minWidth: '300px',\n    maxWidth: '400px',\n    height: '250px',\n    minHeight: '250px',\n    maxHeight: '250px'\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex'\n      },\n      children: [/*#__PURE__*/_jsxDEV(TheatersIcon, {\n        style: {\n          marginLeft: '15px',\n          marginRight: '5px',\n          marginTop: '3px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Title, {\n        children: \"\\uAC1C\\uBD09 \\uC608\\uC815\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 85\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: releaseSoonSectiontyle,\n      children: [/*#__PURE__*/_jsxDEV(Card, {\n        sx: {\n          maxWidth: 250,\n          height: 250,\n          mx: 2,\n          border: 'none',\n          marginRight: '10px'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: posterUrls,\n          alt: releaseSoonMovies.title,\n          style: {\n            width: '100%',\n            height: '250px',\n            borderRadius: '3px 3px 3px 3px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: videoStyle,\n        children: trailerId && /*#__PURE__*/_jsxDEV(\"iframe\", {\n          width: \"100%\",\n          height: \"100%\",\n          src: `https://www.youtube.com/embed/${trailerId}`,\n          allowFullScreen: true,\n          style: {\n            border: 'none',\n            borderRadius: '5px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 4\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n_s(ReleaseSoon, \"K++SqjwuNoAyQ/oLkLGhhCrohoA=\", false, function () {\n  return [useSnackbar];\n});\n_c = ReleaseSoon;\nvar _c;\n$RefreshReg$(_c, \"ReleaseSoon\");","map":{"version":3,"names":["React","Title","TheatersIcon","useEffect","releaseSoonMovieDB","useState","Card","CardContent","Typography","useSnackbar","useNavigate","firebaseStorage","getYouTubeVideoByQuery","jsxDEV","_jsxDEV","Fragment","_Fragment","ReleaseSoon","userInfo","_s","releaseSoonMovies","setReleaseSoonMovies","posterUrls","setPosterUrls","trailerId","setTrailerId","alertOn","setAlertOn","enqueueSnackbar","getReleaseSoonMovie","res","error","console","log","getPosterUrls","storageRef","ref","movieId","movieSeq","url","getDownloadURL","searchMovieTrailer","query","title","prodYear","searchResults","items","length","topVideo","id","videoId","undefined","releaseSoonSectiontyle","minWidth","maxWidth","minHeight","marginTop","display","alignItems","flexDirection","videoStyle","marginBottom","marginLeft","width","height","maxHeight","children","style","marginRight","fileName","_jsxFileName","lineNumber","columnNumber","sx","mx","border","src","alt","borderRadius","allowFullScreen","_c","$RefreshReg$"],"sources":["C:/Users/carax/Desktop/사이드 프로젝트/SFDB-Project/front/src/pages/user/ReleaseSoon.jsx"],"sourcesContent":["import * as React from 'react';\nimport Title from './Title';\nimport TheatersIcon from '@mui/icons-material/Theaters';\nimport { useEffect } from 'react';\nimport { releaseSoonMovieDB } from '../../axios/main/movieLogic';\nimport { useState } from 'react';\nimport { Card, CardContent, Typography } from '@mui/material';\nimport { useSnackbar } from 'notistack';\nimport { useNavigate } from 'react-router';\nimport { firebaseStorage } from '../../utils/firebase';\nimport { getYouTubeVideoByQuery } from '../../utils/youtubeApi';\n\nexport default function ReleaseSoon({ userInfo }) {\n  const [releaseSoonMovies , setReleaseSoonMovies] = useState([])\n  const [posterUrls, setPosterUrls] = useState();\n  const [trailerId, setTrailerId] = useState(null);\n  const [alertOn, setAlertOn] = useState(false)\n  const { enqueueSnackbar } = useSnackbar(); \n\n  useEffect(() => {\n  const getReleaseSoonMovie = async() => {\n    try {\n      const res = await releaseSoonMovieDB()\n      setReleaseSoonMovies(res[0])\n    } catch (error) {\n      console.log('개봉 예정 영화 로드 실패 : ', error);\n    }\n  }\n  getReleaseSoonMovie()\n  },[])\n\n  useEffect(() => {\n    const getPosterUrls = async () => {\n        const storageRef = firebaseStorage.ref(`poster/${releaseSoonMovies.movieId}${releaseSoonMovies.movieSeq}.jpg`);\n        try {\n          const url = await storageRef.getDownloadURL();\n          setPosterUrls(url);\n        } catch (error) {\n          console.log(\"포스터 URL 페칭 에러 : \" , error);\n          return null;\n        }\n    };\n    getPosterUrls();\n  }, [releaseSoonMovies]);\n\n  useEffect(() => {\n    const searchMovieTrailer = async () => {\n      try {\n        const query = releaseSoonMovies.title + releaseSoonMovies.prodYear + '예고편';\n        console.log(query);\n        const searchResults = await getYouTubeVideoByQuery(query)\n        if(searchResults && searchResults.items && searchResults.items.length > 0) {\n          const topVideo = searchResults.items[0];\n          setTrailerId(topVideo.id.videoId)\n        }\n      } catch (error) {\n        console.log('영화 예고편 검색 실패 : ', error);\n      } \n    }\n    if (releaseSoonMovies.title !== undefined && releaseSoonMovies.prodYear !== undefined) {\n      searchMovieTrailer()\n    }\n  },[releaseSoonMovies.title, releaseSoonMovies.prodYear]);\n\n\n  /* Style */\n  const releaseSoonSectiontyle = {\n    minWidth: '600px',\n    maxWidth: '600px',\n    minHeight: '150px',\n    marginTop: '10px',\n    display: 'flex',\n    alignItems: 'center',\n    flexDirection: 'row'\n  };\n\n  const videoStyle = {\n    marginTop: '10px',\n    marginBottom: '10px',\n    marginLeft: '10px',\n    width: '400px',\n    minWidth: '300px',\n    maxWidth: '400px',\n    height: '250px',\n    minHeight: '250px',\n    maxHeight: '250px'\n  } \n\n  return (\n    <>\n    <div style={{display:'flex'}}>\n      <TheatersIcon style={{marginLeft:'15px',marginRight:'5px' ,marginTop:'3px'}}/><Title>개봉 예정</Title>\n    </div>\n\n    <div style={releaseSoonSectiontyle}>\n    <Card sx={{ maxWidth: 250, height: 250, mx: 2, border: 'none', marginRight: '10px'}}>\n        <img\n                src={posterUrls}\n                alt={releaseSoonMovies.title}\n                style={{ width: '100%', height: '250px', borderRadius: '3px 3px 3px 3px'}}\n              />\n            </Card>\n\n    \n   <div style={videoStyle}>\n   {/* 동영상 삽입 */}\n   {trailerId && (\n            <iframe\n              width=\"100%\"\n              height=\"100%\"\n              src={`https://www.youtube.com/embed/${trailerId}`}\n              allowFullScreen\n              style={{ border: 'none', borderRadius: '5px' }} \n            ></iframe>\n          )}\n   </div>\n    </div>\n    </>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}