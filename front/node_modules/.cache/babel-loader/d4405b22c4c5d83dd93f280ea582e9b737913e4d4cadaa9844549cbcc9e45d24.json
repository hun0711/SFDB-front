{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\carax\\\\Desktop\\\\\\uC0AC\\uC774\\uB4DC \\uD504\\uB85C\\uC81D\\uD2B8\\\\SFDB-Project\\\\front\\\\src\\\\pages\\\\user\\\\NaverLogin.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport config from \"../../config\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NaverLogin = () => {\n  _s();\n  const [loginAlert, setLoginAlert] = useState(null);\n  const initializeNaverLogin = () => {\n    const naverLogin = new window.naver.LoginWithNaverId({\n      clientId: config.naverClientId,\n      callbackUrl: config.naverRedirectUri,\n      clientSecret: config.naverClientSecret,\n      isPopup: true,\n      loginButton: {\n        color: 'green',\n        type: 3,\n        height: '50'\n      }\n    });\n\n    // 로그인 성공 시\n    naverLogin.getLoginStatus(status => {\n      if (status) {\n        const userData = naverLogin.user;\n\n        // 이제 Axios를 사용하여 사용자 데이터를 백엔드로 보낼 수 있습니다\n        axios.post(\"/api/naverSocialLogin\", userData).then(response => {\n          // 백엔드로부터의 응답을 처리하려면 이 곳에서 처리하시면 됩니다\n          console.log(\"사용자 데이터가 성공적으로 백엔드로 전송되었습니다:\", response.data);\n        }).catch(error => {\n          // Axios 요청 중 발생한 오류를 처리하려면 이 곳에서 처리하시면 됩니다\n          console.error(\"사용자 데이터를 백엔드로 전송하는 중 오류가 발생했습니다:\", error);\n        });\n      }\n    });\n    naverLogin.init();\n  };\n  useEffect(() => {\n    // 네이버 SDK 스크립트 로드\n    const script = document.createElement(\"script\");\n    script.src = \"https://static.nid.naver.com/js/naveridlogin_js_sdk_2.0.2.js\";\n    script.charset = \"utf-8\";\n    script.onload = () => {\n      initializeNaverLogin();\n    };\n    document.body.appendChild(script);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"naverIdLogin\",\n    style: {\n      textAlign: 'center'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(NaverLogin, \"IAMG+CfdV3et90FHOUBrrtE8c1M=\");\n_c = NaverLogin;\nexport default NaverLogin;\nvar _c;\n$RefreshReg$(_c, \"NaverLogin\");","map":{"version":3,"names":["React","useEffect","useState","config","jsxDEV","_jsxDEV","NaverLogin","_s","loginAlert","setLoginAlert","initializeNaverLogin","naverLogin","window","naver","LoginWithNaverId","clientId","naverClientId","callbackUrl","naverRedirectUri","clientSecret","naverClientSecret","isPopup","loginButton","color","type","height","getLoginStatus","status","userData","user","axios","post","then","response","console","log","data","catch","error","init","script","document","createElement","src","charset","onload","body","appendChild","id","style","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/carax/Desktop/사이드 프로젝트/SFDB-Project/front/src/pages/user/NaverLogin.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport config from \"../../config\";\r\n\r\nconst NaverLogin = () => {\r\n  const [loginAlert, setLoginAlert] = useState(null);\r\n\r\n  const initializeNaverLogin = () => {\r\n    const naverLogin = new window.naver.LoginWithNaverId({\r\n      clientId: config.naverClientId,\r\n      callbackUrl: config.naverRedirectUri,\r\n      clientSecret: config.naverClientSecret,\r\n      isPopup: true,\r\n      loginButton:{color: 'green', type: 3, height: '50'}\r\n    });\r\n\r\n       // 로그인 성공 시\r\n       naverLogin.getLoginStatus((status) => {\r\n        if (status) {\r\n          const userData = naverLogin.user;\r\n\r\n          \r\n          // 이제 Axios를 사용하여 사용자 데이터를 백엔드로 보낼 수 있습니다\r\n          axios.post(\"/api/naverSocialLogin\", userData)\r\n            .then((response) => {\r\n              // 백엔드로부터의 응답을 처리하려면 이 곳에서 처리하시면 됩니다\r\n              console.log(\"사용자 데이터가 성공적으로 백엔드로 전송되었습니다:\", response.data);\r\n            })\r\n            .catch((error) => {\r\n              // Axios 요청 중 발생한 오류를 처리하려면 이 곳에서 처리하시면 됩니다\r\n              console.error(\"사용자 데이터를 백엔드로 전송하는 중 오류가 발생했습니다:\", error);\r\n            });\r\n        }\r\n      });\r\n      naverLogin.init();\r\n    }\r\n\r\n  useEffect(() => {\r\n    // 네이버 SDK 스크립트 로드\r\n    const script = document.createElement(\"script\");\r\n    script.src = \"https://static.nid.naver.com/js/naveridlogin_js_sdk_2.0.2.js\";\r\n    script.charset = \"utf-8\";\r\n    script.onload = () => {\r\n      initializeNaverLogin();\r\n    };\r\n    document.body.appendChild(script);\r\n  }, []);\r\n\r\n  return (\r\n    <div id=\"naverIdLogin\" style={{ textAlign: 'center' }}>\r\n  </div>\r\n  );\r\n};\r\n\r\nexport default NaverLogin;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAElD,MAAMQ,oBAAoB,GAAGA,CAAA,KAAM;IACjC,MAAMC,UAAU,GAAG,IAAIC,MAAM,CAACC,KAAK,CAACC,gBAAgB,CAAC;MACnDC,QAAQ,EAAEZ,MAAM,CAACa,aAAa;MAC9BC,WAAW,EAAEd,MAAM,CAACe,gBAAgB;MACpCC,YAAY,EAAEhB,MAAM,CAACiB,iBAAiB;MACtCC,OAAO,EAAE,IAAI;MACbC,WAAW,EAAC;QAACC,KAAK,EAAE,OAAO;QAAEC,IAAI,EAAE,CAAC;QAAEC,MAAM,EAAE;MAAI;IACpD,CAAC,CAAC;;IAEC;IACAd,UAAU,CAACe,cAAc,CAAEC,MAAM,IAAK;MACrC,IAAIA,MAAM,EAAE;QACV,MAAMC,QAAQ,GAAGjB,UAAU,CAACkB,IAAI;;QAGhC;QACAC,KAAK,CAACC,IAAI,CAAC,uBAAuB,EAAEH,QAAQ,CAAC,CAC1CI,IAAI,CAAEC,QAAQ,IAAK;UAClB;UACAC,OAAO,CAACC,GAAG,CAAC,8BAA8B,EAAEF,QAAQ,CAACG,IAAI,CAAC;QAC5D,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;UAChB;UACAJ,OAAO,CAACI,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;QAC1D,CAAC,CAAC;MACN;IACF,CAAC,CAAC;IACF3B,UAAU,CAAC4B,IAAI,CAAC,CAAC;EACnB,CAAC;EAEHtC,SAAS,CAAC,MAAM;IACd;IACA,MAAMuC,MAAM,GAAGC,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC;IAC/CF,MAAM,CAACG,GAAG,GAAG,8DAA8D;IAC3EH,MAAM,CAACI,OAAO,GAAG,OAAO;IACxBJ,MAAM,CAACK,MAAM,GAAG,MAAM;MACpBnC,oBAAoB,CAAC,CAAC;IACxB,CAAC;IACD+B,QAAQ,CAACK,IAAI,CAACC,WAAW,CAACP,MAAM,CAAC;EACnC,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEnC,OAAA;IAAK2C,EAAE,EAAC,cAAc;IAACC,KAAK,EAAE;MAAEC,SAAS,EAAE;IAAS;EAAE;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnD,CAAC;AAER,CAAC;AAAC/C,EAAA,CAhDID,UAAU;AAAAiD,EAAA,GAAVjD,UAAU;AAkDhB,eAAeA,UAAU;AAAC,IAAAiD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}