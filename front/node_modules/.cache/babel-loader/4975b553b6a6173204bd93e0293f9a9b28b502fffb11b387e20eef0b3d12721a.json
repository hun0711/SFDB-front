{"ast":null,"code":"import axios from 'axios';\nimport React from 'react';\nimport config from '../../config';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst KakaoCallback = () => {\n  const kakaoRestAPIKey = config.kakaoClientId;\n  const kakaoRedirectUri = config.kakaoRedirectUri;\n  const urlSearchParams = new URLSearchParams(window.location.search);\n  const code = urlSearchParams.get('code');\n  if (code) {\n    const grantType = 'authorization_code';\n    const data = `grant_type=${grantType}&client_id=${kakaoRestAPIKey}&redirect_uri=${kakaoRedirectUri}&code=${code}`;\n    axios.post('https://kauth.kakao.com/oauth/token', data, {\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded;charset=utf-8'\n      }\n    }).then(res => {\n      console.log(res);\n      const {\n        data\n      } = res;\n      const {\n        access_token\n      } = data;\n      if (access_token) {\n        console.log(`Bearer ${access_token}`);\n        axios.post(\"https://kapi.kakao.com/v2/user/me\", {}, {\n          headers: {\n            Authorization: `Bearer ${access_token}`,\n            \"Content-type\": \"application/x-www-form-urlencoded\"\n          }\n        }).then(res => {\n          console.log(\"데이터 성공 : \");\n          console.log(res);\n        });\n      } else {\n        console.log(\"access_token 없음\");\n      }\n    }).catch(error => {\n      console.error('Error exchanging code for access token:', error);\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n};\n_c = KakaoCallback;\nexport default KakaoCallback;\nvar _c;\n$RefreshReg$(_c, \"KakaoCallback\");","map":{"version":3,"names":["axios","React","config","Fragment","_Fragment","jsxDEV","_jsxDEV","KakaoCallback","kakaoRestAPIKey","kakaoClientId","kakaoRedirectUri","urlSearchParams","URLSearchParams","window","location","search","code","get","grantType","data","post","headers","then","res","console","log","access_token","Authorization","catch","error","_c","$RefreshReg$"],"sources":["C:/Users/carax/Desktop/사이드 프로젝트/SFDB-Project/front/src/pages/user/KakaoCallback.jsx"],"sourcesContent":["import axios from 'axios';\r\nimport React from 'react'\r\nimport config from '../../config';\r\n\r\nconst KakaoCallback = () => {\r\n  const kakaoRestAPIKey = config.kakaoClientId;\r\n  const kakaoRedirectUri = config.kakaoRedirectUri;\r\n \r\n  const urlSearchParams = new URLSearchParams(window.location.search);\r\n  const code = urlSearchParams.get('code');\r\n  \r\n  if (code) {\r\n    const grantType = 'authorization_code';\r\n    const data = `grant_type=${grantType}&client_id=${kakaoRestAPIKey}&redirect_uri=${kakaoRedirectUri}&code=${code}`;\r\n    axios\r\n      .post('https://kauth.kakao.com/oauth/token', data, {\r\n        headers: {\r\n          'Content-Type': 'application/x-www-form-urlencoded;charset=utf-8',\r\n        },\r\n      })\r\n      .then((res) => {\r\n         console.log(res);\r\n         const { data } = res;\r\nconst { access_token } = data;\r\nif(access_token) {\r\n console.log(`Bearer ${access_token}`);\r\n axios\r\n    .post(\r\n        \"https://kapi.kakao.com/v2/user/me\",\r\n         {},\r\n        {\r\n          headers: {\r\n             Authorization : `Bearer ${access_token}` ,\r\n             \"Content-type\" : \"application/x-www-form-urlencoded\",\r\n            },\r\n         }\r\n      )\r\n      .then((res) => {\r\n       console.log(\"데이터 성공 : \");\r\n       console.log(res)\r\n     });\r\n    } else {\r\n     console.log(\"access_token 없음\");\r\n}\r\n\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error exchanging code for access token:', error);\r\n      });\r\n  }\r\n\r\n  return (\r\n    <>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default KakaoCallback"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,cAAc;AAAC,SAAAC,QAAA,IAAAC,SAAA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAC1B,MAAMC,eAAe,GAAGN,MAAM,CAACO,aAAa;EAC5C,MAAMC,gBAAgB,GAAGR,MAAM,CAACQ,gBAAgB;EAEhD,MAAMC,eAAe,GAAG,IAAIC,eAAe,CAACC,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC;EACnE,MAAMC,IAAI,GAAGL,eAAe,CAACM,GAAG,CAAC,MAAM,CAAC;EAExC,IAAID,IAAI,EAAE;IACR,MAAME,SAAS,GAAG,oBAAoB;IACtC,MAAMC,IAAI,GAAI,cAAaD,SAAU,cAAaV,eAAgB,iBAAgBE,gBAAiB,SAAQM,IAAK,EAAC;IACjHhB,KAAK,CACFoB,IAAI,CAAC,qCAAqC,EAAED,IAAI,EAAE;MACjDE,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CAAC,CAAC,CACDC,IAAI,CAAEC,GAAG,IAAK;MACZC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;MAChB,MAAM;QAAEJ;MAAK,CAAC,GAAGI,GAAG;MAC7B,MAAM;QAAEG;MAAa,CAAC,GAAGP,IAAI;MAC7B,IAAGO,YAAY,EAAE;QAChBF,OAAO,CAACC,GAAG,CAAE,UAASC,YAAa,EAAC,CAAC;QACrC1B,KAAK,CACDoB,IAAI,CACD,mCAAmC,EAClC,CAAC,CAAC,EACH;UACEC,OAAO,EAAE;YACNM,aAAa,EAAI,UAASD,YAAa,EAAC;YACxC,cAAc,EAAG;UAClB;QACH,CACH,CAAC,CACAJ,IAAI,CAAEC,GAAG,IAAK;UACdC,OAAO,CAACC,GAAG,CAAC,WAAW,CAAC;UACxBD,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;QAClB,CAAC,CAAC;MACH,CAAC,MAAM;QACNC,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC;MACnC;IAEM,CAAC,CAAC,CACDG,KAAK,CAAEC,KAAK,IAAK;MAChBL,OAAO,CAACK,KAAK,CAAC,yCAAyC,EAAEA,KAAK,CAAC;IACjE,CAAC,CAAC;EACN;EAEA,oBACEvB,OAAA,CAAAF,SAAA,mBACE,CAAC;AAEP,CAAC;AAAA0B,EAAA,GAnDKvB,aAAa;AAqDnB,eAAeA,aAAa;AAAA,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}