{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\carax\\\\Desktop\\\\\\uC0AC\\uC774\\uB4DC \\uD504\\uB85C\\uC81D\\uD2B8\\\\SFDB-Project\\\\front\\\\src\\\\pages\\\\detail\\\\MovieDetailMidSection2.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { directorInfoDB } from '../../axios/main/movieLogic';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MovieDetailMidSection2 = ({\n  movieDetail\n}) => {\n  _s();\n  const [directors, setDirectors] = useState([]);\n  useEffect(() => {\n    if (movieDetail && movieDetail.directorIds) {\n      const fetchDirectorsInfo = async () => {\n        const directorIds = movieDetail.directorIds.split(',');\n        const directorPromises = directorIds.map(async directorId => {\n          try {\n            const res = await directorInfoDB(directorId);\n            console.log(res);\n            return res;\n          } catch (error) {\n            console.log('감독 정보 로드 실패 : ', error);\n            return null;\n          }\n        });\n        const directorsData = await Promise.all(directorPromises);\n        setDirectors(directorsData.filter(director => director !== null));\n      };\n      fetchDirectorsInfo();\n    }\n  }, [movieDetail]);\n  const creditInfoStyle = {};\n  console.log(directors[0]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: creditInfoStyle,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\uAC10\\uB3C5 \\uC815\\uBCF4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), directors.map((director, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\uC774\\uB984: \", director === null || director === void 0 ? void 0 : director.directorNm]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(MovieDetailMidSection2, \"MOMXR1SbmS2ZUbc3rI2O9ok3sSA=\");\n_c = MovieDetailMidSection2;\nexport default MovieDetailMidSection2;\nvar _c;\n$RefreshReg$(_c, \"MovieDetailMidSection2\");","map":{"version":3,"names":["React","useEffect","useState","directorInfoDB","jsxDEV","_jsxDEV","Fragment","_Fragment","MovieDetailMidSection2","movieDetail","_s","directors","setDirectors","directorIds","fetchDirectorsInfo","split","directorPromises","map","directorId","res","console","log","error","directorsData","Promise","all","filter","director","creditInfoStyle","children","style","fileName","_jsxFileName","lineNumber","columnNumber","index","directorNm","_c","$RefreshReg$"],"sources":["C:/Users/carax/Desktop/사이드 프로젝트/SFDB-Project/front/src/pages/detail/MovieDetailMidSection2.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { directorInfoDB } from '../../axios/main/movieLogic';\r\n\r\nconst MovieDetailMidSection2 = ({ movieDetail }) => {\r\n  const [directors, setDirectors] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (movieDetail && movieDetail.directorIds) {\r\n      const fetchDirectorsInfo = async () => {\r\n        const directorIds = movieDetail.directorIds.split(',');\r\n        const directorPromises = directorIds.map(async (directorId) => {\r\n          try {\r\n            const res = await directorInfoDB(directorId);\r\n            console.log(res);\r\n            return res;\r\n          } catch (error) {\r\n            console.log('감독 정보 로드 실패 : ', error);\r\n            return null;\r\n          }\r\n        });\r\n\r\n        const directorsData = await Promise.all(directorPromises);\r\n        setDirectors(directorsData.filter(director => director !== null));\r\n      };\r\n\r\n      fetchDirectorsInfo();\r\n    }\r\n  }, [movieDetail]);\r\n\r\n  const creditInfoStyle = {};\r\n  \r\n  console.log(directors[0]);\r\n\r\n  return (\r\n    <>\r\n      <div style={creditInfoStyle}>\r\n        <h3>감독 정보</h3>\r\n        {directors.map((director, index) => (\r\n          <div key={index}>\r\n            <p>이름: {director?.directorNm}</p>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MovieDetailMidSection2;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,cAAc,QAAQ,6BAA6B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE7D,MAAMC,sBAAsB,GAAGA,CAAC;EAAEC;AAAY,CAAC,KAAK;EAAAC,EAAA;EAClD,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAE9CD,SAAS,CAAC,MAAM;IACd,IAAIQ,WAAW,IAAIA,WAAW,CAACI,WAAW,EAAE;MAC1C,MAAMC,kBAAkB,GAAG,MAAAA,CAAA,KAAY;QACrC,MAAMD,WAAW,GAAGJ,WAAW,CAACI,WAAW,CAACE,KAAK,CAAC,GAAG,CAAC;QACtD,MAAMC,gBAAgB,GAAGH,WAAW,CAACI,GAAG,CAAC,MAAOC,UAAU,IAAK;UAC7D,IAAI;YACF,MAAMC,GAAG,GAAG,MAAMhB,cAAc,CAACe,UAAU,CAAC;YAC5CE,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;YAChB,OAAOA,GAAG;UACZ,CAAC,CAAC,OAAOG,KAAK,EAAE;YACdF,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEC,KAAK,CAAC;YACpC,OAAO,IAAI;UACb;QACF,CAAC,CAAC;QAEF,MAAMC,aAAa,GAAG,MAAMC,OAAO,CAACC,GAAG,CAACT,gBAAgB,CAAC;QACzDJ,YAAY,CAACW,aAAa,CAACG,MAAM,CAACC,QAAQ,IAAIA,QAAQ,KAAK,IAAI,CAAC,CAAC;MACnE,CAAC;MAEDb,kBAAkB,CAAC,CAAC;IACtB;EACF,CAAC,EAAE,CAACL,WAAW,CAAC,CAAC;EAEjB,MAAMmB,eAAe,GAAG,CAAC,CAAC;EAE1BR,OAAO,CAACC,GAAG,CAACV,SAAS,CAAC,CAAC,CAAC,CAAC;EAEzB,oBACEN,OAAA,CAAAE,SAAA;IAAAsB,QAAA,eACExB,OAAA;MAAKyB,KAAK,EAAEF,eAAgB;MAAAC,QAAA,gBAC1BxB,OAAA;QAAAwB,QAAA,EAAI;MAAK;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EACbvB,SAAS,CAACM,GAAG,CAAC,CAACU,QAAQ,EAAEQ,KAAK,kBAC7B9B,OAAA;QAAAwB,QAAA,eACExB,OAAA;UAAAwB,QAAA,GAAG,gBAAI,EAACF,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAES,UAAU;QAAA;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI;MAAC,GADzBC,KAAK;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EAAC,gBACN,CAAC;AAEP,CAAC;AAACxB,EAAA,CA1CIF,sBAAsB;AAAA6B,EAAA,GAAtB7B,sBAAsB;AA4C5B,eAAeA,sBAAsB;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}