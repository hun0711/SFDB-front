{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\carax\\\\Desktop\\\\\\uC0AC\\uC774\\uB4DC \\uD504\\uB85C\\uC81D\\uD2B8\\\\SFDB-Project\\\\front\\\\src\\\\pages\\\\user\\\\MovieArchive.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Link from '@mui/material/Link';\nimport Title from './Title';\nimport { getUserArchiveDB } from '../../axios/detail/contentsLogic';\nimport { Card, CardContent, Typography } from '@mui/material';\nimport { firebaseStorage } from '../../utils/firebase';\nimport { useNavigate } from 'react-router';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function MovieArchive({\n  userInfo\n}) {\n  _s();\n  const userId = userInfo.userId;\n  const navigate = useNavigate();\n  const [userMovieArchive, setUserMovieArchive] = useState([]);\n  const [posterUrls, setPosterUrls] = useState([]);\n  useEffect(() => {\n    const getUserArchive = async () => {\n      try {\n        const res = await getUserArchiveDB(userId);\n        setUserMovieArchive(res);\n      } catch (error) {\n        console.log('유저 보관함 로드 실패 : ', error);\n      }\n    };\n    if (userId !== undefined) {\n      getUserArchive();\n    }\n  }, [userId]);\n  useEffect(() => {\n    const getPosterUrls = async () => {\n      const urls = await Promise.all(top20Movies.map(async movie => {\n        const storageRef = firebaseStorage.ref(`poster/${movie.movieId}${movie.movieSeq}.jpg`);\n        try {\n          const url = await storageRef.getDownloadURL();\n          return url;\n        } catch (error) {\n          console.log(\"포스터 URL 페칭 에러 : \", error);\n          return null;\n        }\n      }));\n      setPosterUrls(urls);\n    };\n    getPosterUrls();\n  }, [top20Movies]);\n  {/* Style */}\n  const archiveSectiontyle = {\n    minWidth: '250px',\n    maxWidth: '250px',\n    maxHeight: '300px',\n    minHeight: '300px',\n    position: 'relative'\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      children: \"\\uBCF4\\uAD00\\uD568\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), userMovieArchive.length > 0 ? userMovieArchive.map((movie, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: archiveSectiontyle,\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        sx: {\n          maxWidth: 250,\n          height: 450,\n          mx: 2,\n          border: 'none',\n          margin: '0 auto',\n          cursor: 'pointer'\n        },\n        onClick: () => navigate(`/movieDetail/${movie.movieId}${movie.movieSeq}`),\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          alt: movie.title,\n          style: {\n            width: '100%',\n            height: '350px',\n            borderRadius: '3px 3px 3px 3px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n          style: {\n            border: 'none',\n            display: 'flex',\n            flexDirection: 'column',\n            justifyContent: 'flex-start'\n          },\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle2\",\n            sx: {\n              fontSize: 15\n            },\n            children: movie.title.length > 18 ? `${movie.title.slice(0, 18)}...` : movie.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\uC544\\uC9C1 \\uBCF4\\uAD00\\uD55C \\uC601\\uD654\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      color: \"primary\",\n      href: \"/main\",\n      sx: {\n        mt: 3\n      },\n      children: \"See more Movies\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(MovieArchive, \"PQYNzev1MXTdFfI2hCmA0Ge267A=\", false, function () {\n  return [useNavigate];\n});\n_c = MovieArchive;\nvar _c;\n$RefreshReg$(_c, \"MovieArchive\");","map":{"version":3,"names":["React","useEffect","useState","Link","Title","getUserArchiveDB","Card","CardContent","Typography","firebaseStorage","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","MovieArchive","userInfo","_s","userId","navigate","userMovieArchive","setUserMovieArchive","posterUrls","setPosterUrls","getUserArchive","res","error","console","log","undefined","getPosterUrls","urls","Promise","all","top20Movies","map","movie","storageRef","ref","movieId","movieSeq","url","getDownloadURL","archiveSectiontyle","minWidth","maxWidth","maxHeight","minHeight","position","children","fileName","_jsxFileName","lineNumber","columnNumber","length","index","style","sx","height","mx","border","margin","cursor","onClick","alt","title","width","borderRadius","display","flexDirection","justifyContent","variant","fontSize","slice","color","href","mt","_c","$RefreshReg$"],"sources":["C:/Users/carax/Desktop/사이드 프로젝트/SFDB-Project/front/src/pages/user/MovieArchive.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Link from '@mui/material/Link';\nimport Title from './Title';\nimport { getUserArchiveDB } from '../../axios/detail/contentsLogic';\nimport { Card, CardContent, Typography } from '@mui/material';\nimport { firebaseStorage } from '../../utils/firebase';\nimport { useNavigate } from 'react-router';\n\nexport default function MovieArchive({ userInfo }) {\n  const userId = userInfo.userId;\n  const navigate = useNavigate();\n  const [userMovieArchive, setUserMovieArchive] = useState([]); \n  const [posterUrls, setPosterUrls] = useState([]);\n\n  useEffect(() => {\n    const getUserArchive = async () => {\n      try {\n        const res = await getUserArchiveDB(userId);\n        setUserMovieArchive(res);\n      } catch (error) {\n        console.log('유저 보관함 로드 실패 : ', error);\n      }\n    };\n    if (userId !== undefined) {\n      getUserArchive();\n    }\n  }, [userId]);\n\n\n  useEffect(() => {\n    const getPosterUrls = async () => {\n      const urls = await Promise.all(top20Movies.map(async (movie) => {\n        const storageRef = firebaseStorage.ref(`poster/${movie.movieId}${movie.movieSeq}.jpg`);\n        try {\n          const url = await storageRef.getDownloadURL();\n          return url;\n        } catch (error) {\n          console.log(\"포스터 URL 페칭 에러 : \" , error);\n          return null;\n        }\n      }));\n      setPosterUrls(urls);\n    };\n\n    getPosterUrls();\n  }, [top20Movies]);\n\n  {/* Style */}\n\n  const archiveSectiontyle = {\n    minWidth: '250px',\n    maxWidth: '250px',\n    maxHeight: '300px',\n    minHeight: '300px',\n    position: 'relative',\n  };\n\n  return (\n    <>\n      <Title>보관함</Title>\n      {userMovieArchive.length > 0 ? ( \n        userMovieArchive.map((movie, index) => (\n          <div style={archiveSectiontyle} key={index}>\n            <Card\n              sx={{\n                maxWidth: 250,\n                height: 450,\n                mx: 2,\n                border: 'none',\n                margin: '0 auto',\n                cursor: 'pointer',\n              }}\n              onClick={() => navigate(`/movieDetail/${movie.movieId}${movie.movieSeq}`)}\n            >\n              <img alt={movie.title} style={{ width: '100%', height: '350px', borderRadius: '3px 3px 3px 3px' }} />\n              <CardContent style={{ border: 'none', display: 'flex', flexDirection: 'column', justifyContent: 'flex-start' }}>\n                <Typography variant=\"subtitle2\" sx={{ fontSize: 15 }}>\n                  {movie.title.length > 18 ? `${movie.title.slice(0, 18)}...` : movie.title}\n                </Typography>\n              </CardContent>\n            </Card>\n          </div>\n        ))\n      ) : (\n        <p>아직 보관한 영화가 없습니다.</p>\n      )}\n      <Link color=\"primary\" href=\"/main\" sx={{ mt: 3 }}>\n        See more Movies\n      </Link>\n    </>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}