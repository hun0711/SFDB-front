{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\carax\\\\Desktop\\\\\\uC0AC\\uC774\\uB4DC \\uD504\\uB85C\\uC81D\\uD2B8\\\\SFDB-Project\\\\front\\\\src\\\\pages\\\\main\\\\MainTopSection.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { top20sfmoviesDB } from '../../axios/main/movieLogic';\nimport { Card, CardContent, Grid, Typography } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MainTopSection = () => {\n  _s();\n  const [top20Movies, setTop20Movies] = useState([]);\n  const [currentSlide, setCurrentSlide] = useState(0);\n  useEffect(() => {\n    const getTop20SfMovies = async () => {\n      try {\n        const res = await top20sfmoviesDB();\n        setTop20Movies(res);\n      } catch (error) {\n        console.error('top20영화 로드 실패:', error);\n      }\n    };\n    getTop20SfMovies();\n  }, []);\n  const slidesToShow = 5;\n  const slidesToScroll = 5;\n  const nextSlide = () => {\n    const totalSlides = top20Movies.length;\n    setCurrentSlide(prevSlide => (prevSlide + slidesToScroll) % totalSlides);\n  };\n  const prevSlide = () => {\n    const totalSlides = top20Movies.length;\n    setCurrentSlide(prevSlide => (prevSlide - slidesToScroll + totalSlides) % totalSlides);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      align: \"center\",\n      mt: 4,\n      sx: {\n        marginRight: 160,\n        marginBottom: 3,\n        fontSize: 25\n      },\n      children: \"Top 20 SF \\uC601\\uD654\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        overflowX: 'scroll'\n      },\n      children: top20Movies.map((movie, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: index >= currentSlide && index < currentSlide + slidesToShow ? 'block' : 'none'\n        },\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          sx: {\n            maxWidth: 250,\n            height: 430,\n            mx: 2,\n            border: 'none'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              background: 'black',\n              color: 'white',\n              padding: '5px 10px',\n              borderTopLeftRadius: '3px',\n              borderBottomRightRadius: '3px',\n              fontSize: '14px',\n              fontWeight: 'bold',\n              textAlign: 'center',\n              position: 'absolute',\n              top: 0,\n              left: 0,\n              zIndex: 1,\n              width: '100%'\n            },\n            children: \"1\\uC704\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: movie.poster,\n            alt: movie.title,\n            style: {\n              width: '100%',\n              height: '350px',\n              borderRadius: '3px 3px 0 0'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n            style: {\n              display: 'flex',\n              flexDirection: 'column',\n              justifyContent: 'flex-start'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"subtitle2\",\n              sx: {\n                fontSize: 15\n              },\n              children: movie.title.length > 18 ? `${movie.title.slice(0, 18)}...` : movie.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              justifyContent: \"flex-start\",\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                children: [movie.prodYear, \" \\xB7 \", movie.nation]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: prevSlide,\n        children: \"Previous\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: nextSlide,\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(MainTopSection, \"dAxa0XCbOY0x2ltQT2PVmePChTs=\");\n_c = MainTopSection;\nexport default MainTopSection;\nvar _c;\n$RefreshReg$(_c, \"MainTopSection\");","map":{"version":3,"names":["React","useState","useEffect","top20sfmoviesDB","Card","CardContent","Grid","Typography","jsxDEV","_jsxDEV","MainTopSection","_s","top20Movies","setTop20Movies","currentSlide","setCurrentSlide","getTop20SfMovies","res","error","console","slidesToShow","slidesToScroll","nextSlide","totalSlides","length","prevSlide","children","variant","align","mt","sx","marginRight","marginBottom","fontSize","fileName","_jsxFileName","lineNumber","columnNumber","style","display","overflowX","map","movie","index","maxWidth","height","mx","border","background","color","padding","borderTopLeftRadius","borderBottomRightRadius","fontWeight","textAlign","position","top","left","zIndex","width","src","poster","alt","title","borderRadius","flexDirection","justifyContent","slice","container","prodYear","nation","onClick","_c","$RefreshReg$"],"sources":["C:/Users/carax/Desktop/사이드 프로젝트/SFDB-Project/front/src/pages/main/MainTopSection.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { top20sfmoviesDB } from '../../axios/main/movieLogic';\r\nimport { Card, CardContent, Grid, Typography } from '@mui/material';\r\n\r\nconst MainTopSection = () => {\r\n  const [top20Movies, setTop20Movies] = useState([]);\r\n  const [currentSlide, setCurrentSlide] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const getTop20SfMovies = async () => {\r\n      try {\r\n        const res = await top20sfmoviesDB();\r\n        setTop20Movies(res);\r\n      } catch (error) {\r\n        console.error('top20영화 로드 실패:', error);\r\n      }\r\n    };\r\n\r\n    getTop20SfMovies();\r\n  }, []);\r\n\r\n  const slidesToShow = 5;\r\n  const slidesToScroll = 5;\r\n\r\n  const nextSlide = () => {\r\n    const totalSlides = top20Movies.length;\r\n    setCurrentSlide((prevSlide) => (prevSlide + slidesToScroll) % totalSlides);\r\n  };\r\n\r\n  const prevSlide = () => {\r\n    const totalSlides = top20Movies.length;\r\n    setCurrentSlide((prevSlide) => (prevSlide - slidesToScroll + totalSlides) % totalSlides);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Typography variant=\"h6\" align=\"center\" mt={4} sx={{ marginRight: 160, marginBottom: 3, fontSize: 25 }}>Top 20 SF 영화</Typography>\r\n      <div style={{ display: 'flex', overflowX: 'scroll' }}>\r\n        {top20Movies.map((movie, index) => (\r\n          <div key={index} style={{ display: index >= currentSlide && index < currentSlide + slidesToShow ? 'block' : 'none' }}>\r\n            <Card sx={{ maxWidth: 250, height: 430, mx: 2, border: 'none' }}>\r\n              {/* 순위 표시 요소 */}\r\n              <div style={{\r\n                background: 'black',\r\n                color: 'white',\r\n                padding: '5px 10px',\r\n                borderTopLeftRadius: '3px',\r\n                borderBottomRightRadius: '3px',\r\n                fontSize: '14px',\r\n                fontWeight: 'bold',\r\n                textAlign: 'center',\r\n                position: 'absolute',\r\n                top: 0,\r\n                left: 0,\r\n                zIndex: 1,\r\n                width: '100%'\r\n              }}>\r\n                1위\r\n              </div>\r\n              <img src={movie.poster} alt={movie.title} style={{ width: '100%', height: '350px', borderRadius: '3px 3px 0 0' }} />\r\n              <CardContent style={{ display: 'flex', flexDirection: 'column', justifyContent: 'flex-start' }}>\r\n                <Typography variant=\"subtitle2\" sx={{ fontSize: 15 }}>{movie.title.length > 18 ? `${movie.title.slice(0, 18)}...` : movie.title}</Typography>\r\n                <Grid container justifyContent=\"flex-start\">\r\n                  <Typography variant=\"body2\">{movie.prodYear} · {movie.nation}</Typography>\r\n                </Grid>\r\n              </CardContent>\r\n            </Card>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div>\r\n        <button onClick={prevSlide}>Previous</button>\r\n        <button onClick={nextSlide}>Next</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MainTopSection;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}