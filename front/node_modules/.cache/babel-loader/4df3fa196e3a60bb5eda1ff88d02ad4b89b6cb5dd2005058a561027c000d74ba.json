{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\carax\\\\Desktop\\\\\\uC0AC\\uC774\\uB4DC \\uD504\\uB85C\\uC81D\\uD2B8\\\\SFDB-Project\\\\front\\\\src\\\\pages\\\\user\\\\NaverLogin.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport config from \"../../config\";\nimport { serialize } from \"cookie\";\nimport { Alert, AlertTitle } from \"@mui/material\";\nimport { Navigate, useLocation, useNavigate } from \"react-router\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NaverLogin = () => {\n  _s();\n  const [loginAlert, setLoginAlert] = useState(null);\n  const location = useLocation();\n  const navigate = useNavigate();\n  const getNaverToken = () => {\n    if (!location.hash) return;\n    const token = location.hash.split(\"=\")[1].split(\"&\")[0];\n    console.log(token);\n  };\n  const initializeNaverLogin = () => {\n    const naverLogin = new window.naver.LoginWithNaverId({\n      clientId: config.naverClientId,\n      callbackUrl: config.naverRedirectUri,\n      clientSecret: config.naverClientSecret,\n      isPopup: false,\n      loginButton: {\n        color: \"green\",\n        type: 3,\n        height: \"50\"\n      }\n    });\n    naverLogin.init();\n    naverLogin.getLoginStatus(function (status) {\n      if (status) {\n        const {\n          id,\n          nickname,\n          email,\n          profile_image\n        } = naverLogin.user;\n        console.log(\"네이버 로그인 성공!\");\n        console.log(\"사용자 아이디:\", id);\n        console.log(\"사용자 닉네임:\", nickname);\n        console.log(\"사용자 이메일:\", email);\n        console.log(\"프로필 이미지 URL:\", profile_image);\n        document.cookie = serialize(\"userId\", id, {\n          path: \"/\"\n        });\n\n        // 서버로 토큰을 보내고 로그인 처리\n        axios.post(\"http://localhost:8000/user/login/naver\", {\n          token: token\n        }).then(response => {\n          // 로그인 성공 처리\n          console.log(\"백엔드와 통신 성공:\", response.data);\n          setLoginAlert( /*#__PURE__*/_jsxDEV(Alert, {\n            severity: \"success\",\n            onClose: () => setLoginAlert(null),\n            children: [/*#__PURE__*/_jsxDEV(AlertTitle, {\n              children: \"\\uB85C\\uADF8\\uC778 \\uC131\\uACF5!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"\\uBA54\\uC778\\uD398\\uC774\\uC9C0\\uB85C \\uC774\\uB3D9\\uD569\\uB2C8\\uB2E4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this));\n          setTimeout(() => {\n            navigate(\"/main\"); // 메인 페이지로 이동\n          }, 2000);\n        }).catch(error => {\n          // 통신이 실패한 경우의 처리\n          console.error(\"백엔드와 통신 실패:\", error);\n          setLoginAlert( /*#__PURE__*/_jsxDEV(Alert, {\n            severity: \"warning\",\n            onClose: () => setLoginAlert(null),\n            children: [/*#__PURE__*/_jsxDEV(AlertTitle, {\n              children: \"\\uB85C\\uADF8\\uC778 \\uC2E4\\uD328\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"\\uC785\\uB825 \\uC815\\uBCF4\\uB97C \\uB2E4\\uC2DC \\uD655\\uC778\\uD574\\uC8FC\\uC138\\uC694\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this));\n        });\n      } else {\n        console.log(\"Naver 로그인 실패\");\n      }\n    });\n  };\n  useEffect(() => {\n    const script = document.createElement(\"script\");\n    script.src = \"https://static.nid.naver.com/js/naveridlogin_js_sdk_2.0.2.js\";\n    script.charset = \"utf-8\";\n    script.onload = () => {\n      initializeNaverLogin();\n    };\n    document.body.appendChild(script);\n    getNaverToken();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"naverIdLogin\",\n    style: {\n      textAlign: \"center\"\n    },\n    children: loginAlert\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n_s(NaverLogin, \"JjFQrtIDDo52LRMICXrqBgK+nE0=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = NaverLogin;\nexport default NaverLogin;\nvar _c;\n$RefreshReg$(_c, \"NaverLogin\");","map":{"version":3,"names":["React","useEffect","useState","axios","config","serialize","Alert","AlertTitle","Navigate","useLocation","useNavigate","jsxDEV","_jsxDEV","NaverLogin","_s","loginAlert","setLoginAlert","location","navigate","getNaverToken","hash","token","split","console","log","initializeNaverLogin","naverLogin","window","naver","LoginWithNaverId","clientId","naverClientId","callbackUrl","naverRedirectUri","clientSecret","naverClientSecret","isPopup","loginButton","color","type","height","init","getLoginStatus","status","id","nickname","email","profile_image","user","document","cookie","path","post","then","response","data","severity","onClose","children","fileName","_jsxFileName","lineNumber","columnNumber","setTimeout","catch","error","script","createElement","src","charset","onload","body","appendChild","style","textAlign","_c","$RefreshReg$"],"sources":["C:/Users/carax/Desktop/사이드 프로젝트/SFDB-Project/front/src/pages/user/NaverLogin.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport config from \"../../config\";\r\nimport { serialize } from \"cookie\";\r\nimport { Alert, AlertTitle } from \"@mui/material\";\r\nimport { Navigate, useLocation, useNavigate } from \"react-router\";\r\n\r\nconst NaverLogin = () => {\r\n  const [loginAlert, setLoginAlert] = useState(null);\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n\r\n  const getNaverToken = () => {\r\n    if (!location.hash) return;\r\n    const token = location.hash.split(\"=\")[1].split(\"&\")[0];\r\n    console.log(token);\r\n  };\r\n\r\n  const initializeNaverLogin = () => {\r\n    const naverLogin = new window.naver.LoginWithNaverId({\r\n      clientId: config.naverClientId,\r\n      callbackUrl: config.naverRedirectUri,\r\n      clientSecret: config.naverClientSecret,\r\n      isPopup: false,\r\n      loginButton: { color: \"green\", type: 3, height: \"50\" },\r\n    });\r\n\r\n    naverLogin.init();\r\n\r\n    naverLogin.getLoginStatus(function (status) {\r\n      if (status) {\r\n        const { id, nickname, email, profile_image } = naverLogin.user;\r\n        console.log(\"네이버 로그인 성공!\");\r\n        console.log(\"사용자 아이디:\", id);\r\n        console.log(\"사용자 닉네임:\", nickname);\r\n        console.log(\"사용자 이메일:\", email);\r\n        console.log(\"프로필 이미지 URL:\", profile_image);\r\n        document.cookie = serialize(\"userId\", id, { path: \"/\" });\r\n\r\n        // 서버로 토큰을 보내고 로그인 처리\r\n        axios\r\n          .post(\"http://localhost:8000/user/login/naver\", { token: token }) \r\n          .then((response) => {\r\n            // 로그인 성공 처리\r\n            console.log(\"백엔드와 통신 성공:\", response.data);\r\n            setLoginAlert(\r\n              <Alert severity=\"success\" onClose={() => setLoginAlert(null)}>\r\n                <AlertTitle>로그인 성공!</AlertTitle>\r\n                <strong>메인페이지로 이동합니다</strong>\r\n              </Alert>\r\n            );\r\n            setTimeout(() => {\r\n              navigate(\"/main\"); // 메인 페이지로 이동\r\n            }, 2000);\r\n          })\r\n          .catch((error) => {\r\n            // 통신이 실패한 경우의 처리\r\n            console.error(\"백엔드와 통신 실패:\", error);\r\n            setLoginAlert(\r\n              <Alert severity=\"warning\" onClose={() => setLoginAlert(null)}>\r\n                <AlertTitle>로그인 실패</AlertTitle>\r\n                <strong>입력 정보를 다시 확인해주세요</strong>\r\n              </Alert>\r\n            );\r\n          });\r\n      } else {\r\n        console.log(\"Naver 로그인 실패\");\r\n      }\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const script = document.createElement(\"script\");\r\n    script.src = \"https://static.nid.naver.com/js/naveridlogin_js_sdk_2.0.2.js\";\r\n    script.charset = \"utf-8\";\r\n    script.onload = () => {\r\n      initializeNaverLogin();\r\n    };\r\n    document.body.appendChild(script);\r\n\r\n    getNaverToken();\r\n  }, []);\r\n\r\n  return (\r\n    <div id=\"naverIdLogin\" style={{ textAlign: \"center\" }}>\r\n      {/* 추가적으로 필요한 JSX 코드 작성 */}\r\n      {loginAlert}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NaverLogin;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}