{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\carax\\\\Desktop\\\\\\uC0AC\\uC774\\uB4DC \\uD504\\uB85C\\uC81D\\uD2B8\\\\SFDB-Project\\\\front\\\\src\\\\pages\\\\user\\\\KakaoCallback.jsx\",\n  _s = $RefreshSig$();\nimport axios from 'axios';\nimport React, { useState } from 'react';\nimport config from '../../config';\nimport { kakaoSocialLogin } from '../../axios/user/loginLogic';\nimport { serialize } from 'cookie';\nimport { useNavigate } from 'react-router';\nimport { Alert, AlertTitle } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst KakaoCallback = () => {\n  _s();\n  const [loginAlert, setLoginAlert] = useState(null);\n  const navigate = useNavigate();\n  const kakaoRestAPIKey = config.kakaoClientId;\n  const kakaoRedirectUri = config.kakaoRedirectUri;\n  const urlSearchParams = new URLSearchParams(window.location.search);\n  const code = urlSearchParams.get('code');\n  if (code) {\n    const grantType = 'authorization_code';\n    const data = `grant_type=${grantType}&client_id=${kakaoRestAPIKey}&redirect_uri=${kakaoRedirectUri}&code=${code}`;\n    axios.post('https://kauth.kakao.com/oauth/token', data, {\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded;charset=utf-8'\n      }\n    }).then(res => {\n      console.log(res);\n      const {\n        data\n      } = res;\n      const {\n        access_token\n      } = data;\n      if (access_token) {\n        console.log(`Bearer ${access_token}`);\n        axios.post(\"https://kapi.kakao.com/v2/user/me\", {}, {\n          headers: {\n            Authorization: `Bearer ${access_token}`,\n            \"Content-type\": \"application/x-www-form-urlencoded\"\n          }\n        }).then(async res => {\n          console.log(\"카카오 유저 데이터  : \");\n          console.log(res.data);\n          const kakaoLoginData = res.data;\n\n          //서버에 id 전달\n          const response = await kakaoSocialLogin(kakaoLoginData);\n          if (response === 1) {\n            console.log(\"카카오 로그인 성공\");\n            document.cookie = serialize('userId', kakaoId, {\n              path: '/'\n            });\n            navigate('/main');\n            setLoginAlert( /*#__PURE__*/_jsxDEV(Alert, {\n              severity: \"success\",\n              onClose: () => setLoginAlert(null),\n              children: /*#__PURE__*/_jsxDEV(AlertTitle, {\n                children: \"\\uB85C\\uADF8\\uC778 \\uC131\\uACF5!\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 13\n            }, this));\n          }\n        });\n      } else {\n        console.log(\"access_token 없음\");\n      }\n    }).catch(error => {\n      console.error('Error exchanging code for access token:', error);\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: loginAlert\n  }, void 0, false);\n};\n_s(KakaoCallback, \"05kvwwF8WDRM2qn0NyD6rnOD4Yc=\", false, function () {\n  return [useNavigate];\n});\n_c = KakaoCallback;\nexport default KakaoCallback;\nvar _c;\n$RefreshReg$(_c, \"KakaoCallback\");","map":{"version":3,"names":["axios","React","useState","config","kakaoSocialLogin","serialize","useNavigate","Alert","AlertTitle","jsxDEV","_jsxDEV","Fragment","_Fragment","KakaoCallback","_s","loginAlert","setLoginAlert","navigate","kakaoRestAPIKey","kakaoClientId","kakaoRedirectUri","urlSearchParams","URLSearchParams","window","location","search","code","get","grantType","data","post","headers","then","res","console","log","access_token","Authorization","kakaoLoginData","response","document","cookie","kakaoId","path","severity","onClose","children","fileName","_jsxFileName","lineNumber","columnNumber","catch","error","_c","$RefreshReg$"],"sources":["C:/Users/carax/Desktop/사이드 프로젝트/SFDB-Project/front/src/pages/user/KakaoCallback.jsx"],"sourcesContent":["  import axios from 'axios';\r\n  import React, { useState } from 'react'\r\n  import config from '../../config';\r\nimport { kakaoSocialLogin } from '../../axios/user/loginLogic';\r\nimport { serialize } from 'cookie';\r\nimport { useNavigate } from 'react-router';\r\nimport { Alert, AlertTitle } from '@mui/material';\r\n\r\n  const KakaoCallback = () => {\r\n    const [loginAlert, setLoginAlert] = useState(null);\r\n    const navigate = useNavigate();\r\n  \r\n    const kakaoRestAPIKey = config.kakaoClientId;\r\n    const kakaoRedirectUri = config.kakaoRedirectUri;\r\n  \r\n    const urlSearchParams = new URLSearchParams(window.location.search);\r\n    const code = urlSearchParams.get('code');\r\n    \r\n    if (code) {\r\n      const grantType = 'authorization_code';\r\n      const data = `grant_type=${grantType}&client_id=${kakaoRestAPIKey}&redirect_uri=${kakaoRedirectUri}&code=${code}`;\r\n      axios\r\n        .post('https://kauth.kakao.com/oauth/token', data, {\r\n          headers: {\r\n            'Content-Type': 'application/x-www-form-urlencoded;charset=utf-8',\r\n          },\r\n        })\r\n        .then((res) => {\r\n          console.log(res);\r\n          const { data } = res;\r\n  const { access_token } = data;\r\n  if(access_token) {\r\n  console.log(`Bearer ${access_token}`);\r\n  axios\r\n      .post(\r\n          \"https://kapi.kakao.com/v2/user/me\",\r\n          {},\r\n          {\r\n            headers: {\r\n              Authorization : `Bearer ${access_token}` ,\r\n              \"Content-type\" : \"application/x-www-form-urlencoded\",\r\n              },\r\n          }\r\n        )\r\n        .then(async (res) => {\r\n        console.log(\"카카오 유저 데이터  : \");\r\n        console.log(res.data)\r\n        const kakaoLoginData = res.data ;\r\n\r\n        //서버에 id 전달\r\n        const response = await kakaoSocialLogin(kakaoLoginData)\r\n        if(response === 1 ){\r\n          console.log(\"카카오 로그인 성공\");\r\n          document.cookie = serialize('userId' , kakaoId , {path : '/'})\r\n          navigate('/main')\r\n          setLoginAlert(\r\n            <Alert severity=\"success\" onClose={() => setLoginAlert(null)}>\r\n              <AlertTitle>로그인 성공!</AlertTitle>\r\n            </Alert>\r\n          );\r\n        }\r\n      });\r\n      } else {\r\n      console.log(\"access_token 없음\");\r\n  }\r\n        })\r\n        .catch((error) => {\r\n          console.error('Error exchanging code for access token:', error);\r\n        });\r\n    }\r\n\r\n    return (\r\n      <>\r\n      {loginAlert}\r\n      </>\r\n    )\r\n  }\r\n\r\n  export default KakaoCallback"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}