{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\carax\\\\Desktop\\\\\\uC0AC\\uC774\\uB4DC \\uD504\\uB85C\\uC81D\\uD2B8\\\\SFDB-Project\\\\front\\\\src\\\\pages\\\\user\\\\NaverLogin.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport config from \"../../config\";\nimport { serialize } from \"cookie\";\nimport { useNavigate } from \"react-router\";\nimport { naverSocialLogin } from \"../../axios/user/loginLogic\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NaverLogin = () => {\n  _s();\n  const navigate = useNavigate();\n  const [alertOn, setAlertOn] = useState(false);\n  const {\n    enqueueSnackbar\n  } = useSnackbar();\n  const handleClose = () => {\n    setAlertOn(false);\n  };\n  const userAccessToken = () => {\n    window.location.href.includes('access_token') && getToken();\n  };\n  const getToken = () => {\n    const token = window.location.href.split('=')[1].split('&')[0];\n    console.log(token);\n    document.cookie = serialize(\"naverToken\", token, {\n      path: '/'\n    });\n  };\n  const initializeNaverLogin = () => {\n    const naverLogin = new window.naver.LoginWithNaverId({\n      clientId: config.naverClientId,\n      callbackUrl: config.naverRedirectUri,\n      clientSecret: config.naverClientSecret,\n      isPopup: false,\n      loginButton: {\n        color: \"green\",\n        type: 3,\n        height: \"46\"\n      }\n    });\n    naverLogin.init();\n    naverLogin.getLoginStatus(async function (status) {\n      if (status) {\n        const {\n          id,\n          name,\n          email,\n          birthday,\n          profile_image\n        } = naverLogin.user;\n        const naverLoginData = {\n          id,\n          name,\n          email,\n          birthday,\n          profile_image\n        };\n        const res = await naverSocialLogin(naverLoginData);\n        if (res === 1) {\n          console.log(\"네이버 로그인 성공!\");\n          console.log(\"프로필 이미지 URL:\", profile_image);\n          userAccessToken();\n          document.cookie = serialize(\"userId\", id, {\n            path: '/'\n          });\n          document.cookie = serialize(\"userName\", name, {\n            path: '/'\n          });\n          document.cookie = serialize(\"userEmail\", email, {\n            path: '/'\n          });\n          document.cookie = serialize(\"userBirth\", birthday, {\n            path: '/'\n          });\n          document.cookie = serialize(\"userImage\", profile_image, {\n            path: '/'\n          });\n          navigate('/main');\n        } else {\n          console.log(\"Naver 로그인 실패\");\n        }\n      } else {}\n    });\n  };\n  useEffect(() => {\n    const script = document.createElement(\"script\");\n    script.src = \"https://static.nid.naver.com/js/naveridlogin_js_sdk_2.0.2.js\";\n    script.charset = \"utf-8\";\n    script.onload = () => initializeNaverLogin();\n    document.body.appendChild(script);\n    return () => {\n      document.body.removeChild(script);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"naverIdLogin\",\n    style: {\n      textAlign: \"center\"\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n};\n_s(NaverLogin, \"/COGwWDiCj73Wg4YNzawmJKeRSs=\", true, function () {\n  return [useNavigate];\n});\n_c = NaverLogin;\nexport default NaverLogin;\nvar _c;\n$RefreshReg$(_c, \"NaverLogin\");","map":{"version":3,"names":["React","useEffect","useState","config","serialize","useNavigate","naverSocialLogin","jsxDEV","_jsxDEV","NaverLogin","_s","navigate","alertOn","setAlertOn","enqueueSnackbar","useSnackbar","handleClose","userAccessToken","window","location","href","includes","getToken","token","split","console","log","document","cookie","path","initializeNaverLogin","naverLogin","naver","LoginWithNaverId","clientId","naverClientId","callbackUrl","naverRedirectUri","clientSecret","naverClientSecret","isPopup","loginButton","color","type","height","init","getLoginStatus","status","id","name","email","birthday","profile_image","user","naverLoginData","res","script","createElement","src","charset","onload","body","appendChild","removeChild","style","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/carax/Desktop/사이드 프로젝트/SFDB-Project/front/src/pages/user/NaverLogin.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport config from \"../../config\";\r\nimport { serialize } from \"cookie\";\r\nimport { useNavigate } from \"react-router\";\r\nimport { naverSocialLogin } from \"../../axios/user/loginLogic\";\r\n\r\nconst NaverLogin = () => {\r\n  const navigate = useNavigate();\r\n  const [alertOn, setAlertOn] = useState(false);\r\n  const { enqueueSnackbar } = useSnackbar(); \r\n  \r\n  const handleClose = () => {\r\n    setAlertOn(false)\r\n  }\r\n\r\n\r\n  const userAccessToken = () => {\r\n    window.location.href.includes('access_token') && getToken();\r\n  };\r\n\r\n  const getToken = () => {\r\n    const token = window.location.href.split('=')[1].split('&')[0];\r\n    console.log(token);\r\n    document.cookie = serialize(\"naverToken\", token, { path: '/' });\r\n   \r\n  };\r\n\r\n  \r\n  const initializeNaverLogin = () => {\r\n    const naverLogin = new window.naver.LoginWithNaverId({\r\n      clientId: config.naverClientId,\r\n      callbackUrl: config.naverRedirectUri,\r\n      clientSecret: config.naverClientSecret,\r\n      isPopup: false,\r\n      loginButton: { color: \"green\", type: 3, height: \"46\" },\r\n    });\r\n\r\n    naverLogin.init();\r\n\r\n    naverLogin.getLoginStatus(async function (status) {\r\n      if (status) {\r\n        const { id, name, email, birthday, profile_image } = naverLogin.user;\r\n\r\n        const naverLoginData = {\r\n          id,\r\n          name,\r\n          email,\r\n          birthday,\r\n          profile_image,\r\n        };\r\n\r\n        const res = await naverSocialLogin(naverLoginData);\r\n        if (res === 1) {\r\n          console.log(\"네이버 로그인 성공!\");\r\n          console.log(\"프로필 이미지 URL:\", profile_image);\r\n\r\n          userAccessToken();\r\n          document.cookie = serialize(\"userId\", id, { path: '/' });\r\n          document.cookie = serialize(\"userName\", name, { path: '/' });\r\n          document.cookie = serialize(\"userEmail\", email, { path: '/' });\r\n          document.cookie = serialize(\"userBirth\", birthday, { path: '/' });\r\n          document.cookie = serialize(\"userImage\", profile_image, { path: '/' });\r\n\r\n          navigate('/main')\r\n        } else {\r\n          console.log(\"Naver 로그인 실패\");\r\n        }\r\n      } else {\r\n      }\r\n    });\r\n  };\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    const script = document.createElement(\"script\");\r\n    script.src = \"https://static.nid.naver.com/js/naveridlogin_js_sdk_2.0.2.js\";\r\n    script.charset = \"utf-8\";\r\n    script.onload = () => initializeNaverLogin();\r\n    document.body.appendChild(script);\r\n    return () => {\r\n      document.body.removeChild(script);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div id=\"naverIdLogin\" style={{ textAlign: \"center\" }}>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NaverLogin;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}