{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useLocation } from 'react-router';\nimport { movieDetailDB } from '../../axios/main/movieLogic';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MovieDetail = () => {\n  _s();\n  const location = useLocation();\n  const movieInfo = location.pathname.split('/movieDetail/')[1];\n  const [movieId, movieSeq] = movieInfo.match(/([A-Z])(\\d+)/).slice(1);\n  const [movieDetail, setMovieDetail] = useState();\n  useEffect(() => {\n    const getMovieDetail = async (movieId, movieSeq) => {\n      try {\n        const res = await movieDetailDB(movieId, movieSeq);\n        console.log(res.data);\n        setMovieDetail();\n      } catch (error) {\n        console.log(\"영화 상세정보 로드 실패 : \", error);\n      }\n    };\n    getMovieDetail();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n};\n_s(MovieDetail, \"JXBi7uK5fM5KkpD5haRdrHI6CFE=\", false, function () {\n  return [useLocation];\n});\n_c = MovieDetail;\nexport default MovieDetail;\nvar _c;\n$RefreshReg$(_c, \"MovieDetail\");","map":{"version":3,"names":["React","useEffect","useLocation","movieDetailDB","Fragment","_Fragment","jsxDEV","_jsxDEV","MovieDetail","_s","location","movieInfo","pathname","split","movieId","movieSeq","match","slice","movieDetail","setMovieDetail","useState","getMovieDetail","res","console","log","data","error","_c","$RefreshReg$"],"sources":["C:/Users/carax/Desktop/사이드 프로젝트/SFDB-Project/front/src/pages/detail/MovieDetail.jsx"],"sourcesContent":["import React, { useEffect } from 'react'\r\nimport { useLocation } from 'react-router';\r\nimport { movieDetailDB } from '../../axios/main/movieLogic';\r\n\r\nconst MovieDetail = () => {\r\n  const location = useLocation();\r\n  const movieInfo = location.pathname.split('/movieDetail/')[1];\r\n  const [movieId, movieSeq] = movieInfo.match(/([A-Z])(\\d+)/).slice(1);\r\n\r\n  const [movieDetail , setMovieDetail] = useState()\r\n\r\n  useEffect(() => {\r\n  const getMovieDetail = async (movieId , movieSeq) => {\r\n    try {\r\n      const res = await movieDetailDB(movieId , movieSeq)\r\n      console.log(res.data);\r\n      setMovieDetail()\r\n    } catch (error) {\r\n      console.log(\"영화 상세정보 로드 실패 : \" , error);\r\n    }\r\n  }\r\n    getMovieDetail()\r\n  },[])\r\n\r\n  return (\r\n    <>\r\n    \r\n    </>\r\n  )\r\n}\r\n\r\nexport default MovieDetail"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,WAAW,QAAQ,cAAc;AAC1C,SAASC,aAAa,QAAQ,6BAA6B;AAAC,SAAAC,QAAA,IAAAC,SAAA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE5D,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAMC,QAAQ,GAAGR,WAAW,CAAC,CAAC;EAC9B,MAAMS,SAAS,GAAGD,QAAQ,CAACE,QAAQ,CAACC,KAAK,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC;EAC7D,MAAM,CAACC,OAAO,EAAEC,QAAQ,CAAC,GAAGJ,SAAS,CAACK,KAAK,CAAC,cAAc,CAAC,CAACC,KAAK,CAAC,CAAC,CAAC;EAEpE,MAAM,CAACC,WAAW,EAAGC,cAAc,CAAC,GAAGC,QAAQ,CAAC,CAAC;EAEjDnB,SAAS,CAAC,MAAM;IAChB,MAAMoB,cAAc,GAAG,MAAAA,CAAOP,OAAO,EAAGC,QAAQ,KAAK;MACnD,IAAI;QACF,MAAMO,GAAG,GAAG,MAAMnB,aAAa,CAACW,OAAO,EAAGC,QAAQ,CAAC;QACnDQ,OAAO,CAACC,GAAG,CAACF,GAAG,CAACG,IAAI,CAAC;QACrBN,cAAc,CAAC,CAAC;MAClB,CAAC,CAAC,OAAOO,KAAK,EAAE;QACdH,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAGE,KAAK,CAAC;MACzC;IACF,CAAC;IACCL,cAAc,CAAC,CAAC;EAClB,CAAC,EAAC,EAAE,CAAC;EAEL,oBACEd,OAAA,CAAAF,SAAA,mBAEE,CAAC;AAEP,CAAC;AAAAI,EAAA,CAzBKD,WAAW;EAAA,QACEN,WAAW;AAAA;AAAAyB,EAAA,GADxBnB,WAAW;AA2BjB,eAAeA,WAAW;AAAA,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}