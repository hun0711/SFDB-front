{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\carax\\\\Desktop\\\\\\uC0AC\\uC774\\uB4DC \\uD504\\uB85C\\uC81D\\uD2B8\\\\SFDB-Project\\\\front\\\\src\\\\pages\\\\user\\\\ReleaseSoon.jsx\",\n  _s = $RefreshSig$();\nimport * as React from 'react';\nimport Title from './Title';\nimport TheatersIcon from '@mui/icons-material/Theaters';\nimport { useEffect } from 'react';\nimport { releaseSoonMovieDB } from '../../axios/main/movieLogic';\nimport { useState } from 'react';\nimport { Card, CardContent, Typography } from '@mui/material';\nimport { useSnackbar } from 'notistack';\nimport { useNavigate } from 'react-router';\nimport { firebaseStorage } from '../../utils/firebase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ReleaseSoon({\n  userInfo\n}) {\n  _s();\n  const navigate = useNavigate();\n  const [releaseSoonMovies, setReleaseSoonMovies] = useState([]);\n  const [posterUrls, setPosterUrls] = useState();\n  const [alertOn, setAlertOn] = useState(false);\n  const {\n    enqueueSnackbar\n  } = useSnackbar();\n  useEffect(() => {\n    const getReleaseSoonMovie = async () => {\n      try {\n        const res = await releaseSoonMovieDB();\n        setReleaseSoonMovies(res[0]);\n      } catch (error) {\n        console.log('개봉 예정 영화 로드 실패 : ', error);\n      }\n    };\n    getReleaseSoonMovie();\n  }, []);\n  useEffect(() => {\n    const getPosterUrls = async () => {\n      const storageRef = firebaseStorage.ref(`poster/${releaseSoonMovies.movieId}${releaseSoonMovies.movieSeq}.jpg`);\n      try {\n        const url = await storageRef.getDownloadURL();\n        setPosterUrls(url);\n      } catch (error) {\n        console.log(\"포스터 URL 페칭 에러 : \", error);\n        return null;\n      }\n    };\n    getPosterUrls();\n  }, [releaseSoonMovies]);\n\n  /* Style */\n  const releaseSoonSectiontyle = {\n    minWidth: '600px',\n    maxWidth: '600px',\n    minHeight: '150px',\n    marginTop: '10px',\n    display: 'flex',\n    alignItems: 'center',\n    flexDirection: 'row'\n  };\n\n  /*  \n  > */\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex'\n      },\n      children: [/*#__PURE__*/_jsxDEV(TheatersIcon, {\n        style: {\n          marginLeft: '15px',\n          marginRight: '5px',\n          marginTop: '3px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Title, {\n        children: \"\\uAC1C\\uBD09 \\uC608\\uC815\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 85\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: releaseSoonSectiontyle,\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        sx: {\n          maxWidth: 240,\n          height: 250,\n          mx: 2,\n          border: 'none',\n          marginRight: '10px',\n          cursor: 'pointer'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: posterUrls,\n          alt: releaseSoonMovies.title,\n          style: {\n            width: '100%',\n            height: '250px',\n            borderRadius: '3px 3px 3px 3px',\n            cursor: 'pointer'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n_s(ReleaseSoon, \"MAGnMQckmz2HpI9D9V9v/LHPXzE=\", false, function () {\n  return [useNavigate, useSnackbar];\n});\n_c = ReleaseSoon;\nvar _c;\n$RefreshReg$(_c, \"ReleaseSoon\");","map":{"version":3,"names":["React","Title","TheatersIcon","useEffect","releaseSoonMovieDB","useState","Card","CardContent","Typography","useSnackbar","useNavigate","firebaseStorage","jsxDEV","_jsxDEV","Fragment","_Fragment","ReleaseSoon","userInfo","_s","navigate","releaseSoonMovies","setReleaseSoonMovies","posterUrls","setPosterUrls","alertOn","setAlertOn","enqueueSnackbar","getReleaseSoonMovie","res","error","console","log","getPosterUrls","storageRef","ref","movieId","movieSeq","url","getDownloadURL","releaseSoonSectiontyle","minWidth","maxWidth","minHeight","marginTop","display","alignItems","flexDirection","children","style","marginLeft","marginRight","fileName","_jsxFileName","lineNumber","columnNumber","sx","height","mx","border","cursor","src","alt","title","width","borderRadius","_c","$RefreshReg$"],"sources":["C:/Users/carax/Desktop/사이드 프로젝트/SFDB-Project/front/src/pages/user/ReleaseSoon.jsx"],"sourcesContent":["import * as React from 'react';\nimport Title from './Title';\nimport TheatersIcon from '@mui/icons-material/Theaters';\nimport { useEffect } from 'react';\nimport { releaseSoonMovieDB } from '../../axios/main/movieLogic';\nimport { useState } from 'react';\nimport { Card, CardContent, Typography } from '@mui/material';\nimport { useSnackbar } from 'notistack';\nimport { useNavigate } from 'react-router';\nimport { firebaseStorage } from '../../utils/firebase';\n\nexport default function ReleaseSoon({ userInfo }) {\n  const navigate = useNavigate();\n  const [releaseSoonMovies , setReleaseSoonMovies] = useState([])\n  const [posterUrls, setPosterUrls] = useState();\n  const [alertOn, setAlertOn] = useState(false)\n  const { enqueueSnackbar } = useSnackbar(); \n\n  useEffect(() => {\n  const getReleaseSoonMovie = async() => {\n    try {\n      const res = await releaseSoonMovieDB()\n      setReleaseSoonMovies(res[0])\n    } catch (error) {\n      console.log('개봉 예정 영화 로드 실패 : ', error);\n    }\n  }\n  getReleaseSoonMovie()\n  },[])\n\n  useEffect(() => {\n    const getPosterUrls = async () => {\n        const storageRef = firebaseStorage.ref(`poster/${releaseSoonMovies.movieId}${releaseSoonMovies.movieSeq}.jpg`);\n        try {\n          const url = await storageRef.getDownloadURL();\n          setPosterUrls(url);\n        } catch (error) {\n          console.log(\"포스터 URL 페칭 에러 : \" , error);\n          return null;\n        }\n    };\n    getPosterUrls();\n  }, [releaseSoonMovies]);\n\n\n  /* Style */\n  const releaseSoonSectiontyle = {\n    minWidth: '600px',\n    maxWidth: '600px',\n    minHeight: '150px',\n    marginTop: '10px',\n    display: 'flex',\n    alignItems: 'center',\n    flexDirection: 'row'\n  };\n\n/*  \n> */\n  return (\n    <>\n    <div style={{display:'flex'}}>\n      <TheatersIcon style={{marginLeft:'15px',marginRight:'5px' ,marginTop:'3px'}}/><Title>개봉 예정</Title>\n    </div>\n\n    <div style={releaseSoonSectiontyle}>\n    <Card sx={{ maxWidth: 240, height: 250, mx: 2, border: 'none', marginRight: '10px', cursor: 'pointer'}}>\n        <img\n                src={posterUrls}\n                alt={releaseSoonMovies.title}\n                style={{ width: '100%', height: '250px', borderRadius: '3px 3px 3px 3px' ,cursor:'pointer'}}\n              />\n            </Card>\n    </div>\n    </>\n  );\n}\n"],"mappings":";;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAOC,KAAK,MAAM,SAAS;AAC3B,OAAOC,YAAY,MAAM,8BAA8B;AACvD,SAASC,SAAS,QAAQ,OAAO;AACjC,SAASC,kBAAkB,QAAQ,6BAA6B;AAChE,SAASC,QAAQ,QAAQ,OAAO;AAChC,SAASC,IAAI,EAAEC,WAAW,EAAEC,UAAU,QAAQ,eAAe;AAC7D,SAASC,WAAW,QAAQ,WAAW;AACvC,SAASC,WAAW,QAAQ,cAAc;AAC1C,SAASC,eAAe,QAAQ,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEvD,eAAe,SAASC,WAAWA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EAChD,MAAMC,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACU,iBAAiB,EAAGC,oBAAoB,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAC/D,MAAM,CAACiB,UAAU,EAAEC,aAAa,CAAC,GAAGlB,QAAQ,CAAC,CAAC;EAC9C,MAAM,CAACmB,OAAO,EAAEC,UAAU,CAAC,GAAGpB,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM;IAAEqB;EAAgB,CAAC,GAAGjB,WAAW,CAAC,CAAC;EAEzCN,SAAS,CAAC,MAAM;IAChB,MAAMwB,mBAAmB,GAAG,MAAAA,CAAA,KAAW;MACrC,IAAI;QACF,MAAMC,GAAG,GAAG,MAAMxB,kBAAkB,CAAC,CAAC;QACtCiB,oBAAoB,CAACO,GAAG,CAAC,CAAC,CAAC,CAAC;MAC9B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEF,KAAK,CAAC;MACzC;IACF,CAAC;IACDF,mBAAmB,CAAC,CAAC;EACrB,CAAC,EAAC,EAAE,CAAC;EAELxB,SAAS,CAAC,MAAM;IACd,MAAM6B,aAAa,GAAG,MAAAA,CAAA,KAAY;MAC9B,MAAMC,UAAU,GAAGtB,eAAe,CAACuB,GAAG,CAAE,UAASd,iBAAiB,CAACe,OAAQ,GAAEf,iBAAiB,CAACgB,QAAS,MAAK,CAAC;MAC9G,IAAI;QACF,MAAMC,GAAG,GAAG,MAAMJ,UAAU,CAACK,cAAc,CAAC,CAAC;QAC7Cf,aAAa,CAACc,GAAG,CAAC;MACpB,CAAC,CAAC,OAAOR,KAAK,EAAE;QACdC,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAGF,KAAK,CAAC;QACvC,OAAO,IAAI;MACb;IACJ,CAAC;IACDG,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,CAACZ,iBAAiB,CAAC,CAAC;;EAGvB;EACA,MAAMmB,sBAAsB,GAAG;IAC7BC,QAAQ,EAAE,OAAO;IACjBC,QAAQ,EAAE,OAAO;IACjBC,SAAS,EAAE,OAAO;IAClBC,SAAS,EAAE,MAAM;IACjBC,OAAO,EAAE,MAAM;IACfC,UAAU,EAAE,QAAQ;IACpBC,aAAa,EAAE;EACjB,CAAC;;EAEH;AACA;EACE,oBACEjC,OAAA,CAAAE,SAAA;IAAAgC,QAAA,gBACAlC,OAAA;MAAKmC,KAAK,EAAE;QAACJ,OAAO,EAAC;MAAM,CAAE;MAAAG,QAAA,gBAC3BlC,OAAA,CAACX,YAAY;QAAC8C,KAAK,EAAE;UAACC,UAAU,EAAC,MAAM;UAACC,WAAW,EAAC,KAAK;UAAEP,SAAS,EAAC;QAAK;MAAE;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eAAAzC,OAAA,CAACZ,KAAK;QAAA8C,QAAA,EAAC;MAAK;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/F,CAAC,eAENzC,OAAA;MAAKmC,KAAK,EAAET,sBAAuB;MAAAQ,QAAA,eACnClC,OAAA,CAACP,IAAI;QAACiD,EAAE,EAAE;UAAEd,QAAQ,EAAE,GAAG;UAAEe,MAAM,EAAE,GAAG;UAAEC,EAAE,EAAE,CAAC;UAAEC,MAAM,EAAE,MAAM;UAAER,WAAW,EAAE,MAAM;UAAES,MAAM,EAAE;QAAS,CAAE;QAAAZ,QAAA,eACnGlC,OAAA;UACQ+C,GAAG,EAAEtC,UAAW;UAChBuC,GAAG,EAAEzC,iBAAiB,CAAC0C,KAAM;UAC7Bd,KAAK,EAAE;YAAEe,KAAK,EAAE,MAAM;YAAEP,MAAM,EAAE,OAAO;YAAEQ,YAAY,EAAE,iBAAiB;YAAEL,MAAM,EAAC;UAAS;QAAE;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC7F;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV,CAAC;EAAA,eACJ,CAAC;AAEP;AAACpC,EAAA,CAhEuBF,WAAW;EAAA,QAChBN,WAAW,EAIAD,WAAW;AAAA;AAAAwD,EAAA,GALjBjD,WAAW;AAAA,IAAAiD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}