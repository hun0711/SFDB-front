{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\carax\\\\Desktop\\\\\\uC0AC\\uC774\\uB4DC \\uD504\\uB85C\\uC81D\\uD2B8\\\\SFDB-Project\\\\front\\\\src\\\\pages\\\\detail\\\\MovieDetailMidSection2.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { directorInfoByNameDB, directorInfoDB } from '../../axios/main/movieLogic';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MovieDetailMidSection2 = ({\n  movieDetail\n}) => {\n  _s();\n  const [directors, setDirectors] = useState([]);\n  useEffect(() => {\n    const fetchDirectorsInfo = async () => {\n      const directorIds = movieDetail.directorIds ? movieDetail.directorIds.split(',') : [];\n      const directorNms = movieDetail.directorNm ? movieDetail.directorNm.split(',') : [];\n      const directorsInfo = await Promise.all(directorIds.map(async (directorId, index) => {\n        if (directorId) {\n          try {\n            return await directorInfoDB(directorId);\n          } catch (error) {\n            console.log('감독 정보 로드 실패 : ', error);\n            return null;\n          }\n        } else if (directorNms[index]) {\n          try {\n            return await directorInfoByNameDB(directorNms[index]);\n          } catch (error) {\n            console.log('감독 정보 로드 실패 : ', error);\n            return null;\n          }\n        }\n        return null;\n      }));\n      setDirectors(directorsInfo.filter(info => info !== null));\n    };\n    fetchDirectorsInfo();\n  }, [movieDetail.directorIds, movieDetail.directorNm]);\n  const creditInfoStyle = {};\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: creditInfoStyle,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\uAC10\\uB3C5 \\uC815\\uBCF4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), directors.map((director, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\uC774\\uB984: \", director === null || director === void 0 ? void 0 : director.directorNm]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(MovieDetailMidSection2, \"MOMXR1SbmS2ZUbc3rI2O9ok3sSA=\");\n_c = MovieDetailMidSection2;\nexport default MovieDetailMidSection2;\nvar _c;\n$RefreshReg$(_c, \"MovieDetailMidSection2\");","map":{"version":3,"names":["React","useEffect","useState","directorInfoByNameDB","directorInfoDB","jsxDEV","_jsxDEV","Fragment","_Fragment","MovieDetailMidSection2","movieDetail","_s","directors","setDirectors","fetchDirectorsInfo","directorIds","split","directorNms","directorNm","directorsInfo","Promise","all","map","directorId","index","error","console","log","filter","info","creditInfoStyle","children","style","fileName","_jsxFileName","lineNumber","columnNumber","director","_c","$RefreshReg$"],"sources":["C:/Users/carax/Desktop/사이드 프로젝트/SFDB-Project/front/src/pages/detail/MovieDetailMidSection2.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { directorInfoByNameDB, directorInfoDB } from '../../axios/main/movieLogic';\r\n\r\nconst MovieDetailMidSection2 = ({ movieDetail }) => {\r\n  const [directors, setDirectors] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchDirectorsInfo = async () => {\r\n      const directorIds = movieDetail.directorIds ? movieDetail.directorIds.split(',') : [];\r\n      const directorNms = movieDetail.directorNm ? movieDetail.directorNm.split(',') : [];\r\n\r\n      const directorsInfo = await Promise.all(\r\n        directorIds.map(async (directorId, index) => {\r\n          if (directorId) {\r\n            try {\r\n              return await directorInfoDB(directorId);\r\n            } catch (error) {\r\n              console.log('감독 정보 로드 실패 : ', error);\r\n              return null;\r\n            }\r\n          } else if (directorNms[index]) {\r\n            try {\r\n              return await directorInfoByNameDB(directorNms[index]);\r\n            } catch (error) {\r\n              console.log('감독 정보 로드 실패 : ', error);\r\n              return null;\r\n            }\r\n          }\r\n          return null;\r\n        })\r\n      );\r\n\r\n      setDirectors(directorsInfo.filter(info => info !== null));\r\n    };\r\n\r\n    fetchDirectorsInfo();\r\n  }, [movieDetail.directorIds, movieDetail.directorNm]);\r\n\r\n  const creditInfoStyle = {};\r\n\r\n  return (\r\n    <>\r\n      <div style={creditInfoStyle}>\r\n        <h3>감독 정보</h3>\r\n        {directors.map((director, index) => (\r\n          <div key={index}>\r\n            <p>이름: {director?.directorNm}</p>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MovieDetailMidSection2;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,oBAAoB,EAAEC,cAAc,QAAQ,6BAA6B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEnF,MAAMC,sBAAsB,GAAGA,CAAC;EAAEC;AAAY,CAAC,KAAK;EAAAC,EAAA;EAClD,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAE9CD,SAAS,CAAC,MAAM;IACd,MAAMa,kBAAkB,GAAG,MAAAA,CAAA,KAAY;MACrC,MAAMC,WAAW,GAAGL,WAAW,CAACK,WAAW,GAAGL,WAAW,CAACK,WAAW,CAACC,KAAK,CAAC,GAAG,CAAC,GAAG,EAAE;MACrF,MAAMC,WAAW,GAAGP,WAAW,CAACQ,UAAU,GAAGR,WAAW,CAACQ,UAAU,CAACF,KAAK,CAAC,GAAG,CAAC,GAAG,EAAE;MAEnF,MAAMG,aAAa,GAAG,MAAMC,OAAO,CAACC,GAAG,CACrCN,WAAW,CAACO,GAAG,CAAC,OAAOC,UAAU,EAAEC,KAAK,KAAK;QAC3C,IAAID,UAAU,EAAE;UACd,IAAI;YACF,OAAO,MAAMnB,cAAc,CAACmB,UAAU,CAAC;UACzC,CAAC,CAAC,OAAOE,KAAK,EAAE;YACdC,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEF,KAAK,CAAC;YACpC,OAAO,IAAI;UACb;QACF,CAAC,MAAM,IAAIR,WAAW,CAACO,KAAK,CAAC,EAAE;UAC7B,IAAI;YACF,OAAO,MAAMrB,oBAAoB,CAACc,WAAW,CAACO,KAAK,CAAC,CAAC;UACvD,CAAC,CAAC,OAAOC,KAAK,EAAE;YACdC,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEF,KAAK,CAAC;YACpC,OAAO,IAAI;UACb;QACF;QACA,OAAO,IAAI;MACb,CAAC,CACH,CAAC;MAEDZ,YAAY,CAACM,aAAa,CAACS,MAAM,CAACC,IAAI,IAAIA,IAAI,KAAK,IAAI,CAAC,CAAC;IAC3D,CAAC;IAEDf,kBAAkB,CAAC,CAAC;EACtB,CAAC,EAAE,CAACJ,WAAW,CAACK,WAAW,EAAEL,WAAW,CAACQ,UAAU,CAAC,CAAC;EAErD,MAAMY,eAAe,GAAG,CAAC,CAAC;EAE1B,oBACExB,OAAA,CAAAE,SAAA;IAAAuB,QAAA,eACEzB,OAAA;MAAK0B,KAAK,EAAEF,eAAgB;MAAAC,QAAA,gBAC1BzB,OAAA;QAAAyB,QAAA,EAAI;MAAK;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EACbxB,SAAS,CAACU,GAAG,CAAC,CAACe,QAAQ,EAAEb,KAAK,kBAC7BlB,OAAA;QAAAyB,QAAA,eACEzB,OAAA;UAAAyB,QAAA,GAAG,gBAAI,EAACM,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEnB,UAAU;QAAA;UAAAe,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI;MAAC,GADzBZ,KAAK;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EAAC,gBACN,CAAC;AAEP,CAAC;AAACzB,EAAA,CAjDIF,sBAAsB;AAAA6B,EAAA,GAAtB7B,sBAAsB;AAmD5B,eAAeA,sBAAsB;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}