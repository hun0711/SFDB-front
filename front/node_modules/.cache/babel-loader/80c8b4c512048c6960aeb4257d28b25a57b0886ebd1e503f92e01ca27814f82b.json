{"ast":null,"code":"import * as React from 'react';\nimport { singleItemValueManager } from '../utils/valueManagers';\nimport { getTodayDate as _getTodayDate } from '../utils/date-utils';\nimport { SECTION_TYPE_GRANULARITY } from '../utils/getDefaultReferenceDate';\nexport var useClockReferenceDate = function useClockReferenceDate(_ref) {\n  var value = _ref.value,\n    referenceDateProp = _ref.referenceDate,\n    utils = _ref.utils,\n    props = _ref.props,\n    timezone = _ref.timezone;\n  var referenceDate = React.useMemo(function () {\n    return singleItemValueManager.getInitialReferenceValue({\n      value: value,\n      utils: utils,\n      props: props,\n      referenceDate: referenceDateProp,\n      granularity: SECTION_TYPE_GRANULARITY.day,\n      timezone: timezone,\n      getTodayDate: function getTodayDate() {\n        return _getTodayDate(utils, timezone, 'date');\n      }\n    });\n  },\n  // We only want to compute the reference date on mount.\n  [] // eslint-disable-line react-hooks/exhaustive-deps\n  );\n\n  return value != null ? value : referenceDate;\n};","map":{"version":3,"names":["React","singleItemValueManager","getTodayDate","SECTION_TYPE_GRANULARITY","useClockReferenceDate","_ref","value","referenceDateProp","referenceDate","utils","props","timezone","useMemo","getInitialReferenceValue","granularity","day"],"sources":["C:/Users/carax/Desktop/SideProject/SFDB-Project/front/node_modules/@mui/x-date-pickers/internals/hooks/useClockReferenceDate.js"],"sourcesContent":["import * as React from 'react';\nimport { singleItemValueManager } from '../utils/valueManagers';\nimport { getTodayDate } from '../utils/date-utils';\nimport { SECTION_TYPE_GRANULARITY } from '../utils/getDefaultReferenceDate';\nexport const useClockReferenceDate = ({\n  value,\n  referenceDate: referenceDateProp,\n  utils,\n  props,\n  timezone\n}) => {\n  const referenceDate = React.useMemo(() => singleItemValueManager.getInitialReferenceValue({\n    value,\n    utils,\n    props,\n    referenceDate: referenceDateProp,\n    granularity: SECTION_TYPE_GRANULARITY.day,\n    timezone,\n    getTodayDate: () => getTodayDate(utils, timezone, 'date')\n  }),\n  // We only want to compute the reference date on mount.\n  [] // eslint-disable-line react-hooks/exhaustive-deps\n  );\n\n  return value != null ? value : referenceDate;\n};"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,sBAAsB,QAAQ,wBAAwB;AAC/D,SAASC,YAAY,IAAZA,aAAY,QAAQ,qBAAqB;AAClD,SAASC,wBAAwB,QAAQ,kCAAkC;AAC3E,OAAO,IAAMC,qBAAqB,GAAG,SAAxBA,qBAAqBA,CAAAC,IAAA,EAM5B;EAAA,IALJC,KAAK,GAAAD,IAAA,CAALC,KAAK;IACUC,iBAAiB,GAAAF,IAAA,CAAhCG,aAAa;IACbC,KAAK,GAAAJ,IAAA,CAALI,KAAK;IACLC,KAAK,GAAAL,IAAA,CAALK,KAAK;IACLC,QAAQ,GAAAN,IAAA,CAARM,QAAQ;EAER,IAAMH,aAAa,GAAGR,KAAK,CAACY,OAAO,CAAC;IAAA,OAAMX,sBAAsB,CAACY,wBAAwB,CAAC;MACxFP,KAAK,EAALA,KAAK;MACLG,KAAK,EAALA,KAAK;MACLC,KAAK,EAALA,KAAK;MACLF,aAAa,EAAED,iBAAiB;MAChCO,WAAW,EAAEX,wBAAwB,CAACY,GAAG;MACzCJ,QAAQ,EAARA,QAAQ;MACRT,YAAY,EAAE,SAAAA,aAAA;QAAA,OAAMA,aAAY,CAACO,KAAK,EAAEE,QAAQ,EAAE,MAAM,CAAC;MAAA;IAC3D,CAAC,CAAC;EAAA;EACF;EACA,EAAE,CAAC;EACH,CAAC;;EAED,OAAOL,KAAK,IAAI,IAAI,GAAGA,KAAK,GAAGE,aAAa;AAC9C,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}