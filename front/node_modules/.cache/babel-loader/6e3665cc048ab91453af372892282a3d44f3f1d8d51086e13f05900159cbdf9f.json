{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\carax\\\\Desktop\\\\\\uC0AC\\uC774\\uB4DC \\uD504\\uB85C\\uC81D\\uD2B8\\\\SFDB-Project\\\\front\\\\src\\\\pages\\\\user\\\\NaverLogin.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { naverSocialLogin } from '../../axios/user/loginLogic';\nimport { serialize } from 'cookie';\nimport config from '../../config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NaverLogin = () => {\n  _s();\n  // 네이버 스크립트를 로드\n  useEffect(() => {\n    // 네이버 SDK 스크립트 로드\n    const script = document.createElement(\"script\");\n    script.src = \"https://static.nid.naver.com/js/naveridlogin_js_sdk_2.0.2.js\";\n    script.charset = \"utf-8\";\n    script.onload = () => {\n      handleNaverLogin();\n    };\n    document.body.appendChild(script);\n  }, []);\n  {/* 네이버 로그인 처리 함수 */}\n  const handleNaverLogin = async () => {\n    const naverLogin = new window.naver.LoginWithNaverId({\n      clientId: config.naverClientId,\n      callbackUrl: config.naverRedirectUri,\n      clientSecret: config.naverClientSecret,\n      isPopup: false,\n      loginButton: {\n        color: 'green',\n        type: 3,\n        height: '60'\n      }\n    });\n    naverLogin.init();\n\n    // 로그인 상태 체크\n    if (naverLogin.user) {\n      // 사용자 정보\n      const naverLoginData = {\n        userId: naverLogin.user.id,\n        userEmail: naverLogin.user.email,\n        userName: naverLogin.user.nickname,\n        userImage: naverLogin.user.profileImage\n      };\n      const res = await naverSocialLogin(naverLoginData);\n\n      // 로그인 성공 여부에 따라 처리\n      if (res.success) {\n        console.log('로그인 성공');\n        document.cookie = serialize('userId', naverLoginData.userId, {\n          path: '/'\n        });\n        document.cookie = serialize('userEmail', naverLoginData.userEmail, {\n          path: '/'\n        });\n        document.cookie = serialize('userName', naverLoginData.userName, {\n          path: '/'\n        });\n        document.cookie = serialize('userImage', naverLoginData.userImage, {\n          path: '/'\n        });\n        // 여기서 원하는 경로로 리다이렉트 또는 상태를 변경하여 처리할 수 있습니다.\n      } else {\n        console.log('백엔드에서 로그인 처리 실패:', res.error);\n      }\n    } else {\n      console.log('네이버 아이디로 로그인을 취소하였습니다.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: 'center'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"img\", {\n      src: \"/images/logo/naver.png\",\n      alt: \"\\uB124\\uC774\\uBC84 \\uB85C\\uADF8\\uC778\",\n      style: {\n        width: '70px',\n        height: '70px',\n        cursor: 'pointer'\n      },\n      onClick: handleNaverLogin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_s(NaverLogin, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = NaverLogin;\nexport default NaverLogin;\nvar _c;\n$RefreshReg$(_c, \"NaverLogin\");","map":{"version":3,"names":["React","useEffect","useState","naverSocialLogin","serialize","config","jsxDEV","_jsxDEV","NaverLogin","_s","script","document","createElement","src","charset","onload","handleNaverLogin","body","appendChild","naverLogin","window","naver","LoginWithNaverId","clientId","naverClientId","callbackUrl","naverRedirectUri","clientSecret","naverClientSecret","isPopup","loginButton","color","type","height","init","user","naverLoginData","userId","id","userEmail","email","userName","nickname","userImage","profileImage","res","success","console","log","cookie","path","error","style","textAlign","children","alt","width","cursor","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/carax/Desktop/사이드 프로젝트/SFDB-Project/front/src/pages/user/NaverLogin.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { naverSocialLogin } from '../../axios/user/loginLogic';\r\nimport { serialize } from 'cookie';\r\nimport config from '../../config';\r\n\r\nconst NaverLogin= () => {\r\n\r\n    // 네이버 스크립트를 로드\r\n    useEffect(() => {\r\n      // 네이버 SDK 스크립트 로드\r\n      const script = document.createElement(\"script\");\r\n      script.src = \"https://static.nid.naver.com/js/naveridlogin_js_sdk_2.0.2.js\";\r\n      script.charset = \"utf-8\";\r\n      script.onload = () => {\r\n        handleNaverLogin();\r\n      };\r\n      document.body.appendChild(script);\r\n    }, []);\r\n\r\n\r\n  {/* 네이버 로그인 처리 함수 */}\r\n\r\n    const handleNaverLogin = async() => {\r\n      const naverLogin = new window.naver.LoginWithNaverId({\r\n        clientId: config.naverClientId,\r\n        callbackUrl: config.naverRedirectUri,\r\n        clientSecret: config.naverClientSecret,\r\n        isPopup: false,\r\n        loginButton: { color: 'green', type: 3, height: '60' }\r\n      });\r\n      naverLogin.init();\r\n\r\n\r\n      // 로그인 상태 체크\r\n      if (naverLogin.user) {\r\n        // 사용자 정보\r\n        const naverLoginData = {\r\n          userId: naverLogin.user.id,\r\n          userEmail: naverLogin.user.email,\r\n          userName: naverLogin.user.nickname,\r\n          userImage: naverLogin.user.profileImage,\r\n        };\r\n        const res = await naverSocialLogin(naverLoginData);\r\n\r\n        // 로그인 성공 여부에 따라 처리\r\n        if (res.success) {\r\n          console.log('로그인 성공');\r\n          document.cookie = serialize('userId', naverLoginData.userId, { path: '/' });\r\n          document.cookie = serialize('userEmail', naverLoginData.userEmail, { path: '/' });\r\n          document.cookie = serialize('userName', naverLoginData.userName, { path: '/' });\r\n          document.cookie = serialize('userImage', naverLoginData.userImage, { path: '/' });\r\n          // 여기서 원하는 경로로 리다이렉트 또는 상태를 변경하여 처리할 수 있습니다.\r\n        } else {\r\n          console.log('백엔드에서 로그인 처리 실패:', res.error);\r\n        }\r\n      } else {\r\n        console.log('네이버 아이디로 로그인을 취소하였습니다.');\r\n      } \r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <div style={{ textAlign: 'center' }}>\r\n      <img\r\n        src=\"/images/logo/naver.png\"\r\n        alt=\"네이버 로그인\"\r\n        style={{ width: '70px', height: '70px', cursor: 'pointer' }}\r\n        onClick={handleNaverLogin}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NaverLogin;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}