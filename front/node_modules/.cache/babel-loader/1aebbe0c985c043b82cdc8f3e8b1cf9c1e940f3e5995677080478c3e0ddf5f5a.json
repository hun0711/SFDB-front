{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\carax\\\\Desktop\\\\\\uC0AC\\uC774\\uB4DC \\uD504\\uB85C\\uC81D\\uD2B8\\\\SFDB-Project\\\\front\\\\src\\\\pages\\\\detail\\\\MovieDetailMidSection2.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { directorInfoDB } from '../../axios/main/movieLogic';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MovieDetailMidSection2 = ({\n  movieDetail\n}) => {\n  _s();\n  const [directors, setDirectors] = useState([]);\n  useEffect(() => {\n    const fetchDirectorsInfo = async () => {\n      const directorIds = movieDetail.directorIds ? movieDetail.directorIds.split(',') : [];\n      try {\n        const response = await directorInfoDB({\n          directorIds\n        });\n        if (response) {\n          setDirectors(response);\n        }\n      } catch (error) {\n        console.log('감독 정보 로드 실패 : ', error);\n      }\n    };\n    fetchDirectorsInfo();\n  }, [movieDetail.directorIds]);\n  console.log(directors);\n  const creditInfoStyle = {};\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: creditInfoStyle,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\uAC10\\uB3C5 \\uC815\\uBCF4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), directors.map((director, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\uC774\\uB984: \", director === null || director === void 0 ? void 0 : director.directorNm]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(MovieDetailMidSection2, \"MOMXR1SbmS2ZUbc3rI2O9ok3sSA=\");\n_c = MovieDetailMidSection2;\nexport default MovieDetailMidSection2;\nvar _c;\n$RefreshReg$(_c, \"MovieDetailMidSection2\");","map":{"version":3,"names":["React","useEffect","useState","directorInfoDB","jsxDEV","_jsxDEV","Fragment","_Fragment","MovieDetailMidSection2","movieDetail","_s","directors","setDirectors","fetchDirectorsInfo","directorIds","split","response","error","console","log","creditInfoStyle","children","style","fileName","_jsxFileName","lineNumber","columnNumber","map","director","index","directorNm","_c","$RefreshReg$"],"sources":["C:/Users/carax/Desktop/사이드 프로젝트/SFDB-Project/front/src/pages/detail/MovieDetailMidSection2.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { directorInfoDB } from '../../axios/main/movieLogic';\r\n\r\nconst MovieDetailMidSection2 = ({ movieDetail }) => {\r\n  const [directors, setDirectors] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchDirectorsInfo = async () => {\r\n      const directorIds = movieDetail.directorIds ? movieDetail.directorIds.split(',') : [];\r\n\r\n      try {\r\n        const response = await directorInfoDB({ directorIds });\r\n\r\n        if (response) {\r\n          setDirectors(response); \r\n        }\r\n      } catch (error) {\r\n        console.log('감독 정보 로드 실패 : ', error);\r\n      }\r\n    };\r\n\r\n    fetchDirectorsInfo();\r\n  }, [movieDetail.directorIds]);\r\n\r\n  console.log(directors);\r\n  const creditInfoStyle = {};\r\n\r\n  return (\r\n    <>\r\n      <div style={creditInfoStyle}>\r\n        <h3>감독 정보</h3>\r\n        {directors.map((director, index) => (\r\n          <div key={index}>\r\n            <p>이름: {director?.directorNm}</p>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MovieDetailMidSection2;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,cAAc,QAAQ,6BAA6B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE7D,MAAMC,sBAAsB,GAAGA,CAAC;EAAEC;AAAY,CAAC,KAAK;EAAAC,EAAA;EAClD,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAE9CD,SAAS,CAAC,MAAM;IACd,MAAMY,kBAAkB,GAAG,MAAAA,CAAA,KAAY;MACrC,MAAMC,WAAW,GAAGL,WAAW,CAACK,WAAW,GAAGL,WAAW,CAACK,WAAW,CAACC,KAAK,CAAC,GAAG,CAAC,GAAG,EAAE;MAErF,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMb,cAAc,CAAC;UAAEW;QAAY,CAAC,CAAC;QAEtD,IAAIE,QAAQ,EAAE;UACZJ,YAAY,CAACI,QAAQ,CAAC;QACxB;MACF,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEF,KAAK,CAAC;MACtC;IACF,CAAC;IAEDJ,kBAAkB,CAAC,CAAC;EACtB,CAAC,EAAE,CAACJ,WAAW,CAACK,WAAW,CAAC,CAAC;EAE7BI,OAAO,CAACC,GAAG,CAACR,SAAS,CAAC;EACtB,MAAMS,eAAe,GAAG,CAAC,CAAC;EAE1B,oBACEf,OAAA,CAAAE,SAAA;IAAAc,QAAA,eACEhB,OAAA;MAAKiB,KAAK,EAAEF,eAAgB;MAAAC,QAAA,gBAC1BhB,OAAA;QAAAgB,QAAA,EAAI;MAAK;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EACbf,SAAS,CAACgB,GAAG,CAAC,CAACC,QAAQ,EAAEC,KAAK,kBAC7BxB,OAAA;QAAAgB,QAAA,eACEhB,OAAA;UAAAgB,QAAA,GAAG,gBAAI,EAACO,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEE,UAAU;QAAA;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI;MAAC,GADzBG,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EAAC,gBACN,CAAC;AAEP,CAAC;AAAChB,EAAA,CApCIF,sBAAsB;AAAAuB,EAAA,GAAtBvB,sBAAsB;AAsC5B,eAAeA,sBAAsB;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}