{"ast":null,"code":"import axios from \"axios\";\nimport qs from \"qs\";\nexport const top20sfmoviesDB = async () => {\n  try {\n    const res = await axios.get(`http://localhost:8000/movie/top20SfMovie`);\n    console.log(res.data);\n    return res.data;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n};\nexport const recommendMoviesDB = async () => {\n  try {\n    const res = await axios.get(`http://localhost:8000/movie/recommendMovie`);\n    console.log(res.data);\n    return res.data;\n  } catch (error) {\n    console.log(error);\n    throw error;\n  }\n};\nexport const releaseSoonMovieDB = async () => {\n  try {\n    const res = await axios.get(\"http://localhost:8000/movie/releaseSoonMovie\");\n    return res.data;\n  } catch (error) {\n    console.log(error);\n    throw error;\n  }\n};\nexport const todayBoxofficeDB = async () => {\n  try {\n    const res = await axios.get(`http://localhost:8000/movie/todayBoxofficeRank`);\n    console.log(res.data);\n    return res.data;\n  } catch (error) {\n    console.log(error);\n    throw error;\n  }\n};\nexport const ottExistanceDB = async movieSeq => {\n  try {\n    const res = await axios.get(`http://localhost:8000/movie/ottExistance`, {\n      params: {\n        movieSeq: movieSeq\n      }\n    });\n    console.log(res.data);\n    return res.data;\n  } catch (error) {\n    console.log(error);\n    throw error;\n  }\n};\nexport const updateBoxofficeDB = async () => {\n  try {\n    const res = await axios.post(`http://localhost:8000/api/movies/updateBoxoffice`);\n    return res;\n  } catch (error) {\n    console.log(error);\n    throw error;\n  }\n};\nexport const movieDetailDB = async (movieId, movieSeq) => {\n  try {\n    const res = await axios.get(`http://localhost:8000/movie/movieDetail`, {\n      params: {\n        movieId: movieId,\n        movieSeq: movieSeq\n      }\n    });\n    console.log(res.data);\n    return res.data;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n};\nexport const directorInfoDB = async directorIds => {\n  try {\n    const res = await axios.get(`http://localhost:8000/movie/directorsInfo`, {\n      params: {\n        directorId: directorIds\n      },\n      paramsSerializer: params => {\n        return qs.stringify(params, {\n          arrayFormat: \"repeat\"\n        });\n      }\n    });\n    return res.data;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n};\nexport const directorInfoByNameDB = async directorNm => {\n  try {\n    const res = await axios.get(`http://localhost:8000/movie/directorsInfo`, {\n      params: {\n        directorNm: directorNm\n      }\n    });\n    return res.data;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n};\nexport const BoxOfficeDetailDB = async (movieId, movieSeq) => {\n  try {\n    const res = await axios.get(`http://localhost:8000/movie/boxofficeDetail`, {\n      params: {\n        movieId: movieId,\n        movieSeq: movieSeq\n      }\n    });\n    console.log(res.data);\n    return res.data;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n};\n_c = BoxOfficeDetailDB;\nexport const directorImageDB = async directors => {\n  try {\n    const res = await axios.get(`http://localhost:8000/api/directorImage`, {\n      params: {\n        directorNm: directors\n      }\n    });\n    console.log(res.data);\n    return res.data;\n  } catch (error) {\n    console.log(error);\n    throw error;\n  }\n};\nexport const actorImageDB = async actors => {\n  try {\n    const res = await axios.get(`http://localhost:8000/api/actorImage`, {\n      params: {\n        actorNm: directors\n      }\n    });\n    console.log(res.data);\n    return res.data;\n  } catch (error) {\n    console.log(error);\n    throw error;\n  }\n};\nvar _c;\n$RefreshReg$(_c, \"BoxOfficeDetailDB\");","map":{"version":3,"names":["axios","qs","top20sfmoviesDB","res","get","console","log","data","error","recommendMoviesDB","releaseSoonMovieDB","todayBoxofficeDB","ottExistanceDB","movieSeq","params","updateBoxofficeDB","post","movieDetailDB","movieId","directorInfoDB","directorIds","directorId","paramsSerializer","stringify","arrayFormat","directorInfoByNameDB","directorNm","BoxOfficeDetailDB","_c","directorImageDB","directors","actorImageDB","actors","actorNm","$RefreshReg$"],"sources":["C:/Users/carax/Desktop/사이드 프로젝트/SFDB-Project/front/src/axios/main/movieLogic.js"],"sourcesContent":["import axios from \"axios\";\r\nimport qs from \"qs\";\r\n\r\nexport const top20sfmoviesDB = async () => {\r\n  try {\r\n    const res = await axios.get(`http://localhost:8000/movie/top20SfMovie`);\r\n    console.log(res.data);\r\n    return res.data;\r\n  } catch (error) {\r\n    console.error(error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const recommendMoviesDB = async () => {\r\n  try {\r\n    const res = await axios.get(`http://localhost:8000/movie/recommendMovie`);\r\n    console.log(res.data);\r\n    return res.data;\r\n  } catch (error) {\r\n    console.log(error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const releaseSoonMovieDB = async () => {\r\n  try {\r\n    const res = await axios.get(\"http://localhost:8000/movie/releaseSoonMovie\");\r\n    return res.data;\r\n  } catch (error) {\r\n    console.log(error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const todayBoxofficeDB = async () => {\r\n  try {\r\n    const res = await axios.get(\r\n      `http://localhost:8000/movie/todayBoxofficeRank`\r\n    );\r\n    console.log(res.data);\r\n    return res.data;\r\n  } catch (error) {\r\n    console.log(error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const ottExistanceDB = async (movieSeq) => {\r\n  try {\r\n    const res = await axios.get(`http://localhost:8000/movie/ottExistance`, {\r\n      params: {\r\n        movieSeq: movieSeq,\r\n      },\r\n    });\r\n    console.log(res.data);\r\n    return res.data;\r\n  } catch (error) {\r\n    console.log(error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const updateBoxofficeDB = async () => {\r\n  try {\r\n    const res = await axios.post(\r\n      `http://localhost:8000/api/movies/updateBoxoffice`\r\n    );\r\n    return res;\r\n  } catch (error) {\r\n    console.log(error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const movieDetailDB = async (movieId, movieSeq) => {\r\n  try {\r\n    const res = await axios.get(`http://localhost:8000/movie/movieDetail`, {\r\n      params: {\r\n        movieId: movieId,\r\n        movieSeq: movieSeq,\r\n      },\r\n    });\r\n    console.log(res.data);\r\n    return res.data;\r\n  } catch (error) {\r\n    console.error(error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const directorInfoDB = async (directorIds) => {\r\n  try {\r\n    const res = await axios.get(`http://localhost:8000/movie/directorsInfo`, {\r\n      params: {\r\n        directorId: directorIds,\r\n      },\r\n      paramsSerializer: (params) => {\r\n        return qs.stringify(params, { arrayFormat: \"repeat\" });\r\n      },\r\n    });\r\n    return res.data;\r\n  } catch (error) {\r\n    console.error(error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const directorInfoByNameDB = async (directorNm) => {\r\n  try {\r\n    const res = await axios.get(`http://localhost:8000/movie/directorsInfo`, {\r\n      params: {\r\n        directorNm: directorNm,\r\n      },\r\n    });\r\n    return res.data;\r\n  } catch (error) {\r\n    console.error(error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n\r\nexport const BoxOfficeDetailDB = async (movieId, movieSeq) => {\r\n  try {\r\n    const res = await axios.get(`http://localhost:8000/movie/boxofficeDetail`, {\r\n      params: {\r\n        movieId: movieId,\r\n        movieSeq: movieSeq,\r\n      },\r\n    });\r\n    console.log(res.data);\r\n    return res.data;\r\n  } catch (error) {\r\n    console.error(error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n\r\nexport const directorImageDB = async (directors) => {\r\n  try {\r\n    const res = await axios.get(`http://localhost:8000/api/directorImage`,{\r\n    params : {\r\n      directorNm : directors\r\n    }\r\n  });\r\n    console.log(res.data);\r\n    return res.data;\r\n  } catch (error) {\r\n    console.log(error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const actorImageDB = async (actors) => {\r\n  try {\r\n    const res = await axios.get(`http://localhost:8000/api/actorImage`,{\r\n      params : {\r\n        actorNm : directors\r\n      }\r\n    });\r\n    console.log(res.data);\r\n    return res.data;\r\n  } catch (error) {\r\n    console.log(error);\r\n    throw error;\r\n  }\r\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}