{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\carax\\\\Desktop\\\\\\uC0AC\\uC774\\uB4DC \\uD504\\uB85C\\uC81D\\uD2B8\\\\SFDB-Project\\\\front\\\\src\\\\pages\\\\detail\\\\BoxOfficeDetailPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router';\nimport { BoxOfficeDetailDB, movieDetailDB, ottExistanceDB } from '../../axios/main/movieLogic';\nimport { firebaseStorage } from '../../utils/firebase';\nimport HeaderBar from '../../components/HeaderBar';\nimport Footer from '../../components/Footer';\nimport { MovieProvider } from '../../utils/movieDetailContext';\nimport BoxOfficeDetailTopSection from './BoxOfficeDetailTopSection';\nimport BoxOfficeDetailMidSection from './BoxOfficeDetailMidSection';\nimport BoxOfficeDetailMidSection2 from './BoxOfficeDetailMidSection2';\nimport BoxOfficeDetailBtmSection from './BoxOfficeDetailBtmSection';\nimport BoxOfficeDetailBtmSection2 from './BoxOfficeDetailBtmSection2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst BoxOfficeDetailPage = () => {\n  _s();\n  const location = useLocation();\n  const movieInfo = location.pathname.split('/boxOfficeDetail/')[1];\n  const [movieId, movieSeq] = movieInfo.match(/([A-Z])(\\d+)/).slice(1);\n  const [movieDetail, setMovieDetail] = useState([]);\n  const [posterUrl, setPosterUrl] = useState('');\n  const [ottInfo, setOttInfo] = useState({});\n  useEffect(() => {\n    const getMovieDetail = async () => {\n      try {\n        const res = await BoxOfficeDetailDB(movieId, movieSeq);\n        setMovieDetail(res[0]);\n        setPosterUrl(res[0].poster);\n\n        // 포스터 URL을 Firebase Storage에 업로드\n        const uploadedUrl = await uploadPoster(movieId, movieSeq, res[0].poster);\n        console.log('업로드된 Poster URL:', uploadedUrl);\n      } catch (error) {\n        console.log(\"영화 상세정보 로드 실패:\", error);\n      }\n    };\n    getMovieDetail();\n  }, [movieId, movieSeq]);\n  const uploadPoster = async (movieId, movieSeq, posterUrl) => {\n    const storageRef = firebaseStorage.ref(`poster/${movieId}${movieSeq}.jpg`);\n    try {\n      // 포스터를 Firebase Storage에 업로드\n      await storageRef.putString(posterUrl, 'data_url'); // 'data_url' 형식으로 업로드\n      // 업로드가 완료되면 포스터 URL을 반환\n      const url = await storageRef.getDownloadURL();\n      return url;\n    } catch (error) {\n      console.error(\"포스터 업로드 에러:\", error);\n      return null;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(MovieProvider, {\n      children: [/*#__PURE__*/_jsxDEV(HeaderBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: '70px',\n          marginLeft: '-10px'\n        },\n        children: /*#__PURE__*/_jsxDEV(BoxOfficeDetailTopSection, {\n          movieDetail: movieDetail\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(BoxOfficeDetailMidSection, {\n          movieDetail: movieDetail,\n          posterUrl: posterUrl\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(BoxOfficeDetailMidSection2, {\n          movieDetail: movieDetail\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: '100px'\n        },\n        children: /*#__PURE__*/_jsxDEV(BoxOfficeDetailBtmSection, {\n          movieDetail: movieDetail\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: '100px'\n        },\n        children: /*#__PURE__*/_jsxDEV(BoxOfficeDetailBtmSection2, {\n          movieDetail: movieDetail\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 1\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 1\n    }, this)\n  }, void 0, false);\n};\n_s(BoxOfficeDetailPage, \"QzyPwnKlHyDP5sc6OUMjpfUAuVw=\", false, function () {\n  return [useLocation];\n});\n_c = BoxOfficeDetailPage;\nexport default BoxOfficeDetailPage;\nvar _c;\n$RefreshReg$(_c, \"BoxOfficeDetailPage\");","map":{"version":3,"names":["React","useEffect","useState","useLocation","BoxOfficeDetailDB","movieDetailDB","ottExistanceDB","firebaseStorage","HeaderBar","Footer","MovieProvider","BoxOfficeDetailTopSection","BoxOfficeDetailMidSection","BoxOfficeDetailMidSection2","BoxOfficeDetailBtmSection","BoxOfficeDetailBtmSection2","jsxDEV","_jsxDEV","Fragment","_Fragment","BoxOfficeDetailPage","_s","location","movieInfo","pathname","split","movieId","movieSeq","match","slice","movieDetail","setMovieDetail","posterUrl","setPosterUrl","ottInfo","setOttInfo","getMovieDetail","res","poster","uploadedUrl","uploadPoster","console","log","error","storageRef","ref","putString","url","getDownloadURL","children","fileName","_jsxFileName","lineNumber","columnNumber","style","marginTop","marginLeft","_c","$RefreshReg$"],"sources":["C:/Users/carax/Desktop/사이드 프로젝트/SFDB-Project/front/src/pages/detail/BoxOfficeDetailPage.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { useLocation } from 'react-router';\r\nimport { BoxOfficeDetailDB, movieDetailDB, ottExistanceDB } from '../../axios/main/movieLogic';\r\nimport { firebaseStorage } from '../../utils/firebase';\r\nimport HeaderBar from '../../components/HeaderBar';\r\nimport Footer from '../../components/Footer';\r\nimport { MovieProvider } from '../../utils/movieDetailContext';\r\nimport BoxOfficeDetailTopSection from './BoxOfficeDetailTopSection';\r\nimport BoxOfficeDetailMidSection from './BoxOfficeDetailMidSection';\r\nimport BoxOfficeDetailMidSection2 from './BoxOfficeDetailMidSection2';\r\nimport BoxOfficeDetailBtmSection from './BoxOfficeDetailBtmSection';\r\nimport BoxOfficeDetailBtmSection2 from './BoxOfficeDetailBtmSection2';\r\n\r\n\r\n\r\n\r\nconst BoxOfficeDetailPage = () => {\r\n  const location = useLocation();\r\n  const movieInfo = location.pathname.split('/boxOfficeDetail/')[1];\r\n  const [movieId, movieSeq] = movieInfo.match(/([A-Z])(\\d+)/).slice(1);\r\n  const [movieDetail , setMovieDetail] = useState([])\r\n  const [posterUrl , setPosterUrl] = useState('');\r\n  const [ottInfo , setOttInfo] = useState({}) \r\n\r\n\r\n  useEffect(() => {\r\n    const getMovieDetail = async () => {\r\n      try {\r\n        const res = await BoxOfficeDetailDB(movieId, movieSeq);\r\n        setMovieDetail(res[0]);\r\n        setPosterUrl(res[0].poster);\r\n\r\n        // 포스터 URL을 Firebase Storage에 업로드\r\n        const uploadedUrl = await uploadPoster(movieId, movieSeq, res[0].poster);\r\n        console.log('업로드된 Poster URL:', uploadedUrl);\r\n      } catch (error) {\r\n        console.log(\"영화 상세정보 로드 실패:\", error);\r\n      }\r\n    };\r\n\r\n    getMovieDetail();\r\n  }, [movieId, movieSeq]);\r\n\r\n  const uploadPoster = async (movieId, movieSeq, posterUrl) => {\r\n    const storageRef = firebaseStorage.ref(`poster/${movieId}${movieSeq}.jpg`);\r\n    try {\r\n      // 포스터를 Firebase Storage에 업로드\r\n      await storageRef.putString(posterUrl, 'data_url'); // 'data_url' 형식으로 업로드\r\n      // 업로드가 완료되면 포스터 URL을 반환\r\n      const url = await storageRef.getDownloadURL();\r\n      return url;\r\n    } catch (error) {\r\n      console.error(\"포스터 업로드 에러:\", error);\r\n      return null;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n<MovieProvider>\r\n<HeaderBar/>\r\n\r\n  {/* Top Section */}\r\n    <div style={{marginTop:'70px' , marginLeft:'-10px'}}>\r\n    <BoxOfficeDetailTopSection movieDetail={movieDetail}/>\r\n    </div>\r\n  \r\n  {/* Mid Section */}\r\n  <div>\r\n    <BoxOfficeDetailMidSection movieDetail={movieDetail} posterUrl={posterUrl}/>\r\n  </div>\r\n  <div>\r\n    <BoxOfficeDetailMidSection2 movieDetail={movieDetail} />\r\n  </div>\r\n\r\n{/* Btm Section */}\r\n<div style={{marginTop:'100px'}}>\r\n    <BoxOfficeDetailBtmSection movieDetail={movieDetail}/>\r\n  </div>\r\n<div style={{marginTop:'100px'}}>\r\n<BoxOfficeDetailBtmSection2 movieDetail={movieDetail}/>\r\n</div>\r\n<Footer/>\r\n</MovieProvider>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default BoxOfficeDetailPage"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}