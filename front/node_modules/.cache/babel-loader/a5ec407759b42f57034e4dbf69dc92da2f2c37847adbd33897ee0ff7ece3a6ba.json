{"ast":null,"code":"import _objectSpread from\"C:/Users/carax/Desktop/SideProject/SFDB-Project/front/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _regeneratorRuntime from\"C:/Users/carax/Desktop/SideProject/SFDB-Project/front/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"C:/Users/carax/Desktop/SideProject/SFDB-Project/front/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import axios from\"axios\";export var userLoginDB=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(data){var res;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return axios.post(\"http://localhost:8000/user/login\",data);case 3:res=_context.sent;return _context.abrupt(\"return\",res.data);case 7:_context.prev=7;_context.t0=_context[\"catch\"](0);// 요청이 실패했을 때 오류를 콘솔에 출력하고 오류 객체를 반환합니다.\nconsole.error(\"Error during idCheckDB request:\",_context.t0);throw _context.t0;case 11:case\"end\":return _context.stop();}},_callee,null,[[0,7]]);}));return function userLoginDB(_x){return _ref.apply(this,arguments);};}();export var userInfoDB=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(userId){var res;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1)switch(_context2.prev=_context2.next){case 0:_context2.prev=0;_context2.next=3;return axios.get(\"http://localhost:8000/user/userInfo\",{params:{userId:userId}});case 3:res=_context2.sent;return _context2.abrupt(\"return\",res.data);case 7:_context2.prev=7;_context2.t0=_context2[\"catch\"](0);console.error(_context2.t0);throw _context2.t0;case 11:case\"end\":return _context2.stop();}},_callee2,null,[[0,7]]);}));return function userInfoDB(_x2){return _ref2.apply(this,arguments);};}();export var googleSocialLogin=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(data){var res;return _regeneratorRuntime().wrap(function _callee3$(_context3){while(1)switch(_context3.prev=_context3.next){case 0:_context3.prev=0;_context3.next=3;return axios.post(\"http://localhost:8000/user/login/google\",data);case 3:res=_context3.sent;return _context3.abrupt(\"return\",res.data);case 7:_context3.prev=7;_context3.t0=_context3[\"catch\"](0);console.error(\"Error : \",_context3.t0);throw _context3.t0;case 11:case\"end\":return _context3.stop();}},_callee3,null,[[0,7]]);}));return function googleSocialLogin(_x3){return _ref3.apply(this,arguments);};}();export var googleUserInfo=/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4(token){var res;return _regeneratorRuntime().wrap(function _callee4$(_context4){while(1)switch(_context4.prev=_context4.next){case 0:_context4.prev=0;_context4.next=3;return axios.get(\"https://www.googleapis.com/userinfo/v2/me\",{headers:{Authorization:\"Bearer \".concat(token)// 액세스 토큰을 베어러 토큰으로 설정합니다.\n}});case 3:res=_context4.sent;return _context4.abrupt(\"return\",res.data);case 7:_context4.prev=7;_context4.t0=_context4[\"catch\"](0);console.error(\"Error : \",_context4.t0);throw _context4.t0;case 11:case\"end\":return _context4.stop();}},_callee4,null,[[0,7]]);}));return function googleUserInfo(_x4){return _ref4.apply(this,arguments);};}();export var naverSocialLogin=/*#__PURE__*/function(){var _ref5=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee5(data){var res;return _regeneratorRuntime().wrap(function _callee5$(_context5){while(1)switch(_context5.prev=_context5.next){case 0:_context5.prev=0;_context5.next=3;return axios.post(\"http://localhost:8000/user/login/naver\",data);case 3:res=_context5.sent;return _context5.abrupt(\"return\",res.data);case 7:_context5.prev=7;_context5.t0=_context5[\"catch\"](0);console.error(\"Error : \",_context5.t0);throw _context5.t0;case 11:case\"end\":return _context5.stop();}},_callee5,null,[[0,7]]);}));return function naverSocialLogin(_x5){return _ref5.apply(this,arguments);};}();export var kakaoSocialLogin=/*#__PURE__*/function(){var _ref6=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee6(data){var res;return _regeneratorRuntime().wrap(function _callee6$(_context6){while(1)switch(_context6.prev=_context6.next){case 0:_context6.prev=0;_context6.next=3;return axios.post(\"http://localhost:8000/user/login/kakao\",_objectSpread({},data));case 3:res=_context6.sent;return _context6.abrupt(\"return\",res.data);case 7:_context6.prev=7;_context6.t0=_context6[\"catch\"](0);console.log(\"Error : \",_context6.t0);throw _context6.t0;case 11:case\"end\":return _context6.stop();}},_callee6,null,[[0,7]]);}));return function kakaoSocialLogin(_x6){return _ref6.apply(this,arguments);};}();","map":{"version":3,"names":["axios","userLoginDB","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","data","res","wrap","_callee$","_context","prev","next","post","sent","abrupt","t0","console","error","stop","_x","apply","arguments","userInfoDB","_ref2","_callee2","userId","_callee2$","_context2","get","params","_x2","googleSocialLogin","_ref3","_callee3","_callee3$","_context3","_x3","googleUserInfo","_ref4","_callee4","token","_callee4$","_context4","headers","Authorization","concat","_x4","naverSocialLogin","_ref5","_callee5","_callee5$","_context5","_x5","kakaoSocialLogin","_ref6","_callee6","_callee6$","_context6","_objectSpread","log","_x6"],"sources":["C:/Users/carax/Desktop/SideProject/SFDB-Project/front/src/axios/user/loginLogic.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nexport const userLoginDB = async (data) => {\r\n  try {\r\n    const res = await axios.post(`http://localhost:8000/user/login`, data);\r\n    // 서버로부터 받은 응답 데이터를 반환합니다.\r\n    return res.data;\r\n  } catch (error) {\r\n    // 요청이 실패했을 때 오류를 콘솔에 출력하고 오류 객체를 반환합니다.\r\n    console.error(\"Error during idCheckDB request:\", error);\r\n    throw error; // 이 오류를 호출자에게 전달하여 처리하도록 합니다.\r\n  }\r\n};\r\n\r\nexport const userInfoDB = async (userId) => {\r\n  try {\r\n    const res = await axios.get(`http://localhost:8000/user/userInfo`, {\r\n      params: {\r\n        userId: userId,\r\n      },\r\n    });\r\n    return res.data;\r\n  } catch (error) {\r\n    console.error(error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const googleSocialLogin = async (data) => {\r\n  try {\r\n    const res = await axios.post(\r\n      \"http://localhost:8000/user/login/google\",\r\n      data\r\n    );\r\n    return res.data;\r\n  } catch (error) {\r\n    console.error(\"Error : \", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const googleUserInfo = async (token) => {\r\n  try {\r\n    const res = await axios.get(\"https://www.googleapis.com/userinfo/v2/me\", {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`, // 액세스 토큰을 베어러 토큰으로 설정합니다.\r\n      },\r\n    });\r\n    return res.data;\r\n  } catch (error) {\r\n    console.error(\"Error : \", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const naverSocialLogin = async (data) => {\r\n  try {\r\n    const res = await axios.post(\r\n      \"http://localhost:8000/user/login/naver\",\r\n      data\r\n    );\r\n    return res.data;\r\n  } catch (error) {\r\n    console.error(\"Error : \", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const kakaoSocialLogin = async (data) => {\r\n  try {\r\n    const res = await axios.post(\"http://localhost:8000/user/login/kakao\", {\r\n      ...data,\r\n    });\r\n    return res.data;\r\n  } catch (error) {\r\n    console.log(\"Error : \", error);\r\n    throw error;\r\n  }\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}