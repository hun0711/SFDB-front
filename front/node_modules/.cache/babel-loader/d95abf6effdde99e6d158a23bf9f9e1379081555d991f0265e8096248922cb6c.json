{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\carax\\\\Desktop\\\\\\uC0AC\\uC774\\uB4DC \\uD504\\uB85C\\uC81D\\uD2B8\\\\SFDB-Project\\\\front\\\\src\\\\pages\\\\user\\\\NaverLogin.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport config from \"../../config\";\nimport { serialize } from \"cookie\";\nimport { Alert, AlertTitle } from \"@mui/material\";\nimport { Navigate, useLocation, useNavigate } from \"react-router\";\nimport { naverSocialLogin } from \"../../axios/user/loginLogic\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NaverLogin = () => {\n  _s();\n  const [loginAlert, setLoginAlert] = useState(null);\n  const [loginButtonClicked, setLoginButtonClicked] = useState(false);\n  const navigate = useNavigate();\n\n  // 로그인에 성공했을 때, 유저의 액세스 토큰을 가져옵니다.\n  const userAccessToken = () => {\n    window.location.href.includes('access_token') && getToken();\n  };\n\n  // URL에서 네이버 액세스 토큰을 추출하고, 쿠키에 저장합니다.\n  const getToken = () => {\n    const token = window.location.href.split('=')[1].split('&')[0];\n    console.log(token);\n    document.cookie = serialize(\"naverToken\", token, {\n      path: '/'\n    });\n  };\n\n  // 로그인 버튼 클릭 여부를 추적하는 함수입니다.\n  const handleLoginButtonClick = () => {\n    setLoginButtonClicked(true);\n  };\n\n  // 네이버 로그인을 초기화하고 로그인 상태를 확인합니다.\n  const initializeNaverLogin = () => {\n    if (!loginButtonClicked) {\n      return; // 로그인 버튼이 클릭되기 전에는 초기화하지 않습니다.\n    }\n\n    // 네이버 로그인 인스턴스를 초기화합니다.\n    const naverLogin = new window.naver.LoginWithNaverId({\n      clientId: config.naverClientId,\n      callbackUrl: config.naverRedirectUri,\n      clientSecret: config.naverClientSecret,\n      isPopup: false,\n      loginButton: {\n        color: \"green\",\n        type: 3,\n        height: \"50\"\n      }\n    });\n    naverLogin.init();\n    naverLogin.getLoginStatus(async function (status) {\n      if (status) {\n        // 네이버 로그인 성공 시 사용자 정보를 가져옵니다.\n        const {\n          id,\n          nickname,\n          email,\n          profile_image\n        } = naverLogin.user;\n\n        // 네이버 로그인 데이터를 생성합니다.\n        const naverLoginData = {\n          id,\n          nickname,\n          email,\n          profile_image\n        };\n\n        // 서버로 네이버 로그인 데이터를 전송합니다.\n        const res = await naverSocialLogin(naverLoginData);\n        if (res === 1) {\n          console.log(\"네이버 로그인 성공!\");\n          console.log(\"사용자 아이디:\", id);\n          console.log(\"사용자 닉네임:\", nickname);\n          console.log(\"사용자 이메일:\", email);\n          console.log(\"프로필 이미지 URL:\", profile_image);\n\n          // 유저의 액세스 토큰을 가져오고 쿠키에 저장합니다.\n          userAccessToken();\n          document.cookie = serialize(\"userId\", id, {\n            path: '/'\n          });\n\n          // 로그인 성공 알림을 설정하고 메인 페이지로 이동합니다.\n          setLoginAlert( /*#__PURE__*/_jsxDEV(Alert, {\n            severity: \"success\",\n            onClose: () => setLoginAlert(null),\n            children: [/*#__PURE__*/_jsxDEV(AlertTitle, {\n              children: \"\\uB85C\\uADF8\\uC778 \\uC131\\uACF5!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"\\uBA54\\uC778\\uD398\\uC774\\uC9C0\\uB85C \\uC774\\uB3D9\\uD569\\uB2C8\\uB2E4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this));\n          setTimeout(() => {\n            navigate('/main');\n          }, 2000);\n        } else {\n          // 네이버 로그인 실패 시 경고 메시지를 표시합니다.\n          console.log(\"Naver 로그인 실패\");\n          setLoginAlert( /*#__PURE__*/_jsxDEV(Alert, {\n            severity: \"warning\",\n            onClose: () => setLoginAlert(null),\n            children: [/*#__PURE__*/_jsxDEV(AlertTitle, {\n              children: \"\\uB85C\\uADF8\\uC778 \\uC2E4\\uD328\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"\\uC785\\uB825 \\uC815\\uBCF4\\uB97C \\uB2E4\\uC2DC \\uD655\\uC778\\uD574\\uC8FC\\uC138\\uC694\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this));\n        }\n      } else {\n        // 네이버 로그인 오류 시 경고 메시지를 표시합니다.\n        console.log(\"Naver 로그인 오류\");\n        setLoginAlert( /*#__PURE__*/_jsxDEV(Alert, {\n          severity: \"error\",\n          onClose: () => setLoginAlert(null),\n          children: /*#__PURE__*/_jsxDEV(AlertTitle, {\n            children: \"\\uC5D0\\uB7EC \\uBC1C\\uC0DD\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this));\n      }\n    });\n  };\n  useEffect(() => {\n    // 네이버 로그인 스크립트를 동적으로 로드하고 초기화합니다.\n    const script = document.createElement(\"script\");\n    script.src = \"https://static.nid.naver.com/js/naveridlogin_js_sdk_2.0.2.js\";\n    script.charset = \"utf-8\";\n    script.onload = () => initializeNaverLogin();\n    document.body.appendChild(script);\n\n    // 컴포넌트가 언마운트될 때 스크립트를 제거합니다.\n    return () => {\n      document.body.removeChild(script);\n    };\n  }, [loginButtonClicked]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"naverIdLogin\",\n    style: {\n      textAlign: \"center\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLoginButtonClick,\n      children: \"Naver \\uB85C\\uADF8\\uC778 \\uBC84\\uD2BC\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), loginAlert]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 5\n  }, this);\n};\n_s(NaverLogin, \"drn57LxHiFjHEmdsMQJwNZU6Oko=\", false, function () {\n  return [useNavigate];\n});\n_c = NaverLogin;\nexport default NaverLogin;\nvar _c;\n$RefreshReg$(_c, \"NaverLogin\");","map":{"version":3,"names":["React","useEffect","useState","axios","config","serialize","Alert","AlertTitle","Navigate","useLocation","useNavigate","naverSocialLogin","jsxDEV","_jsxDEV","NaverLogin","_s","loginAlert","setLoginAlert","loginButtonClicked","setLoginButtonClicked","navigate","userAccessToken","window","location","href","includes","getToken","token","split","console","log","document","cookie","path","handleLoginButtonClick","initializeNaverLogin","naverLogin","naver","LoginWithNaverId","clientId","naverClientId","callbackUrl","naverRedirectUri","clientSecret","naverClientSecret","isPopup","loginButton","color","type","height","init","getLoginStatus","status","id","nickname","email","profile_image","user","naverLoginData","res","severity","onClose","children","fileName","_jsxFileName","lineNumber","columnNumber","setTimeout","script","createElement","src","charset","onload","body","appendChild","removeChild","style","textAlign","onClick","_c","$RefreshReg$"],"sources":["C:/Users/carax/Desktop/사이드 프로젝트/SFDB-Project/front/src/pages/user/NaverLogin.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport config from \"../../config\";\r\nimport { serialize } from \"cookie\";\r\nimport { Alert, AlertTitle } from \"@mui/material\";\r\nimport { Navigate, useLocation, useNavigate } from \"react-router\";\r\nimport { naverSocialLogin } from \"../../axios/user/loginLogic\";\r\n\r\nconst NaverLogin = () => {\r\n  const [loginAlert, setLoginAlert] = useState(null);\r\n  const [loginButtonClicked, setLoginButtonClicked] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  // 로그인에 성공했을 때, 유저의 액세스 토큰을 가져옵니다.\r\n  const userAccessToken = () => {\r\n    window.location.href.includes('access_token') && getToken();\r\n  };\r\n\r\n  // URL에서 네이버 액세스 토큰을 추출하고, 쿠키에 저장합니다.\r\n  const getToken = () => {\r\n    const token = window.location.href.split('=')[1].split('&')[0];\r\n    console.log(token);\r\n    document.cookie = serialize(\"naverToken\", token, { path: '/' });\r\n  };\r\n\r\n  // 로그인 버튼 클릭 여부를 추적하는 함수입니다.\r\n  const handleLoginButtonClick = () => {\r\n    setLoginButtonClicked(true);\r\n  };\r\n\r\n  // 네이버 로그인을 초기화하고 로그인 상태를 확인합니다.\r\n  const initializeNaverLogin = () => {\r\n    if (!loginButtonClicked) {\r\n      return; // 로그인 버튼이 클릭되기 전에는 초기화하지 않습니다.\r\n    }\r\n\r\n    // 네이버 로그인 인스턴스를 초기화합니다.\r\n    const naverLogin = new window.naver.LoginWithNaverId({\r\n      clientId: config.naverClientId,\r\n      callbackUrl: config.naverRedirectUri,\r\n      clientSecret: config.naverClientSecret,\r\n      isPopup: false,\r\n      loginButton: { color: \"green\", type: 3, height: \"50\" },\r\n    });\r\n\r\n    naverLogin.init();\r\n\r\n    naverLogin.getLoginStatus(async function (status) {\r\n      if (status) {\r\n        // 네이버 로그인 성공 시 사용자 정보를 가져옵니다.\r\n        const { id, nickname, email, profile_image } = naverLogin.user;\r\n\r\n        // 네이버 로그인 데이터를 생성합니다.\r\n        const naverLoginData = {\r\n          id,\r\n          nickname,\r\n          email,\r\n          profile_image,\r\n        };\r\n\r\n        // 서버로 네이버 로그인 데이터를 전송합니다.\r\n        const res = await naverSocialLogin(naverLoginData);\r\n        if (res === 1) {\r\n          console.log(\"네이버 로그인 성공!\");\r\n          console.log(\"사용자 아이디:\", id);\r\n          console.log(\"사용자 닉네임:\", nickname);\r\n          console.log(\"사용자 이메일:\", email);\r\n          console.log(\"프로필 이미지 URL:\", profile_image);\r\n\r\n          // 유저의 액세스 토큰을 가져오고 쿠키에 저장합니다.\r\n          userAccessToken();\r\n          document.cookie = serialize(\"userId\", id, { path: '/' });\r\n\r\n          // 로그인 성공 알림을 설정하고 메인 페이지로 이동합니다.\r\n          setLoginAlert(\r\n            <Alert severity=\"success\" onClose={() => setLoginAlert(null)}>\r\n              <AlertTitle>로그인 성공!</AlertTitle>\r\n              <strong>메인페이지로 이동합니다</strong>\r\n            </Alert>\r\n          );\r\n\r\n          setTimeout(() => {\r\n            navigate('/main');\r\n          }, 2000);\r\n        } else {\r\n          // 네이버 로그인 실패 시 경고 메시지를 표시합니다.\r\n          console.log(\"Naver 로그인 실패\");\r\n          setLoginAlert(\r\n            <Alert severity=\"warning\" onClose={() => setLoginAlert(null)}>\r\n              <AlertTitle>로그인 실패</AlertTitle>\r\n              <strong>입력 정보를 다시 확인해주세요</strong>\r\n            </Alert>\r\n          );\r\n        }\r\n      } else {\r\n        // 네이버 로그인 오류 시 경고 메시지를 표시합니다.\r\n        console.log(\"Naver 로그인 오류\");\r\n        setLoginAlert(\r\n          <Alert severity=\"error\" onClose={() => setLoginAlert(null)}>\r\n            <AlertTitle>에러 발생</AlertTitle>\r\n          </Alert>\r\n        );\r\n      }\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    // 네이버 로그인 스크립트를 동적으로 로드하고 초기화합니다.\r\n    const script = document.createElement(\"script\");\r\n    script.src = \"https://static.nid.naver.com/js/naveridlogin_js_sdk_2.0.2.js\";\r\n    script.charset = \"utf-8\";\r\n    script.onload = () => initializeNaverLogin();\r\n    document.body.appendChild(script);\r\n\r\n    // 컴포넌트가 언마운트될 때 스크립트를 제거합니다.\r\n    return () => {\r\n      document.body.removeChild(script);\r\n    };\r\n  }, [loginButtonClicked]);\r\n\r\n  return (\r\n    <div id=\"naverIdLogin\" style={{ textAlign: \"center\" }}>\r\n      {/* 네이버 로그인 버튼 클릭 시 로그인 처리를 시작합니다. */}\r\n      <button onClick={handleLoginButtonClick}>Naver 로그인 버튼</button>\r\n      {/* 로그인 결과에 따라 알림 메시지를 표시합니다. */}\r\n      {loginAlert}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NaverLogin;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}