{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\carax\\\\Desktop\\\\\\uC0AC\\uC774\\uB4DC \\uD504\\uB85C\\uC81D\\uD2B8\\\\SFDB-Project\\\\front\\\\src\\\\pages\\\\detail\\\\MovieDetailBtmSection2.jsx\",\n  _s = $RefreshSig$();\nimport { Typography } from '@mui/material';\nimport React, { useEffect, useState } from 'react';\nimport { getYouTubeVideoByQuery } from '../../utils/youtubeApi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MovieDetailBtmSection2 = ({\n  movieDetail\n}) => {\n  _s();\n  const title = movieDetail.title;\n  const prodYear = movieDetail.prodYear;\n  const [trailerId, setTrailerId] = useState(null);\n  const [stills, setStills] = useState([]);\n  useEffect(() => {\n    const fetchStills = async () => {\n      try {\n        const apiKey = \"AIzaSyC2pRmeDsy_q0pjRI7LOneIXjSQHE_UMbA\";\n        const searchQuery = title + prodYear + '스틸컷';\n        console.log(searchQuery);\n        const customSearchEngineId = \"b17c3642d30a447a2\";\n        const response = await fetch(`https://www.googleapis.com/customsearch/v1?key=${apiKey}&cx=${customSearchEngineId}&q=${searchQuery}&searchType=image`);\n        const data = await response.json();\n        if (data.items) {\n          const stillsUrls = data.items.map(item => item.link).slice(0, 3);\n          setStills(stillsUrls);\n        }\n      } catch (error) {\n        console.log('구글 이미지 로드 실패 : ', error);\n      }\n    };\n    if (title !== undefined && prodYear !== undefined) {\n      fetchStills();\n    }\n  }, [title, prodYear]);\n  useEffect(() => {\n    const searchMovieTrailer = async () => {\n      try {\n        const query = title + prodYear + '예고편';\n        const searchResults = await getYouTubeVideoByQuery(query);\n        if (searchResults && searchResults.items && searchResults.items.length > 0) {\n          const topVideo = searchResults.items[0];\n          setTrailerId(topVideo.id.videoId);\n        }\n      } catch (error) {\n        console.log('영화 예고편 검색 실패 : ', error);\n      }\n    };\n    if (title !== undefined && prodYear !== undefined) {\n      searchMovieTrailer();\n    }\n  }, [title, prodYear]);\n\n  //Youtube 동영상 뷰어\n  const openYoutubePlayer = () => {\n    if (trailerId) {\n      window.open(`https://www.youtube.com/embed/${trailerId}`, '_blank');\n    }\n  };\n  {/* Style */}\n  const btmSection2Style = {\n    marginLeft: '100px',\n    marginTop: '30px',\n    maxWidth: '1500px',\n    minHeight: '800px',\n    maxHeight: '1000px'\n  };\n  const stillSectionStyle = {\n    marginTop: '30px',\n    marginLeft: '20px',\n    maxWidth: '1500px',\n    maxHeight: '500px'\n  };\n  const stillStyle = {\n    display: 'flex',\n    width: '500px',\n    minWidth: '300px',\n    maxWidth: '400px',\n    height: '350px',\n    minHeight: '350px',\n    maxHeight: '350px',\n    marginRight: '20px'\n  };\n  const videoStyle = {\n    marginTop: '30px',\n    marginLeft: '20px',\n    width: '500px',\n    minWidth: '300px',\n    maxWidth: '400px',\n    height: '350px',\n    minHeight: '350px',\n    maxHeight: '500px'\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: btmSection2Style,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          alignItems: 'center'\n        },\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          style: {\n            fontSize: '25px'\n          },\n          children: \"\\uAC24\\uB7EC\\uB9AC\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: stillSectionStyle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          alignItems: 'center'\n        },\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          style: {\n            fontSize: '25px'\n          },\n          children: \"\\uB3D9\\uC601\\uC0C1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: videoStyle,\n        children: [trailerId && /*#__PURE__*/_jsxDEV(\"iframe\", {\n          width: \"100%\",\n          height: \"100%\",\n          src: `https://www.youtube.com/embed/${trailerId}`,\n          allowFullScreen: true,\n          style: {\n            border: 'none',\n            borderRadius: '5px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"subtitle1\",\n          style: {\n            marginTop: '10px',\n            fontSize: '15px'\n          },\n          children: \"\\uBA54\\uC778 \\uC608\\uACE0\\uD3B8\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 4\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n};\n_s(MovieDetailBtmSection2, \"C9+TxrJ5cyDPk/iIIV5qwtgtoAE=\");\n_c = MovieDetailBtmSection2;\nexport default MovieDetailBtmSection2;\nvar _c;\n$RefreshReg$(_c, \"MovieDetailBtmSection2\");","map":{"version":3,"names":["Typography","React","useEffect","useState","getYouTubeVideoByQuery","jsxDEV","_jsxDEV","Fragment","_Fragment","MovieDetailBtmSection2","movieDetail","_s","title","prodYear","trailerId","setTrailerId","stills","setStills","fetchStills","apiKey","searchQuery","console","log","customSearchEngineId","response","fetch","data","json","items","stillsUrls","map","item","link","slice","error","undefined","searchMovieTrailer","query","searchResults","length","topVideo","id","videoId","openYoutubePlayer","window","open","btmSection2Style","marginLeft","marginTop","maxWidth","minHeight","maxHeight","stillSectionStyle","stillStyle","display","width","minWidth","height","marginRight","videoStyle","children","style","alignItems","variant","fontSize","fileName","_jsxFileName","lineNumber","columnNumber","src","allowFullScreen","border","borderRadius","_c","$RefreshReg$"],"sources":["C:/Users/carax/Desktop/사이드 프로젝트/SFDB-Project/front/src/pages/detail/MovieDetailBtmSection2.jsx"],"sourcesContent":["import { Typography } from '@mui/material'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { getYouTubeVideoByQuery } from '../../utils/youtubeApi'; \r\n\r\nconst MovieDetailBtmSection2 = ({ movieDetail }) => {\r\n  const title = movieDetail.title\r\n  const prodYear = movieDetail.prodYear\r\n  const [trailerId, setTrailerId] = useState(null);\r\n  const [stills, setStills] = useState([])\r\n  \r\n  useEffect(() => {\r\n  const fetchStills = async () => {\r\n    try {\r\n      const apiKey = \"AIzaSyC2pRmeDsy_q0pjRI7LOneIXjSQHE_UMbA\";\r\n      const searchQuery = title + prodYear + '스틸컷';\r\n      console.log(searchQuery);   \r\n      const customSearchEngineId = \"b17c3642d30a447a2\";\r\n      const response = await fetch(\r\n        `https://www.googleapis.com/customsearch/v1?key=${apiKey}&cx=${customSearchEngineId}&q=${searchQuery}&searchType=image`\r\n      )\r\n      const data = await response.json();\r\n      if(data.items){\r\n        const stillsUrls = data.items.map(item => item.link).slice(0, 3);\r\n        setStills(stillsUrls)\r\n      }\r\n    } catch (error) {\r\n      console.log('구글 이미지 로드 실패 : ' , error);\r\n    }\r\n  }\r\n  if (title !== undefined && prodYear !== undefined) {\r\n    fetchStills()\r\n  }\r\n  },[title,prodYear])\r\n \r\n\r\n\r\n  useEffect(() => {\r\n    const searchMovieTrailer = async () => {\r\n      try {\r\n        const query = title + prodYear + '예고편';\r\n        const searchResults = await getYouTubeVideoByQuery(query)\r\n        if(searchResults && searchResults.items && searchResults.items.length > 0) {\r\n          const topVideo = searchResults.items[0];\r\n          setTrailerId(topVideo.id.videoId)\r\n        }\r\n      } catch (error) {\r\n        console.log('영화 예고편 검색 실패 : ', error);\r\n      } \r\n    }\r\n    if (title !== undefined && prodYear !== undefined) {\r\n      searchMovieTrailer()\r\n    }\r\n  },[title, prodYear]);\r\n\r\n  //Youtube 동영상 뷰어\r\n    const openYoutubePlayer = () => {\r\n      if (trailerId) {\r\n        window.open(`https://www.youtube.com/embed/${trailerId}`, '_blank');\r\n      }\r\n    };\r\n    \r\n  {/* Style */}\r\n  const btmSection2Style = {\r\n    marginLeft: '100px',\r\n    marginTop: '30px',\r\n    maxWidth: '1500px',\r\n    minHeight: '800px',\r\n    maxHeight: '1000px',\r\n  } \r\n  \r\n  const stillSectionStyle = {\r\n    marginTop: '30px',\r\n    marginLeft: '20px',\r\n    maxWidth: '1500px',\r\n    maxHeight: '500px'\r\n  }\r\n\r\n  const stillStyle = {\r\n    display: 'flex',\r\n    width: '500px',\r\n    minWidth: '300px',\r\n    maxWidth: '400px',\r\n    height: '350px',\r\n    minHeight: '350px',\r\n    maxHeight: '350px',\r\n    marginRight: '20px'\r\n  }\r\n\r\n  const videoStyle = {\r\n    marginTop: '30px',\r\n    marginLeft: '20px',\r\n    width: '500px',\r\n    minWidth: '300px',\r\n    maxWidth: '400px',\r\n    height: '350px',\r\n    minHeight: '350px',\r\n    maxHeight: '500px'\r\n\r\n  } \r\n  return (\r\n    <> \r\n    <div style={btmSection2Style}>\r\n      {/* 갤러리 div */}\r\n    <div style={{ display: 'flex', alignItems: 'center' }}>\r\n        <Typography variant=\"h4\" style={{ fontSize: '25px' }}>\r\n          갤러리\r\n        </Typography>\r\n        </div>  \r\n        <div style={stillSectionStyle}>\r\n        </div>\r\n\r\n{/* 동영상 div */}\r\n    <div style={{ display: 'flex', alignItems: 'center' }}>\r\n        <Typography variant=\"h4\" style={{ fontSize: '25px' }}>\r\n          동영상 \r\n        </Typography>\r\n        </div>\r\n    \r\n   <div style={videoStyle}>\r\n   {/* 동영상 삽입 */}\r\n   {trailerId && (\r\n            <iframe\r\n              width=\"100%\"\r\n              height=\"100%\"\r\n              src={`https://www.youtube.com/embed/${trailerId}`}\r\n              allowFullScreen\r\n              style={{ border: 'none', borderRadius: '5px' }} \r\n            ></iframe>\r\n          )}\r\n          <Typography variant='subtitle1' style={{marginTop:'10px' , fontSize:'15px'}}>메인 예고편</Typography>\r\n   </div>\r\n\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default MovieDetailBtmSection2"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}