{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\carax\\\\Desktop\\\\\\uC0AC\\uC774\\uB4DC \\uD504\\uB85C\\uC81D\\uD2B8\\\\SFDB-Project\\\\front\\\\src\\\\pages\\\\user\\\\NaverLogin.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport config from \"../../config\";\nimport { serialize } from \"cookie\";\nimport { Alert, AlertTitle } from \"@mui/material\";\nimport { useLocation, useNavigate } from \"react-router\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NaverLogin = () => {\n  _s();\n  const [loginAlert, setLoginAlert] = useState(null);\n  const location = useLocation();\n  const navigate = useNavigate();\n  const getNaverToken = () => {\n    if (!location.hash) return;\n    const token = location.hash.split(\"=\")[1].split(\"&\")[0];\n    console.log(token);\n\n    // 서버로 토큰을 보내고 로그인 처리\n    axios.post(\"http://localhost:8000/user/login/naver\", {\n      token: token\n    }) // 토큰을 서버로 직접 전달\n    .then(response => {\n      // 로그인 성공 처리\n      console.log(\"백엔드와 통신 성공:\", response.data);\n      setLoginAlert( /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"success\",\n        onClose: () => setLoginAlert(null),\n        children: [/*#__PURE__*/_jsxDEV(AlertTitle, {\n          children: \"\\uB85C\\uADF8\\uC778 \\uC131\\uACF5!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"\\uBA54\\uC778\\uD398\\uC774\\uC9C0\\uB85C \\uC774\\uB3D9\\uD569\\uB2C8\\uB2E4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this));\n      setTimeout(() => {\n        navigate(\"/main\"); // 메인 페이지로 이동\n      }, 2000);\n    }).catch(error => {\n      // 통신이 실패한 경우의 처리\n      console.error(\"백엔드와 통신 실패:\", error);\n      setLoginAlert( /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"warning\",\n        onClose: () => setLoginAlert(null),\n        children: [/*#__PURE__*/_jsxDEV(AlertTitle, {\n          children: \"\\uB85C\\uADF8\\uC778 \\uC2E4\\uD328\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"\\uC785\\uB825 \\uC815\\uBCF4\\uB97C \\uB2E4\\uC2DC \\uD655\\uC778\\uD574\\uC8FC\\uC138\\uC694\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this));\n    });\n  };\n  useEffect(() => {\n    const script = document.createElement(\"script\");\n    script.src = \"https://static.nid.naver.com/js/naveridlogin_js_sdk_2.0.2.js\";\n    script.charset = \"utf-8\";\n    script.onload = () => {\n      const naverLogin = new window.naver.LoginWithNaverId({\n        clientId: config.naverClientId,\n        callbackUrl: config.naverRedirectUri,\n        clientSecret: config.naverClientSecret,\n        isPopup: false,\n        loginButton: {\n          color: \"green\",\n          type: 3,\n          height: \"50\"\n        }\n      });\n      naverLogin.init();\n      naverLogin.getLoginStatus(function (status) {\n        if (status) {\n          const {\n            id,\n            nickname,\n            email,\n            profile_image\n          } = naverLogin.user;\n          console.log(\"네이버 로그인 성공!\");\n          console.log(\"사용자 아이디:\", id);\n          console.log(\"사용자 닉네임:\", nickname);\n          console.log(\"사용자 이메일:\", email);\n          console.log(\"프로필 이미지 URL:\", profile_image);\n          document.cookie = serialize(\"userId\", id, {\n            path: \"/\"\n          });\n\n          // 네이버 로그인 SDK로부터 토큰을 가져왔으므로 바로 처리하지 않고 getNaverToken 함수 호출\n          getNaverToken();\n        } else {\n          console.log(\"Naver 로그인 실패\");\n        }\n      });\n    };\n    document.body.appendChild(script);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"naverIdLogin\",\n    style: {\n      textAlign: \"center\"\n    },\n    children: loginAlert\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n};\n_s(NaverLogin, \"JjFQrtIDDo52LRMICXrqBgK+nE0=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = NaverLogin;\nexport default NaverLogin;\nvar _c;\n$RefreshReg$(_c, \"NaverLogin\");","map":{"version":3,"names":["React","useEffect","useState","axios","config","serialize","Alert","AlertTitle","useLocation","useNavigate","jsxDEV","_jsxDEV","NaverLogin","_s","loginAlert","setLoginAlert","location","navigate","getNaverToken","hash","token","split","console","log","post","then","response","data","severity","onClose","children","fileName","_jsxFileName","lineNumber","columnNumber","setTimeout","catch","error","script","document","createElement","src","charset","onload","naverLogin","window","naver","LoginWithNaverId","clientId","naverClientId","callbackUrl","naverRedirectUri","clientSecret","naverClientSecret","isPopup","loginButton","color","type","height","init","getLoginStatus","status","id","nickname","email","profile_image","user","cookie","path","body","appendChild","style","textAlign","_c","$RefreshReg$"],"sources":["C:/Users/carax/Desktop/사이드 프로젝트/SFDB-Project/front/src/pages/user/NaverLogin.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport config from \"../../config\";\r\nimport { serialize } from \"cookie\";\r\nimport { Alert, AlertTitle } from \"@mui/material\";\r\nimport { useLocation, useNavigate } from \"react-router\";\r\n\r\nconst NaverLogin = () => {\r\n  const [loginAlert, setLoginAlert] = useState(null);\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n\r\n  const getNaverToken = () => {\r\n    if (!location.hash) return;\r\n    const token = location.hash.split(\"=\")[1].split(\"&\")[0];\r\n    console.log(token);\r\n\r\n    // 서버로 토큰을 보내고 로그인 처리\r\n    axios\r\n      .post(\"http://localhost:8000/user/login/naver\", { token: token }) // 토큰을 서버로 직접 전달\r\n      .then((response) => {\r\n        // 로그인 성공 처리\r\n        console.log(\"백엔드와 통신 성공:\", response.data);\r\n        setLoginAlert(\r\n          <Alert severity=\"success\" onClose={() => setLoginAlert(null)}>\r\n            <AlertTitle>로그인 성공!</AlertTitle>\r\n            <strong>메인페이지로 이동합니다</strong>\r\n          </Alert>\r\n        );\r\n        setTimeout(() => {\r\n          navigate(\"/main\"); // 메인 페이지로 이동\r\n        }, 2000);\r\n      })\r\n      .catch((error) => {\r\n        // 통신이 실패한 경우의 처리\r\n        console.error(\"백엔드와 통신 실패:\", error);\r\n        setLoginAlert(\r\n          <Alert severity=\"warning\" onClose={() => setLoginAlert(null)}>\r\n            <AlertTitle>로그인 실패</AlertTitle>\r\n            <strong>입력 정보를 다시 확인해주세요</strong>\r\n          </Alert>\r\n        );\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const script = document.createElement(\"script\");\r\n    script.src = \"https://static.nid.naver.com/js/naveridlogin_js_sdk_2.0.2.js\";\r\n    script.charset = \"utf-8\";\r\n    script.onload = () => {\r\n      const naverLogin = new window.naver.LoginWithNaverId({\r\n        clientId: config.naverClientId,\r\n        callbackUrl: config.naverRedirectUri,\r\n        clientSecret: config.naverClientSecret,\r\n        isPopup: false,\r\n        loginButton: { color: \"green\", type: 3, height: \"50\" },\r\n      });\r\n\r\n      naverLogin.init();\r\n\r\n      naverLogin.getLoginStatus(function (status) {\r\n        if (status) {\r\n          const { id, nickname, email, profile_image } = naverLogin.user;\r\n          console.log(\"네이버 로그인 성공!\");\r\n          console.log(\"사용자 아이디:\", id);\r\n          console.log(\"사용자 닉네임:\", nickname);\r\n          console.log(\"사용자 이메일:\", email);\r\n          console.log(\"프로필 이미지 URL:\", profile_image);\r\n          document.cookie = serialize(\"userId\", id, { path: \"/\" });\r\n\r\n          // 네이버 로그인 SDK로부터 토큰을 가져왔으므로 바로 처리하지 않고 getNaverToken 함수 호출\r\n          getNaverToken();\r\n        } else {\r\n          console.log(\"Naver 로그인 실패\");\r\n        }\r\n      });\r\n    };\r\n    document.body.appendChild(script);\r\n  }, []);\r\n\r\n  return (\r\n    <div id=\"naverIdLogin\" style={{ textAlign: \"center\" }}>\r\n      {/* 추가적으로 필요한 JSX 코드 작성 */}\r\n      {loginAlert}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NaverLogin;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}