{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\carax\\\\Desktop\\\\\\uC0AC\\uC774\\uB4DC \\uD504\\uB85C\\uC81D\\uD2B8\\\\SFDB-Project\\\\front\\\\src\\\\pages\\\\user\\\\NaverLogin.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport config from \"../../config\";\nimport { serialize } from \"cookie\";\nimport { Alert, AlertTitle } from \"@mui/material\";\nimport { Navigate, useLocation, useNavigate } from \"react-router\";\nimport { naverSocialLogin } from \"../../axios/user/loginLogic\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NaverLogin = () => {\n  _s();\n  const [loginAlert, setLoginAlert] = useState(null);\n  const navigate = useNavigate();\n  const userAccessToken = () => {\n    window.location.href.includes('access_token') && getToken();\n  };\n  const getToken = () => {\n    const token = window.location.href.split('=')[1].split('&')[0];\n    document.cookie = serialize(\"naverToken\", token, {\n      path: '/'\n    });\n  };\n  const initializeNaverLogin = () => {\n    const naverLogin = new window.naver.LoginWithNaverId({\n      clientId: config.naverClientId,\n      callbackUrl: config.naverRedirectUri,\n      clientSecret: config.naverClientSecret,\n      isPopup: false,\n      loginButton: {\n        color: \"green\",\n        type: 3,\n        height: \"50\"\n      }\n    });\n    naverLogin.init();\n    naverLogin.getLoginStatus(async function (status) {\n      if (status) {\n        const {\n          id,\n          nickname,\n          email,\n          profile_image\n        } = naverLogin.user;\n        const naverLoginData = {\n          id,\n          nickname,\n          email,\n          profile_image\n        };\n        const res = await naverSocialLogin(naverLoginData);\n        if (res === 1) {\n          console.log(\"네이버 로그인 성공!\");\n          console.log(\"사용자 아이디:\", id);\n          console.log(\"사용자 닉네임:\", nickname);\n          console.log(\"사용자 이메일:\", email);\n          console.log(\"프로필 이미지 URL:\", profile_image);\n          userAccessToken();\n          document.cookie = serialize(\"userId\", id, {\n            path: '/'\n          });\n        } else {\n          console.log(\"Naver 로그인 실패\");\n        }\n      } else {\n        console.log(\"Naver 로그인 오류\");\n      }\n    });\n  };\n  useEffect(() => {\n    const script = document.createElement(\"script\");\n    script.src = \"https://static.nid.naver.com/js/naveridlogin_js_sdk_2.0.2.js\";\n    script.charset = \"utf-8\";\n    script.onload = () => initializeNaverLogin();\n    document.body.appendChild(script);\n    return () => {\n      document.body.removeChild(script);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"naverIdLogin\",\n    style: {\n      textAlign: \"center\"\n    },\n    children: loginAlert\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n_s(NaverLogin, \"mIzqSF5ubBXYRALyVFTGqnCnv2c=\", false, function () {\n  return [useNavigate];\n});\n_c = NaverLogin;\nexport default NaverLogin;\nvar _c;\n$RefreshReg$(_c, \"NaverLogin\");","map":{"version":3,"names":["React","useEffect","useState","axios","config","serialize","Alert","AlertTitle","Navigate","useLocation","useNavigate","naverSocialLogin","jsxDEV","_jsxDEV","NaverLogin","_s","loginAlert","setLoginAlert","navigate","userAccessToken","window","location","href","includes","getToken","token","split","document","cookie","path","initializeNaverLogin","naverLogin","naver","LoginWithNaverId","clientId","naverClientId","callbackUrl","naverRedirectUri","clientSecret","naverClientSecret","isPopup","loginButton","color","type","height","init","getLoginStatus","status","id","nickname","email","profile_image","user","naverLoginData","res","console","log","script","createElement","src","charset","onload","body","appendChild","removeChild","style","textAlign","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/carax/Desktop/사이드 프로젝트/SFDB-Project/front/src/pages/user/NaverLogin.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport config from \"../../config\";\r\nimport { serialize } from \"cookie\";\r\nimport { Alert, AlertTitle } from \"@mui/material\";\r\nimport { Navigate, useLocation, useNavigate } from \"react-router\";\r\nimport { naverSocialLogin } from \"../../axios/user/loginLogic\";\r\n\r\nconst NaverLogin = () => {\r\n  const [loginAlert, setLoginAlert] = useState(null);\r\n  const navigate = useNavigate();\r\n\r\n  const userAccessToken = () => {\r\n    window.location.href.includes('access_token') && getToken();\r\n  };\r\n\r\n  const getToken = () => {\r\n    const token = window.location.href.split('=')[1].split('&')[0];\r\n    document.cookie = serialize(\"naverToken\", token, { path: '/' });\r\n   \r\n  };\r\n\r\n  const initializeNaverLogin = () => {\r\n    const naverLogin = new window.naver.LoginWithNaverId({\r\n      clientId: config.naverClientId,\r\n      callbackUrl: config.naverRedirectUri,\r\n      clientSecret: config.naverClientSecret,\r\n      isPopup: false,\r\n      loginButton: { color: \"green\", type: 3, height: \"50\" },\r\n    });\r\n\r\n    naverLogin.init();\r\n\r\n    naverLogin.getLoginStatus(async function (status) {\r\n      if (status) {\r\n        const { id, nickname, email, profile_image } = naverLogin.user;\r\n\r\n        const naverLoginData = {\r\n          id,\r\n          nickname,\r\n          email,\r\n          profile_image,\r\n        };\r\n\r\n        const res = await naverSocialLogin(naverLoginData);\r\n        if (res === 1) {\r\n          console.log(\"네이버 로그인 성공!\");\r\n          console.log(\"사용자 아이디:\", id);\r\n          console.log(\"사용자 닉네임:\", nickname);\r\n          console.log(\"사용자 이메일:\", email);\r\n          console.log(\"프로필 이미지 URL:\", profile_image);\r\n          userAccessToken();\r\n          document.cookie = serialize(\"userId\", id, { path: '/' });\r\n        } else {\r\n          console.log(\"Naver 로그인 실패\");\r\n        }\r\n      } else {\r\n        console.log(\"Naver 로그인 오류\");\r\n      }\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const script = document.createElement(\"script\");\r\n    script.src = \"https://static.nid.naver.com/js/naveridlogin_js_sdk_2.0.2.js\";\r\n    script.charset = \"utf-8\";\r\n    script.onload = () => initializeNaverLogin();\r\n    document.body.appendChild(script);\r\n    return () => {\r\n      document.body.removeChild(script);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div id=\"naverIdLogin\" style={{ textAlign: \"center\" }}>\r\n      {loginAlert}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NaverLogin;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}