{"ast":null,"code":"import axios from 'axios';\nimport React from 'react';\nimport config from '../../config';\nimport { kakaoSocialLogin } from '../../axios/user/loginLogic';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst KakaoCallback = () => {\n  const kakaoRestAPIKey = config.kakaoClientId;\n  const kakaoRedirectUri = config.kakaoRedirectUri;\n  const urlSearchParams = new URLSearchParams(window.location.search);\n  const code = urlSearchParams.get('code');\n  if (code) {\n    const grantType = 'authorization_code';\n    const data = `grant_type=${grantType}&client_id=${kakaoRestAPIKey}&redirect_uri=${kakaoRedirectUri}&code=${code}`;\n    axios.post('https://kauth.kakao.com/oauth/token', data, {\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded;charset=utf-8'\n      }\n    }).then(res => {\n      console.log(res);\n      const {\n        data\n      } = res;\n      const {\n        access_token\n      } = data;\n      if (access_token) {\n        console.log(`Bearer ${access_token}`);\n        axios.post(\"https://kapi.kakao.com/v2/user/me\", {}, {\n          headers: {\n            Authorization: `Bearer ${access_token}`,\n            \"Content-type\": \"application/x-www-form-urlencoded\"\n          }\n        }).then(async res => {\n          console.log(\"카카오 유저 데이터  : \");\n          console.log(res.data);\n          console.log(\"카카오 회원 번호 : \", res.data.id);\n          const response = await kakaoSocialLogin(res.data.id);\n          if (response === 1) {}\n        });\n      } else {\n        console.log(\"access_token 없음\");\n      }\n    }).catch(error => {\n      console.error('Error exchanging code for access token:', error);\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n};\n_c = KakaoCallback;\nexport default KakaoCallback;\nvar _c;\n$RefreshReg$(_c, \"KakaoCallback\");","map":{"version":3,"names":["axios","React","config","kakaoSocialLogin","Fragment","_Fragment","jsxDEV","_jsxDEV","KakaoCallback","kakaoRestAPIKey","kakaoClientId","kakaoRedirectUri","urlSearchParams","URLSearchParams","window","location","search","code","get","grantType","data","post","headers","then","res","console","log","access_token","Authorization","id","response","catch","error","_c","$RefreshReg$"],"sources":["C:/Users/carax/Desktop/사이드 프로젝트/SFDB-Project/front/src/pages/user/KakaoCallback.jsx"],"sourcesContent":["  import axios from 'axios';\r\n  import React from 'react'\r\n  import config from '../../config';\r\nimport { kakaoSocialLogin } from '../../axios/user/loginLogic';\r\n\r\n  const KakaoCallback = () => {\r\n    const kakaoRestAPIKey = config.kakaoClientId;\r\n    const kakaoRedirectUri = config.kakaoRedirectUri;\r\n  \r\n    const urlSearchParams = new URLSearchParams(window.location.search);\r\n    const code = urlSearchParams.get('code');\r\n    \r\n    if (code) {\r\n      const grantType = 'authorization_code';\r\n      const data = `grant_type=${grantType}&client_id=${kakaoRestAPIKey}&redirect_uri=${kakaoRedirectUri}&code=${code}`;\r\n      axios\r\n        .post('https://kauth.kakao.com/oauth/token', data, {\r\n          headers: {\r\n            'Content-Type': 'application/x-www-form-urlencoded;charset=utf-8',\r\n          },\r\n        })\r\n        .then((res) => {\r\n          console.log(res);\r\n          const { data } = res;\r\n  const { access_token } = data;\r\n  if(access_token) {\r\n  console.log(`Bearer ${access_token}`);\r\n  axios\r\n      .post(\r\n          \"https://kapi.kakao.com/v2/user/me\",\r\n          {},\r\n          {\r\n            headers: {\r\n              Authorization : `Bearer ${access_token}` ,\r\n              \"Content-type\" : \"application/x-www-form-urlencoded\",\r\n              },\r\n          }\r\n        )\r\n        .then(async (res) => {\r\n        console.log(\"카카오 유저 데이터  : \");\r\n        console.log(res.data)\r\n        console.log(\"카카오 회원 번호 : \" , res.data.id);\r\n        const response = await kakaoSocialLogin(res.data.id)\r\n        if(response === 1 ){\r\n          \r\n        }\r\n      });\r\n      } else {\r\n      console.log(\"access_token 없음\");\r\n  }\r\n        })\r\n        .catch((error) => {\r\n          console.error('Error exchanging code for access token:', error);\r\n        });\r\n    }\r\n\r\n    return (\r\n      <>\r\n      </>\r\n    )\r\n  }\r\n\r\n  export default KakaoCallback"],"mappings":"AAAE,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,cAAc;AACnC,SAASC,gBAAgB,QAAQ,6BAA6B;AAAC,SAAAC,QAAA,IAAAC,SAAA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE7D,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAC1B,MAAMC,eAAe,GAAGP,MAAM,CAACQ,aAAa;EAC5C,MAAMC,gBAAgB,GAAGT,MAAM,CAACS,gBAAgB;EAEhD,MAAMC,eAAe,GAAG,IAAIC,eAAe,CAACC,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC;EACnE,MAAMC,IAAI,GAAGL,eAAe,CAACM,GAAG,CAAC,MAAM,CAAC;EAExC,IAAID,IAAI,EAAE;IACR,MAAME,SAAS,GAAG,oBAAoB;IACtC,MAAMC,IAAI,GAAI,cAAaD,SAAU,cAAaV,eAAgB,iBAAgBE,gBAAiB,SAAQM,IAAK,EAAC;IACjHjB,KAAK,CACFqB,IAAI,CAAC,qCAAqC,EAAED,IAAI,EAAE;MACjDE,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CAAC,CAAC,CACDC,IAAI,CAAEC,GAAG,IAAK;MACbC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;MAChB,MAAM;QAAEJ;MAAK,CAAC,GAAGI,GAAG;MAC5B,MAAM;QAAEG;MAAa,CAAC,GAAGP,IAAI;MAC7B,IAAGO,YAAY,EAAE;QACjBF,OAAO,CAACC,GAAG,CAAE,UAASC,YAAa,EAAC,CAAC;QACrC3B,KAAK,CACAqB,IAAI,CACD,mCAAmC,EACnC,CAAC,CAAC,EACF;UACEC,OAAO,EAAE;YACPM,aAAa,EAAI,UAASD,YAAa,EAAC;YACxC,cAAc,EAAG;UACjB;QACJ,CACF,CAAC,CACAJ,IAAI,CAAC,MAAOC,GAAG,IAAK;UACrBC,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAC;UAC7BD,OAAO,CAACC,GAAG,CAACF,GAAG,CAACJ,IAAI,CAAC;UACrBK,OAAO,CAACC,GAAG,CAAC,cAAc,EAAGF,GAAG,CAACJ,IAAI,CAACS,EAAE,CAAC;UACzC,MAAMC,QAAQ,GAAG,MAAM3B,gBAAgB,CAACqB,GAAG,CAACJ,IAAI,CAACS,EAAE,CAAC;UACpD,IAAGC,QAAQ,KAAK,CAAC,EAAE,CAEnB;QACF,CAAC,CAAC;MACF,CAAC,MAAM;QACPL,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC;MAClC;IACM,CAAC,CAAC,CACDK,KAAK,CAAEC,KAAK,IAAK;MAChBP,OAAO,CAACO,KAAK,CAAC,yCAAyC,EAAEA,KAAK,CAAC;IACjE,CAAC,CAAC;EACN;EAEA,oBACEzB,OAAA,CAAAF,SAAA,mBACE,CAAC;AAEP,CAAC;AAAA4B,EAAA,GAvDKzB,aAAa;AAyDnB,eAAeA,aAAa;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}