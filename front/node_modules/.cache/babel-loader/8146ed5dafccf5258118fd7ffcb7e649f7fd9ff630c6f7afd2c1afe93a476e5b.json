{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\carax\\\\Desktop\\\\\\uC0AC\\uC774\\uB4DC \\uD504\\uB85C\\uC81D\\uD2B8\\\\SFDB-Project\\\\front\\\\src\\\\pages\\\\user\\\\Register.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Avatar, Button, CssBaseline, TextField, FormControl, FormControlLabel, Checkbox, FormHelperText, Grid, Box, Container, Stack, IconButton, InputAdornment, Link, Typography, Snackbar, Alert } from '@mui/material/';\nimport SearchIcon from '@mui/icons-material/Search';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport { DatePicker, LocalizationProvider } from '@mui/x-date-pickers';\nimport { AdapterDateFns } from '@mui/x-date-pickers/AdapterDateFns';\nimport { useNavigate } from 'react-router';\nimport { styled } from 'styled-components';\nimport { idCheckDB, regInsertDB } from '../../axios/user/registerLogic';\nimport { useSnackbar } from 'notistack';\n\n// mui의 css 우선순위가 높기때문에 important를 설정 - 실무하다 보면 종종 발생 우선순위 문제\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FormHelperTexts = styled(FormHelperText)`\n  width: 100%;\n  padding-left: 16px;\n  font-weight: 700 !important;\n  color: #d32f2f !important;\n  `;\n_c = FormHelperTexts;\nconst Boxs = styled(Box)`\n  padding-bottom: 40px !important;\n  `;\n_c2 = Boxs;\nconst Register = () => {\n  _s();\n  const theme = createTheme();\n  const navigate = useNavigate();\n  const [checked, setChecked] = useState(false);\n  const [id, setId] = useState('');\n  const [idError, setIdError] = useState('');\n  const [isIdCheck, setIsIdCheck] = useState(false);\n  const [pw, setPw] = useState('');\n  const [rePw, setRePw] = useState('');\n  const [pwError, setPwError] = useState('');\n  const [showPw, setShowPw] = useState(false);\n  const [name, setName] = useState('');\n  const [nameError, setNameError] = useState('');\n  const [selectedDate, setSelectedDate] = useState(null);\n  const [birthError, setBirthError] = useState('');\n  const [email, setEmail] = useState('');\n  const [emailError, setEmailError] = useState('');\n  const [registerError, setRegisterError] = useState('');\n  const [alertOn, setAlertOn] = useState(false);\n  const {\n    enqueueSnackbar\n  } = useSnackbar();\n  const handleClose = () => {\n    setAlertOn(false);\n  };\n\n  /************************************************************************************************/\n  /* 함수 정의 */\n\n  //id 중복확인 기능\n  const handleCheckDuplicateId = async id => {\n    console.log(id);\n    // 중복 확인 로직 처리\n    try {\n      const res = await idCheckDB(id);\n      console.log(res);\n      if (res) {\n        setAlertOn(true);\n        setIdError('이미 존재하는 아이디입니다.');\n        setIsIdCheck(false);\n      } else {\n        console.log(\"사용 가능한 아이디입니다.\");\n        enqueueSnackbar('사용 가능한 아이디입니다.', {\n          variant: 'success'\n        });\n        setAlertOn(true);\n        setIdError('');\n        setIsIdCheck(true);\n      }\n    } catch (error) {\n      console.log(error);\n      setIdError('다시 시도해주세요.');\n      setIsIdCheck(false);\n    }\n  };\n\n  //ID찾기 버튼 클릭 시 'id'입력값을 받아야함\n  const handleSearchButtonClick = () => {\n    const id = document.getElementById('id').value;\n    handleCheckDuplicateId(id);\n  };\n\n  //비밀번호 오픈\n  const handleShowPassword = () => {\n    setShowPw(prevShowPassword => !prevShowPassword);\n  };\n\n  // 생년월일 선택\n  const handleDateChange = date => {\n    setSelectedDate(date);\n  };\n  // Date 객체를 'yyyy-mm-dd' 형식의 문자열로 변환하는 함수\n  const formatDate = date => {\n    const year = date.getFullYear();\n    const month = String(date.getMonth() + 1).padStart(2, '0');\n    const day = String(date.getDate()).padStart(2, '0');\n    return `${year}-${month}-${day}`;\n  };\n\n  // 동의 체크\n  const handleAgree = event => {\n    setChecked(event.target.checked);\n  };\n\n  /************************************************************************************************/\n  /* 회원가입 데이터 요청 */\n  const regDataSend = async data => {\n    try {\n      const res = await regInsertDB(data);\n      console.log(res.data);\n      if (res.data) {\n        console.log(\"가입 성공\");\n        navigate('/login');\n        enqueueSnackbar('회원가입에 성공했습니다!', {\n          variant: 'success'\n        });\n        setAlertOn(true);\n      } else {\n        console.log('가입 실패');\n        enqueueSnackbar('회원 가입에 실패하였습니다', {\n          variant: 'warning'\n        });\n        setAlertOn(true);\n      }\n    } catch (error) {\n      console.log(error);\n      enqueueSnackbar('네트워크 오류 발생!', {\n        variant: 'error'\n      });\n      setAlertOn(true);\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!selectedDate) {\n      setBirthError('생년월일을 선택해주세요.');\n      return;\n    }\n    if (!isIdCheck) {\n      console.log(\"아이디 중복확인 해주세요.\");\n      enqueueSnackbar('아이디 중복확인은 필수입니다', {\n        variant: 'success'\n      });\n      setAlertOn(true);\n      return;\n    }\n    // 약관 동의 체크\n    if (!checked) {\n      console.log(\"회원가입 약관에 동의해주세요.\");\n      return;\n    }\n\n    // 유효성 검사\n    const idRegex = /^[A-Za-z0-9][A-Za-z0-9]{5,}$/;\n    const pwRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/;\n    const nameRegex = /^[a-zA-Z가-힣]+$/;\n    const emailRegex = /([\\w-.]+)@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.)|(([\\w-]+\\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\\]?)$/;\n    if (!idRegex.test(id)) setIdError('영문자 혹은 숫자로 시작하고, 영문자와 숫자의 조합으로 6자리 이상이어야 합니다.');else setIdError('');\n    if (!pwRegex.test(pw)) setPwError('영문자, 숫자, 특수 문자의 조합으로 8자리 이상이어야 합니다.');else setPwError('');\n    if (pw !== rePw) setPwError('비밀번호가 일치하지 않습니다.');else setPwError('');\n    if (!nameRegex.test(name)) setNameError('이름은 한글 또는 영문으로 입력해주세요.');else setNameError('');\n    if (!emailRegex.test(email)) setEmailError('올바른 이메일 형식이 아닙니다.');else setEmailError('');\n    if (idRegex.test(id) && pwRegex.test(pw) && pw === rePw && nameRegex.test(name) && emailRegex.test(email) && checked) {\n      // 회원가입 데이터 요청\n      const formattedDate = selectedDate ? formatDate(selectedDate) : '';\n      const data = new FormData(e.currentTarget);\n      const regData = {\n        userId: data.get('id'),\n        userPw: data.get('pw'),\n        userName: data.get('name'),\n        userBirth: formattedDate,\n        userEmail: data.get('email')\n      };\n      console.log(regData);\n      regDataSend(regData);\n    }\n  };\n\n  /************************************************************************************************/\n\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: theme,\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      component: \"main\",\n      maxWidth: \"xs\",\n      children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          marginTop: 8,\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            alignItems: 'center',\n            flex: 1,\n            justifyContent: 'center'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/images/SF-DB.png\",\n            alt: \"SF-DB \\uB85C\\uACE0\",\n            style: {\n              width: '180px',\n              height: '180px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          gutterBottom: true,\n          marked: \"center\",\n          align: \"center\",\n          sx: {\n            fontWeight: 'bold'\n          },\n          children: \"\\uD68C\\uC6D0\\uAC00\\uC785\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          align: \"center\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            href: \"/login\",\n            underline: \"always\",\n            children: \"\\uC774\\uBBF8 \\uACC4\\uC815\\uC774 \\uC788\\uC73C\\uC2E0\\uAC00\\uC694?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Boxs, {\n          component: \"form\",\n          noValidate: true,\n          onSubmit: handleSubmit,\n          sx: {\n            mt: 3\n          },\n          children: [/*#__PURE__*/_jsxDEV(FormControl, {\n            component: \"fieldset\",\n            variant: \"standard\",\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: 2,\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                sm: 10,\n                children: [/*#__PURE__*/_jsxDEV(TextField, {\n                  required: true,\n                  autoFocus: true,\n                  fullWidth: true,\n                  id: \"id\",\n                  name: \"id\",\n                  label: \"\\uC544\\uC774\\uB514\",\n                  value: id,\n                  onChange: e => setId(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 276,\n                  columnNumber: 23\n                }, this), idError && /*#__PURE__*/_jsxDEV(FormHelperTexts, {\n                  error: true,\n                  children: idError\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 277,\n                  columnNumber: 35\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 275,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                sm: 2,\n                children: /*#__PURE__*/_jsxDEV(IconButton, {\n                  onClick: handleSearchButtonClick,\n                  children: /*#__PURE__*/_jsxDEV(SearchIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 281,\n                    columnNumber: 9\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 280,\n                  columnNumber: 7\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 279,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  required: true,\n                  fullWidth: true,\n                  type: \"password\",\n                  id: \"pw\",\n                  name: \"pw\",\n                  label: \"\\uBE44\\uBC00\\uBC88\\uD638 (\\uC22B\\uC790+\\uC601\\uBB38\\uC790+\\uD2B9\\uC218\\uBB38\\uC790 8\\uC790\\uB9AC \\uC774\\uC0C1)\",\n                  value: pw,\n                  onChange: e => {\n                    const value = e.target.value;\n                    setPw(value);\n                    // 비밀번호 변경 시, 비밀번호 확인과 일치 여부 확인\n                    setPwError(value !== rePw ? '비밀번호가 일치하지 않습니다.' : '');\n                  },\n                  error: pwError !== '',\n                  helperText: pwError,\n                  InputProps: {\n                    endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                      position: \"end\",\n                      children: /*#__PURE__*/_jsxDEV(IconButton, {\n                        onClick: handleShowPassword,\n                        onMouseDown: e => e.preventDefault(),\n                        edge: \"end\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 308,\n                        columnNumber: 13\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 307,\n                      columnNumber: 11\n                    }, this)\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 289,\n                  columnNumber: 5\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 288,\n                columnNumber: 3\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  required: true,\n                  fullWidth: true,\n                  type: showPw ? 'text' : 'password',\n                  id: \"rePw\",\n                  name: \"rePw\",\n                  label: \"\\uBE44\\uBC00\\uBC88\\uD638 \\uD655\\uC778\",\n                  value: rePw,\n                  onChange: e => {\n                    const value = e.target.value;\n                    setRePw(value);\n                    // 비밀번호 확인 변경 시, 비밀번호와 일치 여부 확인\n                    setPwError(value !== pw ? '비밀번호가 일치하지 않습니다.' : '');\n                  },\n                  error: pwError !== '',\n                  helperText: pwError\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 320,\n                  columnNumber: 5\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 319,\n                columnNumber: 3\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                sm: 6,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  required: true,\n                  fullWidth: true,\n                  id: \"name\",\n                  name: \"name\",\n                  value: name,\n                  onChange: e => {\n                    const value = e.target.value;\n                    setName(value);\n                  },\n                  label: \"\\uC774\\uB984\",\n                  error: nameError !== '',\n                  helperText: nameError\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 342,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 341,\n                columnNumber: 5\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                sm: 6,\n                children: /*#__PURE__*/_jsxDEV(LocalizationProvider, {\n                  dateAdapter: AdapterDateFns,\n                  children: /*#__PURE__*/_jsxDEV(DatePicker, {\n                    label: \"\\uC0DD\\uB144\\uC6D4\\uC77C\",\n                    value: selectedDate,\n                    onChange: handleDateChange,\n                    renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n                      ...params,\n                      error: birthError !== '',\n                      helperText: birthError\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 353,\n                      columnNumber: 52\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 349,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 348,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 347,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  required: true,\n                  fullWidth: true,\n                  type: \"email\",\n                  id: \"email\",\n                  name: \"email\",\n                  value: email,\n                  onChange: e => {\n                    const value = e.target.value;\n                    setEmail(value);\n                  },\n                  label: \"\\uC774\\uBA54\\uC77C \\uC8FC\\uC18C\",\n                  error: emailError !== '',\n                  helperText: emailError\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 360,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 359,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                  control: /*#__PURE__*/_jsxDEV(Checkbox, {\n                    onChange: handleAgree,\n                    color: \"primary\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 377,\n                    columnNumber: 34\n                  }, this),\n                  label: \"\\uD68C\\uC6D0\\uAC00\\uC785 \\uC57D\\uAD00\\uC5D0 \\uB3D9\\uC758\\uD569\\uB2C8\\uB2E4.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 376,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 375,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              fullWidth: true,\n              variant: \"contained\",\n              sx: {\n                mt: 3,\n                mb: 2,\n                bgcolor: 'primary.main'\n              },\n              size: \"large\",\n              children: \"\\uAC00\\uC785\\uD558\\uAE30\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 383,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(FormHelperTexts, {\n            children: registerError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 393,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n        open: alertOn,\n        autoHideDuration: 3000,\n        onClose: handleClose,\n        children: /*#__PURE__*/_jsxDEV(Alert, {\n          onClose: handleClose,\n          severity: \"success\",\n          sx: {\n            width: '100%'\n          },\n          children: \"\\uB85C\\uADF8\\uC778\\uC5D0 \\uC131\\uACF5\\uD588\\uC2B5\\uB2C8\\uB2E4!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 397,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 244,\n    columnNumber: 9\n  }, this);\n};\n_s(Register, \"TBU9WqA6MSjaXmTq09/4kev6/vw=\", false, function () {\n  return [useNavigate, useSnackbar];\n});\n_c3 = Register;\nexport default Register;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"FormHelperTexts\");\n$RefreshReg$(_c2, \"Boxs\");\n$RefreshReg$(_c3, \"Register\");","map":{"version":3,"names":["React","useState","Avatar","Button","CssBaseline","TextField","FormControl","FormControlLabel","Checkbox","FormHelperText","Grid","Box","Container","Stack","IconButton","InputAdornment","Link","Typography","Snackbar","Alert","SearchIcon","createTheme","ThemeProvider","DatePicker","LocalizationProvider","AdapterDateFns","useNavigate","styled","idCheckDB","regInsertDB","useSnackbar","jsxDEV","_jsxDEV","FormHelperTexts","_c","Boxs","_c2","Register","_s","theme","navigate","checked","setChecked","id","setId","idError","setIdError","isIdCheck","setIsIdCheck","pw","setPw","rePw","setRePw","pwError","setPwError","showPw","setShowPw","name","setName","nameError","setNameError","selectedDate","setSelectedDate","birthError","setBirthError","email","setEmail","emailError","setEmailError","registerError","setRegisterError","alertOn","setAlertOn","enqueueSnackbar","handleClose","handleCheckDuplicateId","console","log","res","variant","error","handleSearchButtonClick","document","getElementById","value","handleShowPassword","prevShowPassword","handleDateChange","date","formatDate","year","getFullYear","month","String","getMonth","padStart","day","getDate","handleAgree","event","target","regDataSend","data","handleSubmit","e","preventDefault","idRegex","pwRegex","nameRegex","emailRegex","test","formattedDate","FormData","currentTarget","regData","userId","get","userPw","userName","userBirth","userEmail","children","component","maxWidth","fileName","_jsxFileName","lineNumber","columnNumber","sx","marginTop","display","flexDirection","alignItems","flex","justifyContent","src","alt","style","width","height","gutterBottom","marked","align","fontWeight","href","underline","noValidate","onSubmit","mt","container","spacing","item","xs","sm","required","autoFocus","fullWidth","label","onChange","onClick","type","helperText","InputProps","endAdornment","position","onMouseDown","edge","dateAdapter","renderInput","params","control","color","mb","bgcolor","size","open","autoHideDuration","onClose","severity","_c3","$RefreshReg$"],"sources":["C:/Users/carax/Desktop/사이드 프로젝트/SFDB-Project/front/src/pages/user/Register.jsx"],"sourcesContent":["    import React, { useState } from 'react';\r\n    import {\r\n      Avatar,\r\n      Button,\r\n      CssBaseline,\r\n      TextField,\r\n      FormControl,\r\n      FormControlLabel,\r\n      Checkbox,\r\n      FormHelperText,\r\n      Grid,\r\n      Box,\r\n      Container,\r\n      Stack,\r\n      IconButton,\r\n      InputAdornment,\r\n      Link,\r\n      Typography,\r\n      Snackbar,\r\n      Alert,\r\n    } from '@mui/material/';\r\n    import SearchIcon from '@mui/icons-material/Search';\r\n    import { createTheme, ThemeProvider } from '@mui/material/styles';\r\n    import { DatePicker, LocalizationProvider } from '@mui/x-date-pickers';\r\n    import { AdapterDateFns } from '@mui/x-date-pickers/AdapterDateFns'\r\n  import { useNavigate } from 'react-router';\r\n  import { styled } from 'styled-components';\r\n  import { idCheckDB, regInsertDB } from '../../axios/user/registerLogic';\r\nimport { useSnackbar } from 'notistack';\r\n\r\n  // mui의 css 우선순위가 높기때문에 important를 설정 - 실무하다 보면 종종 발생 우선순위 문제\r\n  const FormHelperTexts = styled(FormHelperText)`\r\n  width: 100%;\r\n  padding-left: 16px;\r\n  font-weight: 700 !important;\r\n  color: #d32f2f !important;\r\n  `;\r\n\r\n\r\n  const Boxs = styled(Box)`\r\n  padding-bottom: 40px !important;\r\n  `;\r\n\r\n    const Register = () => {\r\n      const theme = createTheme();\r\n      const navigate = useNavigate();\r\n      \r\n      const [checked, setChecked] = useState(false);\r\n      const [id, setId] = useState('');\r\n      const [idError, setIdError] = useState('');\r\n      const [isIdCheck , setIsIdCheck] = useState(false);\r\n      const [pw, setPw] = useState('');\r\n      const [rePw, setRePw] = useState('');\r\n      const [pwError, setPwError] = useState('');\r\n      const [showPw, setShowPw] = useState(false)\r\n      const [name, setName] = useState('')\r\n      const [nameError, setNameError] = useState('');\r\n      const [selectedDate, setSelectedDate] = useState(null);\r\n      const [birthError, setBirthError] = useState('');\r\n      const [email , setEmail] = useState('')\r\n      const [emailError, setEmailError] = useState('');\r\n      const [registerError, setRegisterError] = useState('');\r\n      const [alertOn, setAlertOn] = useState(false);\r\n\r\n\r\n      const { enqueueSnackbar } = useSnackbar(); \r\n      const handleClose = () => {\r\n        setAlertOn(false)\r\n      }\r\n    \r\n\r\n    /************************************************************************************************/\r\n    /* 함수 정의 */\r\n    \r\n    //id 중복확인 기능\r\n    const handleCheckDuplicateId = async(id) => {\r\n      console.log(id);\r\n      // 중복 확인 로직 처리\r\n      try {\r\n        const res = await idCheckDB(id);\r\n        console.log(res);\r\n        if(res){\r\n          setAlertOn(true);\r\n          setIdError('이미 존재하는 아이디입니다.');\r\n          setIsIdCheck(false);\r\n        }else{\r\n            console.log(\"사용 가능한 아이디입니다.\");\r\n            enqueueSnackbar('사용 가능한 아이디입니다.', { variant: 'success' });\r\n            setAlertOn(true);\r\n          setIdError('');\r\n          setIsIdCheck(true);\r\n        }\r\n      } catch (error) {\r\n        console.log(error);\r\n        setIdError('다시 시도해주세요.')\r\n        setIsIdCheck(false)\r\n      }\r\n\r\n    }\r\n    \r\n\r\n    //ID찾기 버튼 클릭 시 'id'입력값을 받아야함\r\n    const handleSearchButtonClick = () => {\r\n      const id = document.getElementById('id').value;\r\n      handleCheckDuplicateId(id);\r\n    }\r\n    \r\n    //비밀번호 오픈\r\n    const handleShowPassword = () => {\r\n      setShowPw((prevShowPassword) => !prevShowPassword);\r\n    };\r\n\r\n\r\n    // 생년월일 선택\r\n    const handleDateChange = (date) => {\r\n      setSelectedDate(date);\r\n    };\r\n    // Date 객체를 'yyyy-mm-dd' 형식의 문자열로 변환하는 함수\r\n    const formatDate = (date) => {\r\n      const year = date.getFullYear();\r\n      const month = String(date.getMonth() + 1).padStart(2, '0');\r\n      const day = String(date.getDate()).padStart(2, '0');\r\n      return `${year}-${month}-${day}`;\r\n    };\r\n    \r\n    \r\n    // 동의 체크\r\n      const handleAgree = (event) => {\r\n        setChecked(event.target.checked);\r\n      };\r\n    \r\n    \r\n\r\n  /************************************************************************************************/\r\n  /* 회원가입 데이터 요청 */\r\n  const regDataSend = async (data) => {\r\n    try {\r\n      const res = await regInsertDB(data)\r\n      console.log(res.data);\r\n\r\n      if(res.data){\r\n        console.log(\"가입 성공\");\r\n        navigate('/login')\r\n        enqueueSnackbar('회원가입에 성공했습니다!', { variant: 'success' });\r\n        setAlertOn(true);\r\n      }else{\r\n      console.log('가입 실패');\r\n      enqueueSnackbar('회원 가입에 실패하였습니다', { variant: 'warning' });\r\n      setAlertOn(true);\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      enqueueSnackbar('네트워크 오류 발생!', { variant: 'error' });\r\n      setAlertOn(true);\r\n      \r\n  }\r\n  }\r\n    \r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (!selectedDate) {\r\n      setBirthError('생년월일을 선택해주세요.');\r\n      return;\r\n    }\r\n    if (!isIdCheck){\r\n        console.log(\"아이디 중복확인 해주세요.\") \r\n        enqueueSnackbar('아이디 중복확인은 필수입니다', { variant: 'success' });\r\n        setAlertOn(true);\r\n      return;\r\n    }\r\n    // 약관 동의 체크\r\n    if (!checked) {\r\n        console.log(\"회원가입 약관에 동의해주세요.\")\r\n      return;\r\n    }\r\n\r\n    // 유효성 검사\r\n    const idRegex = /^[A-Za-z0-9][A-Za-z0-9]{5,}$/;\r\n    const pwRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/;\r\n    const nameRegex = /^[a-zA-Z가-힣]+$/;\r\n    const emailRegex = /([\\w-.]+)@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.)|(([\\w-]+\\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\\]?)$/;\r\n\r\n    if (!idRegex.test(id))\r\n      setIdError('영문자 혹은 숫자로 시작하고, 영문자와 숫자의 조합으로 6자리 이상이어야 합니다.');\r\n    else\r\n      setIdError('');\r\n\r\n    if (!pwRegex.test(pw))\r\n      setPwError('영문자, 숫자, 특수 문자의 조합으로 8자리 이상이어야 합니다.');\r\n    else \r\n      setPwError('');\r\n    \r\n    if (pw !== rePw) \r\n      setPwError('비밀번호가 일치하지 않습니다.');\r\n    else \r\n      setPwError('');\r\n\r\n    if (!nameRegex.test(name)) \r\n      setNameError('이름은 한글 또는 영문으로 입력해주세요.');\r\n    else \r\n      setNameError('');\r\n    \r\n    if (!emailRegex.test(email)) \r\n      setEmailError('올바른 이메일 형식이 아닙니다.');\r\n    else \r\n      setEmailError('');\r\n\r\n    \r\n\r\n      if (\r\n        idRegex.test(id) &&\r\n        pwRegex.test(pw) &&\r\n        pw === rePw &&\r\n        nameRegex.test(name) &&\r\n        emailRegex.test(email) &&\r\n        checked\r\n      ) {\r\n  // 회원가입 데이터 요청\r\n  const formattedDate = selectedDate ? formatDate(selectedDate) : '';\r\n  const data = new FormData(e.currentTarget);\r\n  const regData = {\r\n    userId : data.get('id'),\r\n    userPw: data.get('pw'),\r\n    userName : data.get('name'),\r\n    userBirth: formattedDate,\r\n    userEmail : data.get('email'),\r\n  };\r\n  console.log(regData);\r\n  regDataSend(regData);\r\n      }\r\n    };\r\n\r\n  \r\n    \r\n\r\n\r\n\r\n\r\n\r\n\r\n  /************************************************************************************************/\r\n\r\n      return (\r\n        <ThemeProvider theme={theme}>\r\n          <Container component=\"main\" maxWidth=\"xs\">\r\n            <CssBaseline />\r\n            <Box\r\n              sx={{\r\n                marginTop: 8,\r\n                display: 'flex',\r\n                flexDirection: 'column',\r\n                alignItems: 'center',\r\n              }}\r\n            >\r\n              <Box sx={{ display: 'flex', alignItems: 'center', flex: 1, justifyContent: 'center' }}>\r\n          <img\r\n            src=\"/images/SF-DB.png\"\r\n            alt=\"SF-DB 로고\"\r\n            style={{ width: '180px', height: '180px' }}\r\n          />\r\n        </Box>\r\n              <Typography variant=\"h5\" gutterBottom marked=\"center\" align=\"center\" sx={{ fontWeight: 'bold' }}>\r\n            회원가입\r\n          </Typography>\r\n          <Typography variant=\"body2\" align=\"center\">\r\n            <Link href=\"/login\" underline=\"always\">\r\n              이미 계정이 있으신가요?\r\n            </Link>\r\n          </Typography>\r\n              <Boxs component=\"form\" noValidate onSubmit={handleSubmit} sx={{ mt: 3 }}>\r\n                <FormControl component=\"fieldset\" variant=\"standard\">\r\n                  \r\n                  <Grid container spacing={2}>\r\n  {/* 아이디 입력 및 중복 확인 */}\r\n                    <Grid item xs={12} sm={10}>\r\n                      <TextField required autoFocus fullWidth id=\"id\" name=\"id\" label=\"아이디\" value={id} onChange={(e) => setId(e.target.value)}/>\r\n                      {idError && <FormHelperTexts error>{idError}</FormHelperTexts>}\r\n                    </Grid>\r\n                  <Grid item xs={12} sm={2}>\r\n      <IconButton onClick={handleSearchButtonClick}>\r\n        <SearchIcon />\r\n      </IconButton>\r\n    \r\n    </Grid>\r\n    \r\n\r\n  {/* 비밀번호 입력 및 재확인 */}                  \r\n  <Grid item xs={12}>\r\n    <TextField\r\n      required\r\n      fullWidth\r\n      type=\"password\"\r\n      id=\"pw\"\r\n      name=\"pw\"\r\n      label=\"비밀번호 (숫자+영문자+특수문자 8자리 이상)\"\r\n      value={pw}\r\n      onChange={(e) => {\r\n        const value = e.target.value;\r\n        setPw(value);\r\n        // 비밀번호 변경 시, 비밀번호 확인과 일치 여부 확인\r\n        setPwError(value !== rePw ? '비밀번호가 일치하지 않습니다.' : '');\r\n      }}\r\n      error={pwError !== ''}\r\n      helperText={pwError}\r\n      InputProps={{\r\n        endAdornment: (\r\n          <InputAdornment position=\"end\">\r\n            <IconButton\r\n              onClick={handleShowPassword}\r\n              onMouseDown={(e) => e.preventDefault()}\r\n              edge=\"end\"\r\n            >\r\n            </IconButton>\r\n          </InputAdornment>\r\n        ),\r\n      }}\r\n    />\r\n  </Grid>\r\n  <Grid item xs={12}>\r\n    <TextField\r\n      required\r\n      fullWidth\r\n      type={showPw ? 'text' : 'password'}\r\n      id=\"rePw\"\r\n      name=\"rePw\"\r\n      label=\"비밀번호 확인\"\r\n      value={rePw}\r\n      onChange={(e) => {\r\n        const value = e.target.value;\r\n        setRePw(value);\r\n        // 비밀번호 확인 변경 시, 비밀번호와 일치 여부 확인\r\n        setPwError(value !== pw ? '비밀번호가 일치하지 않습니다.' : '');\r\n      }}\r\n      error={pwError !== ''}\r\n      helperText={pwError}\r\n    />\r\n  </Grid>\r\n              \r\n\r\n  {/* 이름 및 생년월일 입력 */}\r\n    <Grid item xs={12} sm={6}>\r\n                      <TextField required fullWidth id=\"name\" name=\"name\" value={name} \r\n                      onChange={(e) => {const value = e.target.value; setName(value);}} label=\"이름\"\r\n                      error={nameError !== ''}\r\n    helperText={nameError} />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n                        <DatePicker\r\n                          label=\"생년월일\"\r\n                          value={selectedDate}\r\n                          onChange={handleDateChange}\r\n                          renderInput={(params) => <TextField {...params} error={birthError !== ''} helperText={birthError}  />}\r\n                        />\r\n                      </LocalizationProvider>\r\n                    </Grid>\r\n\r\n  {/* 이메일 입력 */}\r\n                    <Grid item xs={12}>\r\n                      <TextField\r\n                        required\r\n                        fullWidth\r\n                        type=\"email\"\r\n                        id=\"email\"\r\n                        name=\"email\"\r\n                        value={email}\r\n                        onChange={(e) => {const value = e.target.value; setEmail(value);}}\r\n                        label=\"이메일 주소\"\r\n                        error={emailError !== ''}\r\n                        helperText={emailError}\r\n                      />\r\n                    </Grid>\r\n\r\n  {/* 약관 동의 */}\r\n                    <Grid item xs={12}>\r\n                      <FormControlLabel\r\n                        control={<Checkbox onChange={handleAgree} color=\"primary\" />}\r\n                        label=\"회원가입 약관에 동의합니다.\"\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n              {/* 가입 요청 */}\r\n                  <Button\r\n                    type=\"submit\"\r\n                    fullWidth\r\n                    variant=\"contained\"\r\n                    sx={{ mt: 3, mb: 2, bgcolor: 'primary.main' }}\r\n                    size=\"large\"\r\n                  >\r\n                    가입하기\r\n                  </Button>\r\n                </FormControl>\r\n                <FormHelperTexts>{registerError}</FormHelperTexts>\r\n                </Boxs>\r\n            </Box>\r\n            <Snackbar open={alertOn} autoHideDuration={3000} onClose={handleClose}>\r\n          <Alert onClose={handleClose} severity=\"success\" sx={{ width: '100%' }}>\r\n            로그인에 성공했습니다!\r\n          </Alert>\r\n        </Snackbar>\r\n          </Container>\r\n        </ThemeProvider>\r\n      );\r\n    };\r\n\r\n    export default Register;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}