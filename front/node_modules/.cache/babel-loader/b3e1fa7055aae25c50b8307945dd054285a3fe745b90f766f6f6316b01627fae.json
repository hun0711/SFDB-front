{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MovieDetail = () => {\n  _s();\n  const location = useLocation();\n  const movieInfo = location.pathname.split('/movieDetail/')[1];\n  const [movieId, movieSeq] = movieInfo.match(/([A-Z])(\\d+)/).slice(1);\n  console.log(movieId);\n  console.log(movieSeq);\n  useEffect(() => {\n    const getMovieDetail = async () => {\n      try {\n        const res = await movieDetailDB();\n        console.log(res.data);\n      } catch (error) {\n        console.log(\"영화 상세정보 로드 실패 : \", error);\n      }\n    };\n    getMovieDetail();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n};\n_s(MovieDetail, \"BXcZrDMM76mmm4zA8/QV5UbMNXE=\", true);\n_c = MovieDetail;\nexport default MovieDetail;\nvar _c;\n$RefreshReg$(_c, \"MovieDetail\");","map":{"version":3,"names":["React","useEffect","Fragment","_Fragment","jsxDEV","_jsxDEV","MovieDetail","_s","location","useLocation","movieInfo","pathname","split","movieId","movieSeq","match","slice","console","log","getMovieDetail","res","movieDetailDB","data","error","_c","$RefreshReg$"],"sources":["C:/Users/carax/Desktop/사이드 프로젝트/SFDB-Project/front/src/pages/detail/MovieDetail.jsx"],"sourcesContent":["import React, { useEffect } from 'react'\r\n\r\nconst MovieDetail = () => {\r\n  const location = useLocation();\r\n  const movieInfo = location.pathname.split('/movieDetail/')[1];\r\n  const [movieId, movieSeq] = movieInfo.match(/([A-Z])(\\d+)/).slice(1);\r\n  console.log(movieId);\r\n  console.log(movieSeq);\r\n  useEffect(() => {\r\n  const getMovieDetail = async () => {\r\n    try {\r\n      const res = await movieDetailDB()\r\n      console.log(res.data);\r\n    } catch (error) {\r\n      console.log(\"영화 상세정보 로드 실패 : \" , error);\r\n    }\r\n  }\r\n    getMovieDetail()\r\n  },[])\r\n\r\n  return (\r\n    <>\r\n    \r\n    </>\r\n  )\r\n}\r\n\r\nexport default MovieDetail"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAMC,QAAQ,GAAGC,WAAW,CAAC,CAAC;EAC9B,MAAMC,SAAS,GAAGF,QAAQ,CAACG,QAAQ,CAACC,KAAK,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC;EAC7D,MAAM,CAACC,OAAO,EAAEC,QAAQ,CAAC,GAAGJ,SAAS,CAACK,KAAK,CAAC,cAAc,CAAC,CAACC,KAAK,CAAC,CAAC,CAAC;EACpEC,OAAO,CAACC,GAAG,CAACL,OAAO,CAAC;EACpBI,OAAO,CAACC,GAAG,CAACJ,QAAQ,CAAC;EACrBb,SAAS,CAAC,MAAM;IAChB,MAAMkB,cAAc,GAAG,MAAAA,CAAA,KAAY;MACjC,IAAI;QACF,MAAMC,GAAG,GAAG,MAAMC,aAAa,CAAC,CAAC;QACjCJ,OAAO,CAACC,GAAG,CAACE,GAAG,CAACE,IAAI,CAAC;MACvB,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdN,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAGK,KAAK,CAAC;MACzC;IACF,CAAC;IACCJ,cAAc,CAAC,CAAC;EAClB,CAAC,EAAC,EAAE,CAAC;EAEL,oBACEd,OAAA,CAAAF,SAAA,mBAEE,CAAC;AAEP,CAAC;AAAAI,EAAA,CAvBKD,WAAW;AAAAkB,EAAA,GAAXlB,WAAW;AAyBjB,eAAeA,WAAW;AAAA,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}