{"ast":null,"code":"import axios from \"axios\";\nexport const userLoginDB = async data => {\n  try {\n    const res = await axios.post(`http://localhost:8000/user/login`, data);\n    // 서버로부터 받은 응답 데이터를 반환합니다.\n    return res.data;\n  } catch (error) {\n    // 요청이 실패했을 때 오류를 콘솔에 출력하고 오류 객체를 반환합니다.\n    console.error(\"Error during idCheckDB request:\", error);\n    throw error; // 이 오류를 호출자에게 전달하여 처리하도록 합니다.\n  }\n};\n\nexport const googleSocialLogin = async data => {\n  try {\n    const res = await axios.post(\"http://localhost:8000/user/login/google\", data);\n    return res.data;\n  } catch (error) {\n    console.error(\"Error : \", error);\n    throw error;\n  }\n};\nexport const naverSocialLogin = async data => {\n  try {\n    const res = await axios.post(\"http://localhost:8000/user/login/naver\", data);\n    return res.data;\n  } catch (error) {\n    console.error(\"Error : \", error);\n    throw error;\n  }\n};\nexport const naverLoginGet = async token => {\n  try {\n    const res = await axios.get(\"http://localhost:8000/user/login/naverData\", {\n      headers: {\n        'Authorization': `Bearer ${token}`\n      }\n    });\n  } catch (error) {}\n};","map":{"version":3,"names":["axios","userLoginDB","data","res","post","error","console","googleSocialLogin","naverSocialLogin","naverLoginGet","token","get","headers"],"sources":["C:/Users/carax/Desktop/사이드 프로젝트/SFDB-Project/front/src/axios/user/loginLogic.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nexport const userLoginDB = async (data) => {\r\n  try {\r\n    const res = await axios.post(`http://localhost:8000/user/login`, data);\r\n    // 서버로부터 받은 응답 데이터를 반환합니다.\r\n    return res.data;\r\n  } catch (error) {\r\n    // 요청이 실패했을 때 오류를 콘솔에 출력하고 오류 객체를 반환합니다.\r\n    console.error(\"Error during idCheckDB request:\", error);\r\n    throw error; // 이 오류를 호출자에게 전달하여 처리하도록 합니다.\r\n  }\r\n};\r\n\r\nexport const googleSocialLogin = async (data) => {\r\n  try {\r\n    const res = await axios.post(\r\n      \"http://localhost:8000/user/login/google\",\r\n      data\r\n    );\r\n    return res.data;\r\n  } catch (error) {\r\n    console.error(\"Error : \", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const naverSocialLogin = async (data) => {\r\n  try {\r\n    const res = await axios.post(\r\n      \"http://localhost:8000/user/login/naver\",\r\n      data\r\n    );\r\n    return res.data;\r\n  } catch (error) {\r\n    console.error(\"Error : \", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const naverLoginGet = async (token) => {\r\n  try{\r\n    const res = await axios.get(\r\n      \"http://localhost:8000/user/login/naverData\",{\r\n        headers : {\r\n            'Authorization' : `Bearer ${token}`,\r\n        }\r\n    })\r\n  }catch(error){\r\n        \r\n  }\r\n\r\n}\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAO,MAAMC,WAAW,GAAG,MAAOC,IAAI,IAAK;EACzC,IAAI;IACF,MAAMC,GAAG,GAAG,MAAMH,KAAK,CAACI,IAAI,CAAE,kCAAiC,EAAEF,IAAI,CAAC;IACtE;IACA,OAAOC,GAAG,CAACD,IAAI;EACjB,CAAC,CAAC,OAAOG,KAAK,EAAE;IACd;IACAC,OAAO,CAACD,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;IACvD,MAAMA,KAAK,CAAC,CAAC;EACf;AACF,CAAC;;AAED,OAAO,MAAME,iBAAiB,GAAG,MAAOL,IAAI,IAAK;EAC/C,IAAI;IACF,MAAMC,GAAG,GAAG,MAAMH,KAAK,CAACI,IAAI,CAC1B,yCAAyC,EACzCF,IACF,CAAC;IACD,OAAOC,GAAG,CAACD,IAAI;EACjB,CAAC,CAAC,OAAOG,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,UAAU,EAAEA,KAAK,CAAC;IAChC,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAMG,gBAAgB,GAAG,MAAON,IAAI,IAAK;EAC9C,IAAI;IACF,MAAMC,GAAG,GAAG,MAAMH,KAAK,CAACI,IAAI,CAC1B,wCAAwC,EACxCF,IACF,CAAC;IACD,OAAOC,GAAG,CAACD,IAAI;EACjB,CAAC,CAAC,OAAOG,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,UAAU,EAAEA,KAAK,CAAC;IAChC,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAMI,aAAa,GAAG,MAAOC,KAAK,IAAK;EAC5C,IAAG;IACD,MAAMP,GAAG,GAAG,MAAMH,KAAK,CAACW,GAAG,CACzB,4CAA4C,EAAC;MAC3CC,OAAO,EAAG;QACN,eAAe,EAAI,UAASF,KAAM;MACtC;IACJ,CAAC,CAAC;EACJ,CAAC,QAAML,KAAK,EAAC,CAEb;AAEF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}