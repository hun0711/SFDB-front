{"ast":null,"code":"import axios from \"axios\";\nexport const top20sfmoviesDB = async () => {\n  try {\n    const res = await axios.get(`http://localhost:8000/movie/top20SfMovie`);\n    console.log(res.data);\n    return res.data;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n};\nexport const recommendMoviesDB = async () => {\n  try {\n    const res = await axios.get(`http://localhost:8000/movie/recommendMovie`);\n    console.log(res.data);\n    return res.data;\n  } catch (error) {\n    console.log(error);\n    throw error;\n  }\n};\nexport const todayBoxofficeDB = async () => {\n  try {\n    const res = await axios.get(`http://localhost:8000/movie/todayBoxofficeRank`);\n    console.log(res.data);\n    return res.data;\n  } catch (error) {\n    console.log(error);\n    throw error;\n  }\n};\nexport const ottExistanceDB = async () => {\n  try {\n    const res = await axios.get(`http://localhost:8000/movie/ottExistance`);\n    console.log(res.data);\n    return res.data;\n  } catch (error) {\n    console.log(error);\n    throw error;\n  }\n};\nexport const updateBoxofficeDB = async () => {\n  try {\n    const res = await axios.post(`http://localhost:8000/api/movies/updateBoxoffice`);\n    return res;\n  } catch (error) {\n    console.log(error);\n    throw error;\n  }\n};\nexport const movieDetailDB = async (movieId, movieSeq) => {\n  try {\n    const res = await axios.get(`http://localhost:8000/movie/movieDetail`, {\n      params: {\n        movieId: movieId,\n        movieSeq: movieSeq\n      }\n    });\n    console.log(res.data);\n    return res.data;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","top20sfmoviesDB","res","get","console","log","data","error","recommendMoviesDB","todayBoxofficeDB","ottExistanceDB","updateBoxofficeDB","post","movieDetailDB","movieId","movieSeq","params"],"sources":["C:/Users/carax/Desktop/사이드 프로젝트/SFDB-Project/front/src/axios/main/movieLogic.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nexport const top20sfmoviesDB = async () => {\r\n  try {\r\n    const res = await axios.get(`http://localhost:8000/movie/top20SfMovie`);\r\n    console.log(res.data);\r\n    return res.data;\r\n  } catch (error) {\r\n    console.error(error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const recommendMoviesDB = async () => {\r\n  try {\r\n    const res = await axios.get(`http://localhost:8000/movie/recommendMovie`);\r\n    console.log(res.data);\r\n    return res.data;\r\n  } catch (error) {\r\n    console.log(error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const todayBoxofficeDB = async () => {\r\n  try {\r\n    const res = await axios.get(\r\n      `http://localhost:8000/movie/todayBoxofficeRank`\r\n    );\r\n    console.log(res.data);\r\n    return res.data;\r\n  } catch (error) {\r\n    console.log(error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const ottExistanceDB = async () => {\r\n  try {\r\n    const res = await axios.get(`http://localhost:8000/movie/ottExistance`);\r\n    console.log(res.data);\r\n    return res.data;\r\n  } catch (error) {\r\n    console.log(error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const updateBoxofficeDB = async () => {\r\n  try {\r\n    const res = await axios.post(\r\n      `http://localhost:8000/api/movies/updateBoxoffice`\r\n    );\r\n    return res;\r\n  } catch (error) {\r\n    console.log(error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const movieDetailDB = async (movieId, movieSeq) => {\r\n  try {\r\n    const res = await axios.get(`http://localhost:8000/movie/movieDetail`, {\r\n      params: {\r\n        movieId: movieId,\r\n        movieSeq: movieSeq,\r\n      },\r\n    });\r\n    console.log(res.data);\r\n    return res.data;\r\n  } catch (error) {\r\n    console.error(error);\r\n    throw error;\r\n  }\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAO,MAAMC,eAAe,GAAG,MAAAA,CAAA,KAAY;EACzC,IAAI;IACF,MAAMC,GAAG,GAAG,MAAMF,KAAK,CAACG,GAAG,CAAE,0CAAyC,CAAC;IACvEC,OAAO,CAACC,GAAG,CAACH,GAAG,CAACI,IAAI,CAAC;IACrB,OAAOJ,GAAG,CAACI,IAAI;EACjB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdH,OAAO,CAACG,KAAK,CAACA,KAAK,CAAC;IACpB,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAMC,iBAAiB,GAAG,MAAAA,CAAA,KAAY;EAC3C,IAAI;IACF,MAAMN,GAAG,GAAG,MAAMF,KAAK,CAACG,GAAG,CAAE,4CAA2C,CAAC;IACzEC,OAAO,CAACC,GAAG,CAACH,GAAG,CAACI,IAAI,CAAC;IACrB,OAAOJ,GAAG,CAACI,IAAI;EACjB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdH,OAAO,CAACC,GAAG,CAACE,KAAK,CAAC;IAClB,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAME,gBAAgB,GAAG,MAAAA,CAAA,KAAY;EAC1C,IAAI;IACF,MAAMP,GAAG,GAAG,MAAMF,KAAK,CAACG,GAAG,CACxB,gDACH,CAAC;IACDC,OAAO,CAACC,GAAG,CAACH,GAAG,CAACI,IAAI,CAAC;IACrB,OAAOJ,GAAG,CAACI,IAAI;EACjB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdH,OAAO,CAACC,GAAG,CAACE,KAAK,CAAC;IAClB,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAMG,cAAc,GAAG,MAAAA,CAAA,KAAY;EACxC,IAAI;IACF,MAAMR,GAAG,GAAG,MAAMF,KAAK,CAACG,GAAG,CAAE,0CAAyC,CAAC;IACvEC,OAAO,CAACC,GAAG,CAACH,GAAG,CAACI,IAAI,CAAC;IACrB,OAAOJ,GAAG,CAACI,IAAI;EACjB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdH,OAAO,CAACC,GAAG,CAACE,KAAK,CAAC;IAClB,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAMI,iBAAiB,GAAG,MAAAA,CAAA,KAAY;EAC3C,IAAI;IACF,MAAMT,GAAG,GAAG,MAAMF,KAAK,CAACY,IAAI,CACzB,kDACH,CAAC;IACD,OAAOV,GAAG;EACZ,CAAC,CAAC,OAAOK,KAAK,EAAE;IACdH,OAAO,CAACC,GAAG,CAACE,KAAK,CAAC;IAClB,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAMM,aAAa,GAAG,MAAAA,CAAOC,OAAO,EAAEC,QAAQ,KAAK;EACxD,IAAI;IACF,MAAMb,GAAG,GAAG,MAAMF,KAAK,CAACG,GAAG,CAAE,yCAAwC,EAAE;MACrEa,MAAM,EAAE;QACNF,OAAO,EAAEA,OAAO;QAChBC,QAAQ,EAAEA;MACZ;IACF,CAAC,CAAC;IACFX,OAAO,CAACC,GAAG,CAACH,GAAG,CAACI,IAAI,CAAC;IACrB,OAAOJ,GAAG,CAACI,IAAI;EACjB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdH,OAAO,CAACG,KAAK,CAACA,KAAK,CAAC;IACpB,MAAMA,KAAK;EACb;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}