{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\carax\\\\Desktop\\\\\\uC0AC\\uC774\\uB4DC \\uD504\\uB85C\\uC81D\\uD2B8\\\\SFDB-Project\\\\front\\\\src\\\\pages\\\\user\\\\GoogleLogin.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { gapi } from 'gapi-script';\nimport { googleSocialLogin, googleUserInfo } from '../../axios/user/loginLogic';\nimport config from '../../config';\nimport { serialize } from 'cookie';\nimport { useNavigate } from 'react-router';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst GoogleLogin = () => {\n  _s();\n  const navigate = useNavigate();\n  {/* 구글 sdk */}\n  useEffect(() => {\n    const loadGoogleApiScript = async () => {\n      try {\n        await new Promise((resolve, reject) => {\n          const script = document.createElement('script');\n          script.src = 'https://apis.google.com/js/api.js';\n          script.onload = resolve;\n          script.onerror = reject;\n          document.body.appendChild(script);\n        });\n      } catch (error) {\n        console.error('Google API 스크립트 로드 실패:', error);\n      }\n    };\n    loadGoogleApiScript();\n  }, []);\n  {/*  구글 로그인 처리 함수 */}\n  const handleGoogleLogin = async () => {\n    try {\n      if (!gapi.auth2) {\n        // 구글 API 스크립트 로드를 기다리기 위해 promise를 사용\n        await new Promise(resolve => {\n          gapi.load('auth2', resolve);\n        });\n      }\n\n      // 'gapi.auth2'가 초기화되지 않았다면 초기화\n      if (!gapi.auth2.getAuthInstance()) {\n        gapi.auth2.init({\n          client_id: config.googleClientId,\n          cookie_policy: 'single_host_origin',\n          scope: 'profile email'\n        });\n      }\n      const auth2 = gapi.auth2.getAuthInstance();\n      const googleUser = await auth2.signIn();\n      const googleAccessToken = googleUser.getAuthResponse().access_token;\n      console.log('Google Access Token:', googleAccessToken);\n      const googleLoginData = await googleUserInfo(googleAccessToken);\n\n      // 스프링 백엔드와 통신하여 처리\n      const res = await googleSocialLogin(googleLoginData); // 스프링 백엔드의 구글 로그인 API 엔드포인트로 대체\n      console.log('Google 로그인 결과:', res);\n      if (res === 1) {\n        document.cookie = serialize('userId', googleLoginData.id, {\n          path: '/'\n        });\n        document.cookie = serialize('userId', googleLoginData.email, {\n          path: '/'\n        });\n        document.cookie = serialize('userName', googleLoginData.name, {\n          path: '/'\n        });\n        document.cookie = serialize('userImage', googleLoginData.picture, {\n          path: '/'\n        });\n        setLoginAlert( /*#__PURE__*/_jsxDEV(Alert, {\n          severity: \"success\",\n          onClose: () => setLoginAlert(null),\n          children: [/*#__PURE__*/_jsxDEV(AlertTitle, {\n            children: \"\\uB85C\\uADF8\\uC778 \\uC131\\uACF5!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"\\uBA54\\uC778\\uD398\\uC774\\uC9C0\\uB85C \\uC774\\uB3D9\\uD569\\uB2C8\\uB2E4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 9\n        }, this));\n        setTimeout(() => {\n          navigate('/main');\n        }, 2000);\n      } else {\n        console.log('Google 로그인 실패');\n        setLoginAlert( /*#__PURE__*/_jsxDEV(Alert, {\n          severity: \"warning\",\n          onClose: () => setLoginAlert(null),\n          children: [/*#__PURE__*/_jsxDEV(AlertTitle, {\n            children: \"\\uB85C\\uADF8\\uC778 \\uC2E4\\uD328\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"\\uC785\\uB825 \\uC815\\uBCF4\\uB97C \\uB2E4\\uC2DC \\uD655\\uC778\\uD574\\uC8FC\\uC138\\uC694\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 9\n        }, this));\n      }\n    } catch (error) {\n      setLoginAlert( /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"error\",\n        onClose: () => setLoginAlert(null),\n        children: /*#__PURE__*/_jsxDEV(AlertTitle, {\n          children: \"\\uC5D0\\uB7EC \\uBC1C\\uC0DD\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 7\n      }, this));\n      console.error('Google 로그인 에러:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/images/logo/googlebtn2.png\",\n        alt: \"\\uAD6C\\uAE00 \\uB85C\\uADF8\\uC778\",\n        style: {\n          width: '220px',\n          height: '50px',\n          cursor: 'pointer'\n        },\n        onClick: handleGoogleLogin\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this), loginAlert]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n_s(GoogleLogin, \"0pNeyzXk/ByIxyERsdaIrG6js9s=\", false, function () {\n  return [useNavigate];\n});\n_c = GoogleLogin;\nexport default GoogleLogin;\nvar _c;\n$RefreshReg$(_c, \"GoogleLogin\");","map":{"version":3,"names":["React","useEffect","useState","gapi","googleSocialLogin","googleUserInfo","config","serialize","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","GoogleLogin","_s","navigate","loadGoogleApiScript","Promise","resolve","reject","script","document","createElement","src","onload","onerror","body","appendChild","error","console","handleGoogleLogin","auth2","load","getAuthInstance","init","client_id","googleClientId","cookie_policy","scope","googleUser","signIn","googleAccessToken","getAuthResponse","access_token","log","googleLoginData","res","cookie","id","path","email","name","picture","setLoginAlert","Alert","severity","onClose","children","AlertTitle","fileName","_jsxFileName","lineNumber","columnNumber","setTimeout","style","textAlign","alt","width","height","cursor","onClick","loginAlert","_c","$RefreshReg$"],"sources":["C:/Users/carax/Desktop/사이드 프로젝트/SFDB-Project/front/src/pages/user/GoogleLogin.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { gapi } from 'gapi-script';\r\nimport { googleSocialLogin, googleUserInfo } from '../../axios/user/loginLogic';\r\nimport config from '../../config';\r\nimport { serialize } from 'cookie';\r\nimport { useNavigate } from 'react-router';\r\n\r\n\r\nconst GoogleLogin = () => {\r\n  const navigate = useNavigate()\r\n\r\n\r\n{/* 구글 sdk */}\r\nuseEffect(() => {\r\n  const loadGoogleApiScript = async () => {\r\n    try {\r\n      await new Promise((resolve, reject) => {\r\n        const script = document.createElement('script');\r\n        script.src = 'https://apis.google.com/js/api.js';\r\n\r\n        script.onload = resolve;\r\n        script.onerror = reject;\r\n\r\n        document.body.appendChild(script);\r\n      });\r\n    } catch (error) {\r\n      console.error('Google API 스크립트 로드 실패:', error);\r\n    }\r\n  };\r\n\r\n  loadGoogleApiScript();\r\n}, []);\r\n\r\n\r\n\r\n {/*  구글 로그인 처리 함수 */}\r\n const handleGoogleLogin = async () => {\r\n  try {\r\n    if (!gapi.auth2) {\r\n      // 구글 API 스크립트 로드를 기다리기 위해 promise를 사용\r\n      await new Promise((resolve) => {\r\n        gapi.load('auth2', resolve);\r\n      });\r\n    }\r\n\r\n    // 'gapi.auth2'가 초기화되지 않았다면 초기화\r\n    if (!gapi.auth2.getAuthInstance()) {\r\n      gapi.auth2.init({\r\n        client_id: config.googleClientId,\r\n        cookie_policy: 'single_host_origin',\r\n        scope : 'profile email'\r\n      });\r\n    }\r\n\r\n    const auth2 = gapi.auth2.getAuthInstance();\r\n    const googleUser = await auth2.signIn();\r\n    const googleAccessToken = googleUser.getAuthResponse().access_token;\r\n    console.log('Google Access Token:', googleAccessToken);\r\n    const googleLoginData = await googleUserInfo(googleAccessToken)\r\n\r\n\r\n    // 스프링 백엔드와 통신하여 처리\r\n    const res = await googleSocialLogin(googleLoginData); // 스프링 백엔드의 구글 로그인 API 엔드포인트로 대체\r\n    console.log('Google 로그인 결과:', res);\r\n\r\n    if (res === 1) {\r\n      document.cookie = serialize('userId', googleLoginData.id, { path: '/' }); \r\n      document.cookie = serialize('userId', googleLoginData.email, { path: '/' }); \r\n      document.cookie = serialize('userName', googleLoginData.name, { path: '/' }); \r\n      document.cookie = serialize('userImage', googleLoginData.picture, { path: '/' }); \r\n\r\n      setLoginAlert(\r\n        <Alert severity=\"success\" onClose={() => setLoginAlert(null)}>\r\n          <AlertTitle>로그인 성공!</AlertTitle>\r\n          <strong>메인페이지로 이동합니다</strong>\r\n        </Alert>\r\n      );\r\n      setTimeout(() => {\r\n        navigate('/main');\r\n      }, 2000)\r\n      \r\n\r\n    } else {\r\n      console.log('Google 로그인 실패');\r\n      setLoginAlert(\r\n        <Alert severity=\"warning\" onClose={() => setLoginAlert(null)}>\r\n          <AlertTitle>로그인 실패</AlertTitle>\r\n          <strong>입력 정보를 다시 확인해주세요</strong>\r\n        </Alert>\r\n      );\r\n    }\r\n  } catch (error) {\r\n    setLoginAlert(\r\n      <Alert severity=\"error\" onClose={() => setLoginAlert(null)}>\r\n        <AlertTitle>에러 발생</AlertTitle>\r\n      </Alert>\r\n    );\r\n    console.error('Google 로그인 에러:', error);\r\n  }\r\n};\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n        <div style={{ textAlign: 'center' }}>\r\n          <img\r\n          src=\"/images/logo/googlebtn2.png\"\r\n          alt=\"구글 로그인\"\r\n          style={{ width: '220px', height: '50px', cursor: 'pointer' }}\r\n          onClick={handleGoogleLogin}\r\n        />\r\n        {loginAlert}\r\n            </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default GoogleLogin"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,IAAI,QAAQ,aAAa;AAClC,SAASC,iBAAiB,EAAEC,cAAc,QAAQ,6BAA6B;AAC/E,OAAOC,MAAM,MAAM,cAAc;AACjC,SAASC,SAAS,QAAQ,QAAQ;AAClC,SAASC,WAAW,QAAQ,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAG3C,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAMC,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAGhC,CAAC;EACDP,SAAS,CAAC,MAAM;IACd,MAAMe,mBAAmB,GAAG,MAAAA,CAAA,KAAY;MACtC,IAAI;QACF,MAAM,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;UACrC,MAAMC,MAAM,GAAGC,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC;UAC/CF,MAAM,CAACG,GAAG,GAAG,mCAAmC;UAEhDH,MAAM,CAACI,MAAM,GAAGN,OAAO;UACvBE,MAAM,CAACK,OAAO,GAAGN,MAAM;UAEvBE,QAAQ,CAACK,IAAI,CAACC,WAAW,CAACP,MAAM,CAAC;QACnC,CAAC,CAAC;MACJ,CAAC,CAAC,OAAOQ,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAChD;IACF,CAAC;IAEDZ,mBAAmB,CAAC,CAAC;EACvB,CAAC,EAAE,EAAE,CAAC;EAIL,CAAC;EACD,MAAMc,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IACrC,IAAI;MACF,IAAI,CAAC3B,IAAI,CAAC4B,KAAK,EAAE;QACf;QACA,MAAM,IAAId,OAAO,CAAEC,OAAO,IAAK;UAC7Bf,IAAI,CAAC6B,IAAI,CAAC,OAAO,EAAEd,OAAO,CAAC;QAC7B,CAAC,CAAC;MACJ;;MAEA;MACA,IAAI,CAACf,IAAI,CAAC4B,KAAK,CAACE,eAAe,CAAC,CAAC,EAAE;QACjC9B,IAAI,CAAC4B,KAAK,CAACG,IAAI,CAAC;UACdC,SAAS,EAAE7B,MAAM,CAAC8B,cAAc;UAChCC,aAAa,EAAE,oBAAoB;UACnCC,KAAK,EAAG;QACV,CAAC,CAAC;MACJ;MAEA,MAAMP,KAAK,GAAG5B,IAAI,CAAC4B,KAAK,CAACE,eAAe,CAAC,CAAC;MAC1C,MAAMM,UAAU,GAAG,MAAMR,KAAK,CAACS,MAAM,CAAC,CAAC;MACvC,MAAMC,iBAAiB,GAAGF,UAAU,CAACG,eAAe,CAAC,CAAC,CAACC,YAAY;MACnEd,OAAO,CAACe,GAAG,CAAC,sBAAsB,EAAEH,iBAAiB,CAAC;MACtD,MAAMI,eAAe,GAAG,MAAMxC,cAAc,CAACoC,iBAAiB,CAAC;;MAG/D;MACA,MAAMK,GAAG,GAAG,MAAM1C,iBAAiB,CAACyC,eAAe,CAAC,CAAC,CAAC;MACtDhB,OAAO,CAACe,GAAG,CAAC,gBAAgB,EAAEE,GAAG,CAAC;MAElC,IAAIA,GAAG,KAAK,CAAC,EAAE;QACbzB,QAAQ,CAAC0B,MAAM,GAAGxC,SAAS,CAAC,QAAQ,EAAEsC,eAAe,CAACG,EAAE,EAAE;UAAEC,IAAI,EAAE;QAAI,CAAC,CAAC;QACxE5B,QAAQ,CAAC0B,MAAM,GAAGxC,SAAS,CAAC,QAAQ,EAAEsC,eAAe,CAACK,KAAK,EAAE;UAAED,IAAI,EAAE;QAAI,CAAC,CAAC;QAC3E5B,QAAQ,CAAC0B,MAAM,GAAGxC,SAAS,CAAC,UAAU,EAAEsC,eAAe,CAACM,IAAI,EAAE;UAAEF,IAAI,EAAE;QAAI,CAAC,CAAC;QAC5E5B,QAAQ,CAAC0B,MAAM,GAAGxC,SAAS,CAAC,WAAW,EAAEsC,eAAe,CAACO,OAAO,EAAE;UAAEH,IAAI,EAAE;QAAI,CAAC,CAAC;QAEhFI,aAAa,eACX3C,OAAA,CAAC4C,KAAK;UAACC,QAAQ,EAAC,SAAS;UAACC,OAAO,EAAEA,CAAA,KAAMH,aAAa,CAAC,IAAI,CAAE;UAAAI,QAAA,gBAC3D/C,OAAA,CAACgD,UAAU;YAAAD,QAAA,EAAC;UAAO;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CAAC,eAChCpD,OAAA;YAAA+C,QAAA,EAAQ;UAAY;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxB,CACT,CAAC;QACDC,UAAU,CAAC,MAAM;UACfhD,QAAQ,CAAC,OAAO,CAAC;QACnB,CAAC,EAAE,IAAI,CAAC;MAGV,CAAC,MAAM;QACLc,OAAO,CAACe,GAAG,CAAC,eAAe,CAAC;QAC5BS,aAAa,eACX3C,OAAA,CAAC4C,KAAK;UAACC,QAAQ,EAAC,SAAS;UAACC,OAAO,EAAEA,CAAA,KAAMH,aAAa,CAAC,IAAI,CAAE;UAAAI,QAAA,gBAC3D/C,OAAA,CAACgD,UAAU;YAAAD,QAAA,EAAC;UAAM;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CAAC,eAC/BpD,OAAA;YAAA+C,QAAA,EAAQ;UAAgB;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5B,CACT,CAAC;MACH;IACF,CAAC,CAAC,OAAOlC,KAAK,EAAE;MACdyB,aAAa,eACX3C,OAAA,CAAC4C,KAAK;QAACC,QAAQ,EAAC,OAAO;QAACC,OAAO,EAAEA,CAAA,KAAMH,aAAa,CAAC,IAAI,CAAE;QAAAI,QAAA,eACzD/C,OAAA,CAACgD,UAAU;UAAAD,QAAA,EAAC;QAAK;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzB,CACT,CAAC;MACDjC,OAAO,CAACD,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAAC;IACxC;EACF,CAAC;EAIC,oBACElB,OAAA,CAAAE,SAAA;IAAA6C,QAAA,eACI/C,OAAA;MAAKsD,KAAK,EAAE;QAAEC,SAAS,EAAE;MAAS,CAAE;MAAAR,QAAA,gBAClC/C,OAAA;QACAa,GAAG,EAAC,6BAA6B;QACjC2C,GAAG,EAAC,iCAAQ;QACZF,KAAK,EAAE;UAAEG,KAAK,EAAE,OAAO;UAAEC,MAAM,EAAE,MAAM;UAAEC,MAAM,EAAE;QAAU,CAAE;QAC7DC,OAAO,EAAExC;MAAkB;QAAA6B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5B,CAAC,EACDS,UAAU;IAAA;MAAAZ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF;EAAC,gBACZ,CAAC;AAEP,CAAC;AAAAhD,EAAA,CA5GKD,WAAW;EAAA,QACEL,WAAW;AAAA;AAAAgE,EAAA,GADxB3D,WAAW;AA8GjB,eAAeA,WAAW;AAAA,IAAA2D,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}