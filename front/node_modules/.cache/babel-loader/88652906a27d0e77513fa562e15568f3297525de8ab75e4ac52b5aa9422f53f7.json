{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\carax\\\\Desktop\\\\\\uC0AC\\uC774\\uB4DC \\uD504\\uB85C\\uC81D\\uD2B8\\\\SFDB-Project\\\\front\\\\src\\\\pages\\\\detail\\\\MovieDetailBtmSection2.jsx\",\n  _s = $RefreshSig$();\nimport { Typography } from '@mui/material';\nimport React, { useEffect, useState } from 'react';\nimport { YouTubeStandaloneIOS, YouTubeStandaloneAndroid } from 'react-native-youtube';\nimport { getYouTubeVideoByQuery } from './youtubeApi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MovieDetailBtmSection2 = ({\n  movieDetail\n}) => {\n  _s();\n  const [videoUrl, setVideoUrl] = useState('');\n  const videoId = null;\n  useEffect(() => {\n    const getVideoUrl = async () => {\n      const API_KEY = 'AIzaSyC2pRmeDsy_q0pjRI7LOneIXjSQHE_UMbA';\n      const response = await axios.get(`https://www.googleapis.com/youtube/v3/videos`, {\n        params: {\n          key: API_KEY,\n          part: 'player',\n          id: videoId\n        }\n      });\n      if (response.data.items.length > 0) {\n        const videoInfo = response.data.items[0];\n        const videoUrl = videoInfo.player.embedHtml;\n        setVideoUrl(videoUrl);\n      }\n    };\n    getVideoUrl();\n  }, [videoId]);\n  {/* Style */}\n  const btmSection2Style = {\n    marginLeft: '100px',\n    marginTop: '30px',\n    maxWidth: '1500px',\n    minHeight: '400px',\n    maxHeight: '500px'\n  };\n  const videoStyle = {\n    marginTop: '30px',\n    width: '300px',\n    minWidth: '300px',\n    maxWidth: '300px',\n    height: '300px',\n    minHeight: '300px',\n    maxHeight: '400px'\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: btmSection2Style,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          alignItems: 'center'\n        },\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          style: {\n            fontSize: '25px'\n          },\n          children: \"\\uB3D9\\uC601\\uC0C1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: videoStyle,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          dangerouslySetInnerHTML: {\n            __html: videoUrl\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 4\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 4\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n};\n_s(MovieDetailBtmSection2, \"Bjww8BeuqgZu/NOoNH/mXIXVmgk=\");\n_c = MovieDetailBtmSection2;\nexport default MovieDetailBtmSection2;\nvar _c;\n$RefreshReg$(_c, \"MovieDetailBtmSection2\");","map":{"version":3,"names":["Typography","React","useEffect","useState","YouTubeStandaloneIOS","YouTubeStandaloneAndroid","getYouTubeVideoByQuery","jsxDEV","_jsxDEV","Fragment","_Fragment","MovieDetailBtmSection2","movieDetail","_s","videoUrl","setVideoUrl","videoId","getVideoUrl","API_KEY","response","axios","get","params","key","part","id","data","items","length","videoInfo","player","embedHtml","btmSection2Style","marginLeft","marginTop","maxWidth","minHeight","maxHeight","videoStyle","width","minWidth","height","children","style","display","alignItems","variant","fontSize","fileName","_jsxFileName","lineNumber","columnNumber","dangerouslySetInnerHTML","__html","_c","$RefreshReg$"],"sources":["C:/Users/carax/Desktop/사이드 프로젝트/SFDB-Project/front/src/pages/detail/MovieDetailBtmSection2.jsx"],"sourcesContent":["import { Typography } from '@mui/material'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { YouTubeStandaloneIOS, YouTubeStandaloneAndroid } from 'react-native-youtube';\r\nimport { getYouTubeVideoByQuery } from './youtubeApi'; \r\n\r\nconst MovieDetailBtmSection2 = ({ movieDetail }) => {\r\n  const [videoUrl, setVideoUrl] = useState('');\r\n  const videoId = null;\r\n\r\n  useEffect(() => {\r\n    const getVideoUrl = async () => {\r\n      const API_KEY = 'AIzaSyC2pRmeDsy_q0pjRI7LOneIXjSQHE_UMbA';\r\n      const response = await axios.get(`https://www.googleapis.com/youtube/v3/videos`, {\r\n        params: {\r\n          key: API_KEY,\r\n          part: 'player',\r\n          id: videoId,\r\n        },\r\n      });\r\n\r\n      if (response.data.items.length > 0) {\r\n        const videoInfo = response.data.items[0];\r\n        const videoUrl = videoInfo.player.embedHtml;\r\n        setVideoUrl(videoUrl);\r\n      }\r\n    };\r\n\r\n    getVideoUrl();\r\n  }, [videoId]);\r\n\r\n\r\n  {/* Style */}\r\n  const btmSection2Style = {\r\n    marginLeft: '100px',\r\n    marginTop: '30px',\r\n    maxWidth: '1500px',\r\n    minHeight: '400px',\r\n    maxHeight: '500px',\r\n  } \r\n\r\n  const videoStyle = {\r\n    marginTop: '30px',\r\n    width: '300px',\r\n    minWidth: '300px',\r\n    maxWidth: '300px',\r\n    height: '300px',\r\n    minHeight: '300px',\r\n    maxHeight: '400px'\r\n\r\n  }\r\n  return (\r\n    <>\r\n    <div style={btmSection2Style}>\r\n    <div style={{ display: 'flex', alignItems: 'center' }}>\r\n        <Typography variant=\"h4\" style={{ fontSize: '25px' }}>\r\n          동영상 \r\n        </Typography>\r\n        </div>\r\n    \r\n   <div style={videoStyle}>\r\n   <div dangerouslySetInnerHTML={{ __html: videoUrl }} />\r\n   </div>\r\n\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default MovieDetailBtmSection2"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}