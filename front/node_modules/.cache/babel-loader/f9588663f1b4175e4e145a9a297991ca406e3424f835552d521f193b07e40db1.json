{"ast":null,"code":"import { getPickersLocalization } from './utils/getPickersLocalization';\nvar timeViews = {\n  hours: 'godzin',\n  minutes: 'minut',\n  seconds: 'sekund',\n  meridiem: 'popołudnie'\n};\nvar plPLPickers = {\n  // Calendar navigation\n  previousMonth: 'Poprzedni miesiąc',\n  nextMonth: 'Następny miesiąc',\n  // View navigation\n  openPreviousView: 'otwórz poprzedni widok',\n  openNextView: 'otwórz następny widok',\n  calendarViewSwitchingButtonAriaLabel: function calendarViewSwitchingButtonAriaLabel(view) {\n    return view === 'year' ? 'otwarty jest widok roku, przełącz na widok kalendarza' : 'otwarty jest widok kalendarza, przełącz na widok roku';\n  },\n  // DateRange placeholders\n  start: 'Początek',\n  end: 'Koniec',\n  // Action bar\n  cancelButtonLabel: 'Anuluj',\n  clearButtonLabel: 'Wyczyść',\n  okButtonLabel: 'Zatwierdź',\n  todayButtonLabel: 'Dzisiaj',\n  // Toolbar titles\n  datePickerToolbarTitle: 'Wybierz datę',\n  dateTimePickerToolbarTitle: 'Wybierz datę i czas',\n  timePickerToolbarTitle: 'Wybierz czas',\n  dateRangePickerToolbarTitle: 'Wybierz zakres dat',\n  // Clock labels\n  clockLabelText: function clockLabelText(view, time, adapter) {\n    return \"Wybierz \".concat(timeViews[view], \". \").concat(time === null ? 'Nie wybrano czasu' : \"Wybrany czas to \".concat(adapter.format(time, 'fullTime')));\n  },\n  hoursClockNumberText: function hoursClockNumberText(hours) {\n    return \"\".concat(hours, \" godzin\");\n  },\n  minutesClockNumberText: function minutesClockNumberText(minutes) {\n    return \"\".concat(minutes, \" minut\");\n  },\n  secondsClockNumberText: function secondsClockNumberText(seconds) {\n    return \"\".concat(seconds, \" sekund\");\n  },\n  // Digital clock labels\n  selectViewText: function selectViewText(view) {\n    return \"Wybierz \".concat(timeViews[view]);\n  },\n  // Calendar labels\n  calendarWeekNumberHeaderLabel: 'Numer tygodnia',\n  calendarWeekNumberHeaderText: '#',\n  calendarWeekNumberAriaLabelText: function calendarWeekNumberAriaLabelText(weekNumber) {\n    return \"Tydzie\\u0144 \".concat(weekNumber);\n  },\n  calendarWeekNumberText: function calendarWeekNumberText(weekNumber) {\n    return \"\".concat(weekNumber);\n  },\n  // Open picker labels\n  openDatePickerDialogue: function openDatePickerDialogue(value, utils) {\n    return value != null && utils.isValid(value) ? \"Wybierz dat\\u0119, obecnie wybrana data to \".concat(utils.format(value, 'fullDate')) : 'Wybierz datę';\n  },\n  openTimePickerDialogue: function openTimePickerDialogue(value, utils) {\n    return value !== null && utils.isValid(value) ? \"Wybierz czas, obecnie wybrany czas to \".concat(utils.format(value, 'fullTime')) : 'Wybierz czas';\n  },\n  // Table labels\n  timeTableLabel: 'wybierz czas',\n  dateTableLabel: 'wybierz datę'\n\n  // Field section placeholders\n  // fieldYearPlaceholder: params => 'Y'.repeat(params.digitAmount),\n  // fieldMonthPlaceholder: params => params.contentType === 'letter' ? 'MMMM' : 'MM',\n  // fieldDayPlaceholder: () => 'DD',\n  // fieldWeekDayPlaceholder: params => params.contentType === 'letter' ? 'EEEE' : 'EE',\n  // fieldHoursPlaceholder: () => 'hh',\n  // fieldMinutesPlaceholder: () => 'mm',\n  // fieldSecondsPlaceholder: () => 'ss',\n  // fieldMeridiemPlaceholder: () => 'aa',\n};\n\nexport var plPL = getPickersLocalization(plPLPickers);","map":{"version":3,"names":["getPickersLocalization","timeViews","hours","minutes","seconds","meridiem","plPLPickers","previousMonth","nextMonth","openPreviousView","openNextView","calendarViewSwitchingButtonAriaLabel","view","start","end","cancelButtonLabel","clearButtonLabel","okButtonLabel","todayButtonLabel","datePickerToolbarTitle","dateTimePickerToolbarTitle","timePickerToolbarTitle","dateRangePickerToolbarTitle","clockLabelText","time","adapter","concat","format","hoursClockNumberText","minutesClockNumberText","secondsClockNumberText","selectViewText","calendarWeekNumberHeaderLabel","calendarWeekNumberHeaderText","calendarWeekNumberAriaLabelText","weekNumber","calendarWeekNumberText","openDatePickerDialogue","value","utils","isValid","openTimePickerDialogue","timeTableLabel","dateTableLabel","plPL"],"sources":["C:/Users/carax/Desktop/SideProject/reactfront/front/node_modules/@mui/x-date-pickers/locales/plPL.js"],"sourcesContent":["import { getPickersLocalization } from './utils/getPickersLocalization';\nconst timeViews = {\n  hours: 'godzin',\n  minutes: 'minut',\n  seconds: 'sekund',\n  meridiem: 'popołudnie'\n};\nconst plPLPickers = {\n  // Calendar navigation\n  previousMonth: 'Poprzedni miesiąc',\n  nextMonth: 'Następny miesiąc',\n  // View navigation\n  openPreviousView: 'otwórz poprzedni widok',\n  openNextView: 'otwórz następny widok',\n  calendarViewSwitchingButtonAriaLabel: view => view === 'year' ? 'otwarty jest widok roku, przełącz na widok kalendarza' : 'otwarty jest widok kalendarza, przełącz na widok roku',\n  // DateRange placeholders\n  start: 'Początek',\n  end: 'Koniec',\n  // Action bar\n  cancelButtonLabel: 'Anuluj',\n  clearButtonLabel: 'Wyczyść',\n  okButtonLabel: 'Zatwierdź',\n  todayButtonLabel: 'Dzisiaj',\n  // Toolbar titles\n  datePickerToolbarTitle: 'Wybierz datę',\n  dateTimePickerToolbarTitle: 'Wybierz datę i czas',\n  timePickerToolbarTitle: 'Wybierz czas',\n  dateRangePickerToolbarTitle: 'Wybierz zakres dat',\n  // Clock labels\n  clockLabelText: (view, time, adapter) => `Wybierz ${timeViews[view]}. ${time === null ? 'Nie wybrano czasu' : `Wybrany czas to ${adapter.format(time, 'fullTime')}`}`,\n  hoursClockNumberText: hours => `${hours} godzin`,\n  minutesClockNumberText: minutes => `${minutes} minut`,\n  secondsClockNumberText: seconds => `${seconds} sekund`,\n  // Digital clock labels\n  selectViewText: view => `Wybierz ${timeViews[view]}`,\n  // Calendar labels\n  calendarWeekNumberHeaderLabel: 'Numer tygodnia',\n  calendarWeekNumberHeaderText: '#',\n  calendarWeekNumberAriaLabelText: weekNumber => `Tydzień ${weekNumber}`,\n  calendarWeekNumberText: weekNumber => `${weekNumber}`,\n  // Open picker labels\n  openDatePickerDialogue: (value, utils) => value != null && utils.isValid(value) ? `Wybierz datę, obecnie wybrana data to ${utils.format(value, 'fullDate')}` : 'Wybierz datę',\n  openTimePickerDialogue: (value, utils) => value !== null && utils.isValid(value) ? `Wybierz czas, obecnie wybrany czas to ${utils.format(value, 'fullTime')}` : 'Wybierz czas',\n  // Table labels\n  timeTableLabel: 'wybierz czas',\n  dateTableLabel: 'wybierz datę'\n\n  // Field section placeholders\n  // fieldYearPlaceholder: params => 'Y'.repeat(params.digitAmount),\n  // fieldMonthPlaceholder: params => params.contentType === 'letter' ? 'MMMM' : 'MM',\n  // fieldDayPlaceholder: () => 'DD',\n  // fieldWeekDayPlaceholder: params => params.contentType === 'letter' ? 'EEEE' : 'EE',\n  // fieldHoursPlaceholder: () => 'hh',\n  // fieldMinutesPlaceholder: () => 'mm',\n  // fieldSecondsPlaceholder: () => 'ss',\n  // fieldMeridiemPlaceholder: () => 'aa',\n};\n\nexport const plPL = getPickersLocalization(plPLPickers);"],"mappings":"AAAA,SAASA,sBAAsB,QAAQ,gCAAgC;AACvE,IAAMC,SAAS,GAAG;EAChBC,KAAK,EAAE,QAAQ;EACfC,OAAO,EAAE,OAAO;EAChBC,OAAO,EAAE,QAAQ;EACjBC,QAAQ,EAAE;AACZ,CAAC;AACD,IAAMC,WAAW,GAAG;EAClB;EACAC,aAAa,EAAE,mBAAmB;EAClCC,SAAS,EAAE,kBAAkB;EAC7B;EACAC,gBAAgB,EAAE,wBAAwB;EAC1CC,YAAY,EAAE,uBAAuB;EACrCC,oCAAoC,EAAE,SAAAA,qCAAAC,IAAI;IAAA,OAAIA,IAAI,KAAK,MAAM,GAAG,uDAAuD,GAAG,uDAAuD;EAAA;EACjL;EACAC,KAAK,EAAE,UAAU;EACjBC,GAAG,EAAE,QAAQ;EACb;EACAC,iBAAiB,EAAE,QAAQ;EAC3BC,gBAAgB,EAAE,SAAS;EAC3BC,aAAa,EAAE,WAAW;EAC1BC,gBAAgB,EAAE,SAAS;EAC3B;EACAC,sBAAsB,EAAE,cAAc;EACtCC,0BAA0B,EAAE,qBAAqB;EACjDC,sBAAsB,EAAE,cAAc;EACtCC,2BAA2B,EAAE,oBAAoB;EACjD;EACAC,cAAc,EAAE,SAAAA,eAACX,IAAI,EAAEY,IAAI,EAAEC,OAAO;IAAA,kBAAAC,MAAA,CAAgBzB,SAAS,CAACW,IAAI,CAAC,QAAAc,MAAA,CAAKF,IAAI,KAAK,IAAI,GAAG,mBAAmB,sBAAAE,MAAA,CAAsBD,OAAO,CAACE,MAAM,CAACH,IAAI,EAAE,UAAU,CAAC,CAAE;EAAA,CAAE;EACrKI,oBAAoB,EAAE,SAAAA,qBAAA1B,KAAK;IAAA,UAAAwB,MAAA,CAAOxB,KAAK;EAAA,CAAS;EAChD2B,sBAAsB,EAAE,SAAAA,uBAAA1B,OAAO;IAAA,UAAAuB,MAAA,CAAOvB,OAAO;EAAA,CAAQ;EACrD2B,sBAAsB,EAAE,SAAAA,uBAAA1B,OAAO;IAAA,UAAAsB,MAAA,CAAOtB,OAAO;EAAA,CAAS;EACtD;EACA2B,cAAc,EAAE,SAAAA,eAAAnB,IAAI;IAAA,kBAAAc,MAAA,CAAezB,SAAS,CAACW,IAAI,CAAC;EAAA,CAAE;EACpD;EACAoB,6BAA6B,EAAE,gBAAgB;EAC/CC,4BAA4B,EAAE,GAAG;EACjCC,+BAA+B,EAAE,SAAAA,gCAAAC,UAAU;IAAA,uBAAAT,MAAA,CAAeS,UAAU;EAAA,CAAE;EACtEC,sBAAsB,EAAE,SAAAA,uBAAAD,UAAU;IAAA,UAAAT,MAAA,CAAOS,UAAU;EAAA,CAAE;EACrD;EACAE,sBAAsB,EAAE,SAAAA,uBAACC,KAAK,EAAEC,KAAK;IAAA,OAAKD,KAAK,IAAI,IAAI,IAAIC,KAAK,CAACC,OAAO,CAACF,KAAK,CAAC,iDAAAZ,MAAA,CAA4Ca,KAAK,CAACZ,MAAM,CAACW,KAAK,EAAE,UAAU,CAAC,IAAK,cAAc;EAAA;EAC7KG,sBAAsB,EAAE,SAAAA,uBAACH,KAAK,EAAEC,KAAK;IAAA,OAAKD,KAAK,KAAK,IAAI,IAAIC,KAAK,CAACC,OAAO,CAACF,KAAK,CAAC,4CAAAZ,MAAA,CAA4Ca,KAAK,CAACZ,MAAM,CAACW,KAAK,EAAE,UAAU,CAAC,IAAK,cAAc;EAAA;EAC9K;EACAI,cAAc,EAAE,cAAc;EAC9BC,cAAc,EAAE;;EAEhB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACF,CAAC;;AAED,OAAO,IAAMC,IAAI,GAAG5C,sBAAsB,CAACM,WAAW,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}