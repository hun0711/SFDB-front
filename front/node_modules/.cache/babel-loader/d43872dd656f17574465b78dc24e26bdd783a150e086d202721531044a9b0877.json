{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\carax\\\\Desktop\\\\\\uC0AC\\uC774\\uB4DC \\uD504\\uB85C\\uC81D\\uD2B8\\\\SFDB-Project\\\\front\\\\src\\\\pages\\\\user\\\\NaverLogin.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport config from \"../../config\";\nimport { naverLoginGet, naverSocialLogin } from \"../../axios/user/loginLogic\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NaverLogin = () => {\n  _s();\n  const [loginAlert, setLoginAlert] = useState(null);\n  const initializeNaverLogin = () => {\n    const naverLogin = new window.naver.LoginWithNaverId({\n      clientId: config.naverClientId,\n      callbackUrl: config.naverRedirectUri,\n      clientSecret: config.naverClientSecret,\n      isPopup: false,\n      loginButton: {\n        color: 'green',\n        type: 3,\n        height: '50'\n      }\n    });\n    console.log(naverLogin);\n\n    // 로그인 성공 시\n    naverLogin.getLoginStatus(async status => {\n      if (status) {\n        /* const userData = naverLogin.user;\r\n        console.log(userData); */\n\n        // access_token 값을 추출합니다.\n        const url = window.location.href;\n        const accessToken = new URL(url).hash.split(\"=\")[1];\n\n        // 서버로 네이버 로그인 데이터와 access_token을 전송합니다.\n        const res = await naverLoginGet(accessToken);\n        console.log('Naver 로그인 결과 : ', res);\n\n        /*    if(res === 1){\r\n             console.log(res);\r\n           }else{\r\n             console.log('Naver 로그인 실패');\r\n           } */\n      }\n    });\n\n    naverLogin.init();\n  };\n  useEffect(() => {\n    // 네이버 SDK 스크립트 로드\n    const script = document.createElement(\"script\");\n    script.src = \"https://static.nid.naver.com/js/naveridlogin_js_sdk_2.0.2.js\";\n    script.charset = \"utf-8\";\n    script.onload = () => {\n      initializeNaverLogin();\n    };\n    document.body.appendChild(script);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"naverIdLogin\",\n    style: {\n      textAlign: 'center'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(NaverLogin, \"IAMG+CfdV3et90FHOUBrrtE8c1M=\");\n_c = NaverLogin;\nexport default NaverLogin;\nvar _c;\n$RefreshReg$(_c, \"NaverLogin\");","map":{"version":3,"names":["React","useEffect","useState","config","naverLoginGet","naverSocialLogin","jsxDEV","_jsxDEV","NaverLogin","_s","loginAlert","setLoginAlert","initializeNaverLogin","naverLogin","window","naver","LoginWithNaverId","clientId","naverClientId","callbackUrl","naverRedirectUri","clientSecret","naverClientSecret","isPopup","loginButton","color","type","height","console","log","getLoginStatus","status","url","location","href","accessToken","URL","hash","split","res","init","script","document","createElement","src","charset","onload","body","appendChild","id","style","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/carax/Desktop/사이드 프로젝트/SFDB-Project/front/src/pages/user/NaverLogin.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport config from \"../../config\";\r\nimport { naverLoginGet, naverSocialLogin } from \"../../axios/user/loginLogic\";\r\n\r\nconst NaverLogin = () => {\r\n  const [loginAlert, setLoginAlert] = useState(null);\r\n\r\n  const initializeNaverLogin = () => {\r\n    const naverLogin = new window.naver.LoginWithNaverId({\r\n      clientId: config.naverClientId,\r\n      callbackUrl: config.naverRedirectUri,\r\n      clientSecret: config.naverClientSecret,\r\n      isPopup: false,\r\n      loginButton:{color: 'green', type: 3, height: '50'}\r\n    });\r\n\r\n   console.log(naverLogin);\r\n\r\n       // 로그인 성공 시\r\n       naverLogin.getLoginStatus(async (status) => {\r\n        if (status) {\r\n          /* const userData = naverLogin.user;\r\n          console.log(userData); */\r\n\r\n          // access_token 값을 추출합니다.\r\n        const url = window.location.href;\r\n        const accessToken = new URL(url).hash.split(\"=\")[1];\r\n\r\n        // 서버로 네이버 로그인 데이터와 access_token을 전송합니다.\r\n        const res = await naverLoginGet(accessToken);\r\n\r\n          console.log('Naver 로그인 결과 : ' , res);\r\n\r\n       /*    if(res === 1){\r\n            console.log(res);\r\n          }else{\r\n            console.log('Naver 로그인 실패');\r\n          } */\r\n        }\r\n      });\r\n      naverLogin.init();\r\n    }\r\n\r\n  useEffect(() => {\r\n    // 네이버 SDK 스크립트 로드\r\n    const script = document.createElement(\"script\");\r\n    script.src = \"https://static.nid.naver.com/js/naveridlogin_js_sdk_2.0.2.js\";\r\n    script.charset = \"utf-8\";\r\n    script.onload = () => {\r\n      initializeNaverLogin();\r\n    };\r\n    document.body.appendChild(script);\r\n  }, []);\r\n\r\n  return (\r\n    <div id=\"naverIdLogin\" style={{ textAlign: 'center' }}>\r\n  </div>\r\n  );\r\n};\r\n\r\nexport default NaverLogin;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,cAAc;AACjC,SAASC,aAAa,EAAEC,gBAAgB,QAAQ,6BAA6B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9E,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAElD,MAAMU,oBAAoB,GAAGA,CAAA,KAAM;IACjC,MAAMC,UAAU,GAAG,IAAIC,MAAM,CAACC,KAAK,CAACC,gBAAgB,CAAC;MACnDC,QAAQ,EAAEd,MAAM,CAACe,aAAa;MAC9BC,WAAW,EAAEhB,MAAM,CAACiB,gBAAgB;MACpCC,YAAY,EAAElB,MAAM,CAACmB,iBAAiB;MACtCC,OAAO,EAAE,KAAK;MACdC,WAAW,EAAC;QAACC,KAAK,EAAE,OAAO;QAAEC,IAAI,EAAE,CAAC;QAAEC,MAAM,EAAE;MAAI;IACpD,CAAC,CAAC;IAEHC,OAAO,CAACC,GAAG,CAAChB,UAAU,CAAC;;IAEnB;IACAA,UAAU,CAACiB,cAAc,CAAC,MAAOC,MAAM,IAAK;MAC3C,IAAIA,MAAM,EAAE;QACV;AACV;;QAEU;QACF,MAAMC,GAAG,GAAGlB,MAAM,CAACmB,QAAQ,CAACC,IAAI;QAChC,MAAMC,WAAW,GAAG,IAAIC,GAAG,CAACJ,GAAG,CAAC,CAACK,IAAI,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;;QAEnD;QACA,MAAMC,GAAG,GAAG,MAAMnC,aAAa,CAAC+B,WAAW,CAAC;QAE1CP,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAGU,GAAG,CAAC;;QAEvC;AACP;AACA;AACA;AACA;MACQ;IACF,CAAC,CAAC;;IACF1B,UAAU,CAAC2B,IAAI,CAAC,CAAC;EACnB,CAAC;EAEHvC,SAAS,CAAC,MAAM;IACd;IACA,MAAMwC,MAAM,GAAGC,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC;IAC/CF,MAAM,CAACG,GAAG,GAAG,8DAA8D;IAC3EH,MAAM,CAACI,OAAO,GAAG,OAAO;IACxBJ,MAAM,CAACK,MAAM,GAAG,MAAM;MACpBlC,oBAAoB,CAAC,CAAC;IACxB,CAAC;IACD8B,QAAQ,CAACK,IAAI,CAACC,WAAW,CAACP,MAAM,CAAC;EACnC,CAAC,EAAE,EAAE,CAAC;EAEN,oBACElC,OAAA;IAAK0C,EAAE,EAAC,cAAc;IAACC,KAAK,EAAE;MAAEC,SAAS,EAAE;IAAS;EAAE;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnD,CAAC;AAER,CAAC;AAAC9C,EAAA,CAtDID,UAAU;AAAAgD,EAAA,GAAVhD,UAAU;AAwDhB,eAAeA,UAAU;AAAC,IAAAgD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}