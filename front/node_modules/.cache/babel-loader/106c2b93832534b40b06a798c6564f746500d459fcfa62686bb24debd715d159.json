{"ast":null,"code":"import { getPickersLocalization } from './utils/getPickersLocalization';\n// maps TimeView to its translation\nvar timeViews = {\n  hours: 'Ore',\n  minutes: 'Minute',\n  seconds: 'Secunde',\n  meridiem: 'Meridiane'\n};\nvar roROPickers = {\n  // Calendar navigation\n  previousMonth: 'Luna anterioară',\n  nextMonth: 'Luna următoare',\n  // View navigation\n  openPreviousView: 'Deschideți vizualizarea anterioară',\n  openNextView: 'Deschideți vizualizarea următoare',\n  calendarViewSwitchingButtonAriaLabel: function calendarViewSwitchingButtonAriaLabel(view) {\n    return view === 'year' ? 'Vizualizarea anuală este deschisă, comutați la vizualizarea calendarului' : 'Vizualizarea calendarului este deschisă, comutați la vizualizarea anuală';\n  },\n  // DateRange placeholders\n  start: 'Început',\n  end: 'Sfârșit',\n  // Action bar\n  cancelButtonLabel: 'Anulare',\n  clearButtonLabel: 'Ștergere',\n  okButtonLabel: 'OK',\n  todayButtonLabel: 'Astăzi',\n  // Toolbar titles\n  datePickerToolbarTitle: 'Selectați data',\n  dateTimePickerToolbarTitle: 'Selectați data și ora',\n  timePickerToolbarTitle: 'Selectați ora',\n  dateRangePickerToolbarTitle: 'Selectați intervalul de date',\n  // Clock labels\n  clockLabelText: function clockLabelText(view, time, adapter) {\n    var _timeViews$view;\n    return \"Selecta\\u021Bi \".concat((_timeViews$view = timeViews[view]) != null ? _timeViews$view : view, \". \").concat(time === null ? 'Nicio oră selectată' : \"Ora selectat\\u0103 este \".concat(adapter.format(time, 'fullTime')));\n  },\n  hoursClockNumberText: function hoursClockNumberText(hours) {\n    return \"\".concat(hours, \" \").concat(timeViews.hours);\n  },\n  minutesClockNumberText: function minutesClockNumberText(minutes) {\n    return \"\".concat(minutes, \" \").concat(timeViews.minutes);\n  },\n  secondsClockNumberText: function secondsClockNumberText(seconds) {\n    return \"\".concat(seconds, \"  \").concat(timeViews.seconds);\n  },\n  // Digital clock labels\n  selectViewText: function selectViewText(view) {\n    return \"Selecta\\u021Bi \".concat(timeViews[view]);\n  },\n  // Calendar labels\n  calendarWeekNumberHeaderLabel: 'Număr săptămână',\n  calendarWeekNumberHeaderText: '#',\n  calendarWeekNumberAriaLabelText: function calendarWeekNumberAriaLabelText(weekNumber) {\n    return \"S\\u0103pt\\u0103m\\xE2na \".concat(weekNumber);\n  },\n  calendarWeekNumberText: function calendarWeekNumberText(weekNumber) {\n    return \"\".concat(weekNumber);\n  },\n  // Open picker labels\n  openDatePickerDialogue: function openDatePickerDialogue(value, utils) {\n    return value !== null && utils.isValid(value) ? \"Selecta\\u021Bi data, data selectat\\u0103 este \".concat(utils.format(value, 'fullDate')) : 'Selectați data';\n  },\n  openTimePickerDialogue: function openTimePickerDialogue(value, utils) {\n    return value !== null && utils.isValid(value) ? \"Selecta\\u021Bi ora, ora selectat\\u0103 este \".concat(utils.format(value, 'fullTime')) : 'Selectați ora';\n  },\n  // Table labels\n  timeTableLabel: 'Selectați ora',\n  dateTableLabel: 'Selectați data',\n  // Field section placeholders\n  fieldYearPlaceholder: function fieldYearPlaceholder(params) {\n    return 'A'.repeat(params.digitAmount);\n  },\n  fieldMonthPlaceholder: function fieldMonthPlaceholder(params) {\n    return params.contentType === 'letter' ? 'LLLL' : 'LL';\n  },\n  fieldDayPlaceholder: function fieldDayPlaceholder() {\n    return 'ZZ';\n  },\n  // fieldWeekDayPlaceholder: params => params.contentType === 'letter' ? 'EEEE' : 'EE',\n  fieldHoursPlaceholder: function fieldHoursPlaceholder() {\n    return 'hh';\n  },\n  fieldMinutesPlaceholder: function fieldMinutesPlaceholder() {\n    return 'mm';\n  },\n  fieldSecondsPlaceholder: function fieldSecondsPlaceholder() {\n    return 'ss';\n  },\n  fieldMeridiemPlaceholder: function fieldMeridiemPlaceholder() {\n    return 'aa';\n  }\n};\nexport var roRO = getPickersLocalization(roROPickers);","map":{"version":3,"names":["getPickersLocalization","timeViews","hours","minutes","seconds","meridiem","roROPickers","previousMonth","nextMonth","openPreviousView","openNextView","calendarViewSwitchingButtonAriaLabel","view","start","end","cancelButtonLabel","clearButtonLabel","okButtonLabel","todayButtonLabel","datePickerToolbarTitle","dateTimePickerToolbarTitle","timePickerToolbarTitle","dateRangePickerToolbarTitle","clockLabelText","time","adapter","_timeViews$view","concat","format","hoursClockNumberText","minutesClockNumberText","secondsClockNumberText","selectViewText","calendarWeekNumberHeaderLabel","calendarWeekNumberHeaderText","calendarWeekNumberAriaLabelText","weekNumber","calendarWeekNumberText","openDatePickerDialogue","value","utils","isValid","openTimePickerDialogue","timeTableLabel","dateTableLabel","fieldYearPlaceholder","params","repeat","digitAmount","fieldMonthPlaceholder","contentType","fieldDayPlaceholder","fieldHoursPlaceholder","fieldMinutesPlaceholder","fieldSecondsPlaceholder","fieldMeridiemPlaceholder","roRO"],"sources":["C:/Users/carax/Desktop/SideProject/SFDB-Project/front/node_modules/@mui/x-date-pickers/locales/roRO.js"],"sourcesContent":["import { getPickersLocalization } from './utils/getPickersLocalization';\n// maps TimeView to its translation\nconst timeViews = {\n  hours: 'Ore',\n  minutes: 'Minute',\n  seconds: 'Secunde',\n  meridiem: 'Meridiane'\n};\nconst roROPickers = {\n  // Calendar navigation\n  previousMonth: 'Luna anterioară',\n  nextMonth: 'Luna următoare',\n  // View navigation\n  openPreviousView: 'Deschideți vizualizarea anterioară',\n  openNextView: 'Deschideți vizualizarea următoare',\n  calendarViewSwitchingButtonAriaLabel: view => view === 'year' ? 'Vizualizarea anuală este deschisă, comutați la vizualizarea calendarului' : 'Vizualizarea calendarului este deschisă, comutați la vizualizarea anuală',\n  // DateRange placeholders\n  start: 'Început',\n  end: 'Sfârșit',\n  // Action bar\n  cancelButtonLabel: 'Anulare',\n  clearButtonLabel: 'Ștergere',\n  okButtonLabel: 'OK',\n  todayButtonLabel: 'Astăzi',\n  // Toolbar titles\n  datePickerToolbarTitle: 'Selectați data',\n  dateTimePickerToolbarTitle: 'Selectați data și ora',\n  timePickerToolbarTitle: 'Selectați ora',\n  dateRangePickerToolbarTitle: 'Selectați intervalul de date',\n  // Clock labels\n  clockLabelText: (view, time, adapter) => {\n    var _timeViews$view;\n    return `Selectați ${(_timeViews$view = timeViews[view]) != null ? _timeViews$view : view}. ${time === null ? 'Nicio oră selectată' : `Ora selectată este ${adapter.format(time, 'fullTime')}`}`;\n  },\n  hoursClockNumberText: hours => `${hours} ${timeViews.hours}`,\n  minutesClockNumberText: minutes => `${minutes} ${timeViews.minutes}`,\n  secondsClockNumberText: seconds => `${seconds}  ${timeViews.seconds}`,\n  // Digital clock labels\n  selectViewText: view => `Selectați ${timeViews[view]}`,\n  // Calendar labels\n  calendarWeekNumberHeaderLabel: 'Număr săptămână',\n  calendarWeekNumberHeaderText: '#',\n  calendarWeekNumberAriaLabelText: weekNumber => `Săptămâna ${weekNumber}`,\n  calendarWeekNumberText: weekNumber => `${weekNumber}`,\n  // Open picker labels\n  openDatePickerDialogue: (value, utils) => value !== null && utils.isValid(value) ? `Selectați data, data selectată este ${utils.format(value, 'fullDate')}` : 'Selectați data',\n  openTimePickerDialogue: (value, utils) => value !== null && utils.isValid(value) ? `Selectați ora, ora selectată este ${utils.format(value, 'fullTime')}` : 'Selectați ora',\n  // Table labels\n  timeTableLabel: 'Selectați ora',\n  dateTableLabel: 'Selectați data',\n  // Field section placeholders\n  fieldYearPlaceholder: params => 'A'.repeat(params.digitAmount),\n  fieldMonthPlaceholder: params => params.contentType === 'letter' ? 'LLLL' : 'LL',\n  fieldDayPlaceholder: () => 'ZZ',\n  // fieldWeekDayPlaceholder: params => params.contentType === 'letter' ? 'EEEE' : 'EE',\n  fieldHoursPlaceholder: () => 'hh',\n  fieldMinutesPlaceholder: () => 'mm',\n  fieldSecondsPlaceholder: () => 'ss',\n  fieldMeridiemPlaceholder: () => 'aa'\n};\nexport const roRO = getPickersLocalization(roROPickers);"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}